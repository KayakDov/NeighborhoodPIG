//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32267302
// Cuda compilation tools, release 12.0, V12.0.140
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_52
.address_size 64

	// .globl	toUnitVecKernel

.visible .entry toUnitVecKernel(
	.param .u32 toUnitVecKernel_param_0,
	.param .u64 toUnitVecKernel_param_1,
	.param .u32 toUnitVecKernel_param_2,
	.param .u32 toUnitVecKernel_param_3,
	.param .u64 toUnitVecKernel_param_4,
	.param .u32 toUnitVecKernel_param_5,
	.param .u32 toUnitVecKernel_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<19>;
	.reg .f64 	%fd<13>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [toUnitVecKernel_param_0];
	ld.param.u64 	%rd1, [toUnitVecKernel_param_1];
	ld.param.u32 	%r2, [toUnitVecKernel_param_2];
	ld.param.u32 	%r3, [toUnitVecKernel_param_3];
	ld.param.u64 	%rd2, [toUnitVecKernel_param_4];
	ld.param.u32 	%r4, [toUnitVecKernel_param_5];
	ld.param.u32 	%r5, [toUnitVecKernel_param_6];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.s32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB0_2;

	mul.lo.s32 	%r10, %r1, 3;
	div.s32 	%r11, %r10, %r2;
	mul.lo.s32 	%r12, %r11, %r2;
	sub.s32 	%r13, %r10, %r12;
	mad.lo.s32 	%r14, %r11, %r3, %r13;
	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r14, 8;
	add.s64 	%rd5, %rd3, %rd4;
	div.s32 	%r15, %r10, %r4;
	mul.lo.s32 	%r16, %r15, %r4;
	sub.s32 	%r17, %r10, %r16;
	mad.lo.s32 	%r18, %r15, %r5, %r17;
	ld.global.f64 	%fd1, [%rd5];
	ld.global.f64 	%fd2, [%rd5+8];
	mul.f64 	%fd3, %fd2, %fd2;
	fma.rn.f64 	%fd4, %fd1, %fd1, %fd3;
	ld.global.f64 	%fd5, [%rd5+16];
	fma.rn.f64 	%fd6, %fd5, %fd5, %fd4;
	sqrt.rn.f64 	%fd7, %fd6;
	div.rn.f64 	%fd8, %fd1, %fd7;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r18, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd8;
	ld.global.f64 	%fd9, [%rd5+8];
	div.rn.f64 	%fd10, %fd9, %fd7;
	st.global.f64 	[%rd8+8], %fd10;
	ld.global.f64 	%fd11, [%rd5+16];
	div.rn.f64 	%fd12, %fd11, %fd7;
	st.global.f64 	[%rd8+16], %fd12;

$L__BB0_2:
	ret;

}

