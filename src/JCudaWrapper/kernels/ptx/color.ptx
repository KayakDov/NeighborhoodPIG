//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32267302
// Cuda compilation tools, release 12.0, V12.0.140
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_52
.address_size 64

	// .globl	colorKernel

.visible .entry colorKernel(
	.param .u64 colorKernel_param_0,
	.param .u32 colorKernel_param_1,
	.param .u64 colorKernel_param_2,
	.param .u32 colorKernel_param_3,
	.param .u32 colorKernel_param_4
)
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<58>;
	.reg .f64 	%fd<49>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [colorKernel_param_0];
	ld.param.u32 	%r2, [colorKernel_param_1];
	ld.param.u64 	%rd3, [colorKernel_param_2];
	ld.param.u32 	%r3, [colorKernel_param_3];
	ld.param.u32 	%r4, [colorKernel_param_4];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.s32 	%p1, %r1, %r4;
	@%p1 bra 	$L__BB0_13;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.lo.s32 	%r8, %r1, %r2;
	mul.wide.s32 	%rd5, %r8, 8;
	add.s64 	%rd6, %rd4, %rd5;
	mul.lo.s32 	%r9, %r1, %r3;
	cvta.to.global.u64 	%rd7, %rd3;
	mul.wide.s32 	%rd8, %r9, 4;
	add.s64 	%rd1, %rd7, %rd8;
	ld.global.f64 	%fd1, [%rd6];
	setp.ge.f64 	%p2, %fd1, 0d0000000000000000;
	setp.lt.f64 	%p3, %fd1, 0d3FF0C152382D7365;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_2;

$L__BB0_12:
	mov.u32 	%r50, 255;
	st.global.u32 	[%rd1], %r50;
	mul.f64 	%fd42, %fd1, 0d4008000000000000;
	div.rn.f64 	%fd43, %fd42, 0d400921FB54442D18;
	mul.f64 	%fd44, %fd43, 0d406FE00000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r51}, %fd44;
	}
	and.b32  	%r52, %r51, -2147483648;
	mov.f64 	%fd45, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r53}, %fd45;
	}
	or.b32  	%r54, %r53, %r52;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r55, %temp}, %fd45;
	}
	mov.b64 	%fd46, {%r55, %r54};
	add.rz.f64 	%fd47, %fd44, %fd46;
	cvt.rzi.f64.f64 	%fd48, %fd47;
	cvt.rzi.s32.f64 	%r56, %fd48;
	st.global.u32 	[%rd1+4], %r56;
	mov.u32 	%r57, 0;
	st.global.u32 	[%rd1+8], %r57;
	bra.uni 	$L__BB0_13;

$L__BB0_2:
	setp.ge.f64 	%p5, %fd1, 0d3FF0C152382D7365;
	setp.lt.f64 	%p6, %fd1, 0d4000C152382D7365;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_3;

$L__BB0_11:
	mul.f64 	%fd34, %fd1, 0dC008000000000000;
	div.rn.f64 	%fd35, %fd34, 0d400921FB54442D18;
	add.f64 	%fd36, %fd35, 0d4000000000000000;
	mul.f64 	%fd37, %fd36, 0d406FE00000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r42}, %fd37;
	}
	and.b32  	%r43, %r42, -2147483648;
	mov.f64 	%fd38, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r44}, %fd38;
	}
	or.b32  	%r45, %r44, %r43;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r46, %temp}, %fd38;
	}
	mov.b64 	%fd39, {%r46, %r45};
	add.rz.f64 	%fd40, %fd37, %fd39;
	cvt.rzi.f64.f64 	%fd41, %fd40;
	cvt.rzi.s32.f64 	%r47, %fd41;
	st.global.u32 	[%rd1], %r47;
	mov.u32 	%r48, 255;
	st.global.u32 	[%rd1+4], %r48;
	mov.u32 	%r49, 0;
	st.global.u32 	[%rd1+8], %r49;
	bra.uni 	$L__BB0_13;

$L__BB0_3:
	setp.ge.f64 	%p8, %fd1, 0d4000C152382D7365;
	setp.lt.f64 	%p9, %fd1, 0d400921FB54442D18;
	and.pred  	%p10, %p8, %p9;
	@%p10 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_4;

$L__BB0_10:
	mov.u32 	%r34, 0;
	st.global.u32 	[%rd1], %r34;
	mov.u32 	%r35, 255;
	st.global.u32 	[%rd1+4], %r35;
	mul.f64 	%fd26, %fd1, 0d4008000000000000;
	div.rn.f64 	%fd27, %fd26, 0d400921FB54442D18;
	add.f64 	%fd28, %fd27, 0dC000000000000000;
	mul.f64 	%fd29, %fd28, 0d406FE00000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r36}, %fd29;
	}
	and.b32  	%r37, %r36, -2147483648;
	mov.f64 	%fd30, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r38}, %fd30;
	}
	or.b32  	%r39, %r38, %r37;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r40, %temp}, %fd30;
	}
	mov.b64 	%fd31, {%r40, %r39};
	add.rz.f64 	%fd32, %fd29, %fd31;
	cvt.rzi.f64.f64 	%fd33, %fd32;
	cvt.rzi.s32.f64 	%r41, %fd33;
	st.global.u32 	[%rd1+8], %r41;
	bra.uni 	$L__BB0_13;

$L__BB0_4:
	setp.ge.f64 	%p11, %fd1, 0d400921FB54442D18;
	setp.lt.f64 	%p12, %fd1, 0d4010C152382D7365;
	and.pred  	%p13, %p11, %p12;
	@%p13 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_5;

$L__BB0_9:
	mov.u32 	%r26, 0;
	st.global.u32 	[%rd1], %r26;
	mul.f64 	%fd18, %fd1, 0dC008000000000000;
	div.rn.f64 	%fd19, %fd18, 0d400921FB54442D18;
	add.f64 	%fd20, %fd19, 0d4010000000000000;
	mul.f64 	%fd21, %fd20, 0d406FE00000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd21;
	}
	and.b32  	%r28, %r27, -2147483648;
	mov.f64 	%fd22, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd22;
	}
	or.b32  	%r30, %r29, %r28;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r31, %temp}, %fd22;
	}
	mov.b64 	%fd23, {%r31, %r30};
	add.rz.f64 	%fd24, %fd21, %fd23;
	cvt.rzi.f64.f64 	%fd25, %fd24;
	cvt.rzi.s32.f64 	%r32, %fd25;
	st.global.u32 	[%rd1+4], %r32;
	mov.u32 	%r33, 255;
	st.global.u32 	[%rd1+8], %r33;
	bra.uni 	$L__BB0_13;

$L__BB0_5:
	setp.ge.f64 	%p14, %fd1, 0d4010C152382D7365;
	setp.lt.f64 	%p15, %fd1, 0d4014F1A6C638D03F;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_6;

$L__BB0_8:
	mul.f64 	%fd10, %fd1, 0d4008000000000000;
	div.rn.f64 	%fd11, %fd10, 0d400921FB54442D18;
	add.f64 	%fd12, %fd11, 0dC010000000000000;
	mul.f64 	%fd13, %fd12, 0d406FE00000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r18}, %fd13;
	}
	and.b32  	%r19, %r18, -2147483648;
	mov.f64 	%fd14, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd14;
	}
	or.b32  	%r21, %r20, %r19;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd14;
	}
	mov.b64 	%fd15, {%r22, %r21};
	add.rz.f64 	%fd16, %fd13, %fd15;
	cvt.rzi.f64.f64 	%fd17, %fd16;
	cvt.rzi.s32.f64 	%r23, %fd17;
	st.global.u32 	[%rd1], %r23;
	mov.u32 	%r24, 0;
	st.global.u32 	[%rd1+4], %r24;
	mov.u32 	%r25, 255;
	st.global.u32 	[%rd1+8], %r25;
	bra.uni 	$L__BB0_13;

$L__BB0_6:
	setp.ltu.f64 	%p17, %fd1, 0d4014F1A6C638D03F;
	setp.geu.f64 	%p18, %fd1, 0d401921FB54442D18;
	or.pred  	%p19, %p17, %p18;
	@%p19 bra 	$L__BB0_13;

	mov.u32 	%r10, 255;
	st.global.u32 	[%rd1], %r10;
	mov.u32 	%r11, 0;
	st.global.u32 	[%rd1+4], %r11;
	mul.f64 	%fd2, %fd1, 0dC008000000000000;
	div.rn.f64 	%fd3, %fd2, 0d400921FB54442D18;
	add.f64 	%fd4, %fd3, 0d4018000000000000;
	mul.f64 	%fd5, %fd4, 0d406FE00000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12}, %fd5;
	}
	and.b32  	%r13, %r12, -2147483648;
	mov.f64 	%fd6, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r14}, %fd6;
	}
	or.b32  	%r15, %r14, %r13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r16, %temp}, %fd6;
	}
	mov.b64 	%fd7, {%r16, %r15};
	add.rz.f64 	%fd8, %fd5, %fd7;
	cvt.rzi.f64.f64 	%fd9, %fd8;
	cvt.rzi.s32.f64 	%r17, %fd9;
	st.global.u32 	[%rd1+8], %r17;

$L__BB0_13:
	ret;

}

