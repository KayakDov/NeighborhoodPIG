
//indices generated by LU factorization start at 1 and not 0. This method is for that indexing system.

__device__ void swap(double* vec, int i, int j){
    if(i == j) return;
    double temp = vec[i];
    vec[i] = vec[j];
    vec[j] = temp;
}

extern "C" __global__ void unPivotKernel(int *pivotScheme, int height, double *pivoted, int ldP, int n) {
    

    int idx = blockIdx.x * blockDim.x + threadIdx.x;
    
    if (idx >= n) return;  

    for (int i = height - 1; i >= 0; i--) {
        int currentPos = idx * ldP + i;
        int pivotPos = idx * ldP + (pivotScheme[i] - 1);  // Adjusted for zero-indexed `pivotScheme`

        swap(pivoted, currentPos, pivotPos);
    }
    
}

//nvcc -ptx unPivot.cu 