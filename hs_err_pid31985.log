#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007064d44327ba, pid=31985, tid=31989
#
# JRE version: OpenJDK Runtime Environment (21.0.5+11) (build 21.0.5+11-Ubuntu-1ubuntu124.04)
# Java VM: OpenJDK 64-Bit Server VM (21.0.5+11-Ubuntu-1ubuntu124.04, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)
# Problematic frame:
# C  [libcuda.so.1+0x2327ba]
#
# Core dump will be written. Default location: Core dumps may be processed with "/usr/share/apport/apport -p%p -s%s -c%c -d%d -P%P -u%u -g%g -- %E" (or dumping to /home/dov/projects/NeighborhoodPIG/core.31985)
#
# If you would like to submit a bug report, please visit:
#   https://bugs.launchpad.net/ubuntu/+source/openjdk-21
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: -Dfile.encoding=UTF-8 --module-path=/home/dov/projects/NeighborhoodPIG/build/classes main.TestStuff

Host: AMD Ryzen 9 6900HS with Radeon Graphics, 16 cores, 30G, Ubuntu 24.04.1 LTS
Time: Wed Nov 27 06:40:52 2024 IST elapsed time: 0.473467 seconds (0d 0h 0m 0s)

---------------  T H R E A D  ---------------

Current thread (0x000070650001a0a0):  JavaThread "main"             [_thread_in_native, id=31989, stack(0x0000706505900000,0x0000706505a00000) (1024K)]

Stack: [0x0000706505900000,0x0000706505a00000],  sp=0x00007065059fddb0,  free space=1015k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [libcuda.so.1+0x2327ba]
C  [libcuda.so.1+0x4e22e7]
C  [libcuda.so.1+0x141496]
C  [libcuda.so.1+0x1419b0]
C  [libcuda.so.1+0x142707]
C  [libcuda.so.1+0x2ec0e1]
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
J 433  jcuda.runtime.JCuda.cudaMemcpyAsyncNative(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I (0 bytes) @ 0x00007064f03c223c [0x00007064f03c21a0+0x000000000000009c]
J 540 c2 JCudaWrapper.array.DArray.get(LJCudaWrapper/resourceManagement/Handle;[DIII)V (26 bytes) @ 0x00007064f03da6d4 [0x00007064f03d9ac0+0x0000000000000c14]
j  JCudaWrapper.array.DArray.get(LJCudaWrapper/resourceManagement/Handle;[DIIIII)V+56
j  JCudaWrapper.algebra.Vector.toArray()[D+27
j  JCudaWrapper.algebra.Vector.toString()Ljava/lang/String;+1
j  main.TestStuff.main([Ljava/lang/String;)V+49
v  ~StubRoutines::call_stub 0x00007064efc5fcc6

siginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x00000000001fffe0

Registers:
RAX=0x0000000000000001, RBX=0x00007065059fe3e8, RCX=0x0000000000000001, RDX=0x0000000000000005
RSP=0x00007065059fddb0, RBP=0x00007065059fddd0, RSI=0x00000000001fff90, RDI=0x0000706501673800
R8 =0x0000000000000002, R9 =0x0000000000000000, R10=0x0000000000000000, R11=0x0000000000000246
R12=0x00007065059fe258, R13=0x00007065059fe3e8, R14=0x00007065059fe258, R15=0x0000000000000001
RIP=0x00007064d44327ba, EFLAGS=0x0000000000010202, CSGSFS=0x002b000000000033, ERR=0x0000000000000004
  TRAPNO=0x000000000000000e


Register to memory mapping:

RAX=0x0000000000000001 is an unknown value
RBX=0x00007065059fe3e8 is pointing into the stack for thread: 0x000070650001a0a0
RCX=0x0000000000000001 is an unknown value
RDX=0x0000000000000005 is an unknown value
RSP=0x00007065059fddb0 is pointing into the stack for thread: 0x000070650001a0a0
RBP=0x00007065059fddd0 is pointing into the stack for thread: 0x000070650001a0a0
RSI=0x00000000001fff90 is an unknown value
RDI=0x0000706501673800 points into unknown readable memory: 0x0000000706501673 | 73 16 50 06 07 00 00 00
R8 =0x0000000000000002 is an unknown value
R9 =0x0 is null
R10=0x0 is null
R11=0x0000000000000246 is an unknown value
R12=0x00007065059fe258 is pointing into the stack for thread: 0x000070650001a0a0
R13=0x00007065059fe3e8 is pointing into the stack for thread: 0x000070650001a0a0
R14=0x00007065059fe258 is pointing into the stack for thread: 0x000070650001a0a0
R15=0x0000000000000001 is an unknown value

Top of Stack: (sp=0x00007065059fddb0)
0x00007065059fddb0:   000070650081edd0 0000000000000000
0x00007065059fddc0:   000070650063e780 000070650081edd0
0x00007065059fddd0:   00007065059fe000 00007064d46e22e7
0x00007065059fdde0:   00007064efc66a90 0000000000000000
0x00007065059fddf0:   0000000000000000 00007065059fde90
0x00007065059fde00:   0000706500000000 0000000000000000
0x00007065059fde10:   000000027f622b00 000070650081edd0
0x00007065059fde20:   00000000000034bd 000000050081edd0
0x00007065059fde30:   0000000000000000 0000000000000029
0x00007065059fde40:   00007065059fdeb0 0000706506052358
0x00007065059fde50:   2f616475636a4c28 0000000000000000
0x00007065059fde60:   636170612f67726f 0000706506037591
0x00007065059fde70:   2020202020202020 41ad805300000000
0x00007065059fde80:   0000706418e1e220 0000000000000000
0x00007065059fde90:   0000000000000001 0000000000000000
0x00007065059fdea0:   0000000000000000 0000000000000000
0x00007065059fdeb0:   0000000000000000 000070650081edd0
0x00007065059fdec0:   0000000000000000 00007065059fe258
0x00007065059fded0:   0000000000000101 000070650081edd0
0x00007065059fdee0:   00007065007b1880 0000000000000003
0x00007065059fdef0:   0000000000000000 00007065059fe0e0
0x00007065059fdf00:   0000000000000000 0000000000000000
0x00007065059fdf10:   0000000000000000 0000000000000080
0x00007065059fdf20:   00007065059fdf90 0000706506052358
0x00007065059fdf30:   0000706500000001 0000100000000000
0x00007065059fdf40:   4024000000000000 0000706506037591
0x00007065059fdf50:   000070650081edd0 41ad805300000000
0x00007065059fdf60:   000070650063e780 0000000000000000
0x00007065059fdf70:   0000000000000000 0000000000000000
0x00007065059fdf80:   0000000000000080 0000000000000000
0x00007065059fdf90:   000070650063e798 df131842d7fa4e00
0x00007065059fdfa0:   00007065059fdff0 000070650063e780 

Instructions: (pc=0x00007064d44327ba)
0x00007064d44326ba:   00 02 00 00 00 48 83 c4 08 31 c0 5b 41 5c 41 5d
0x00007064d44326ca:   5d c3 0f 1f 40 00 48 8b 42 48 0f b6 80 09 01 00
0x00007064d44326da:   00 83 e0 7e 3c 1e 0f 94 c0 e9 ff fe ff ff 0f 1f
0x00007064d44326ea:   84 00 00 00 00 00 4d 8b ad 68 01 00 00 e9 56 ff
0x00007064d44326fa:   ff ff 0f 1f 40 00 48 89 df e8 78 fc ff ff 89 83
0x00007064d443270a:   a4 00 00 00 83 f8 ff 0f 85 10 ff ff ff eb 9c 31
0x00007064d443271a:   c0 e9 a8 fe ff ff 31 c0 48 83 3e 00 0f 84 14 01
0x00007064d443272a:   00 00 55 48 89 e5 41 54 53 48 89 f3 48 83 ec 10
0x00007064d443273a:   48 83 7e 08 00 0f 84 e8 00 00 00 48 83 7e 10 00
0x00007064d443274a:   0f 84 dd 00 00 00 8b 07 49 89 fc 89 c1 83 f8 02
0x00007064d443275a:   0f 84 98 00 00 00 85 c0 0f 84 18 02 00 00 83 f8
0x00007064d443276a:   01 0f 85 9f 01 00 00 48 8b 77 20 48 85 f6 0f 84
0x00007064d443277a:   ca 00 00 00 48 83 be 10 02 00 00 00 0f 85 c7 02
0x00007064d443278a:   00 00 48 8b 76 48 48 8b b6 88 02 00 00 48 8b 76
0x00007064d443279a:   08 85 c0 0f 85 05 02 00 00 49 8b 7c 24 18 48 85
0x00007064d44327aa:   f6 0f 95 c0 48 85 ff 0f 95 c1 21 c8 84 c0 74 12
0x00007064d44327ba:   48 8b 76 50 89 55 ec e8 7a d7 15 00 8b 55 ec 48
0x00007064d44327ca:   89 c7 48 85 ff 74 70 48 8b 47 48 48 8b 80 08 01
0x00007064d44327da:   00 00 48 c1 e8 28 83 e0 0e 3c 02 75 05 f6 c2 04
0x00007064d44327ea:   74 3c 41 8b 0c 24 eb 58 66 0f 1f 44 00 00 48 8b
0x00007064d44327fa:   47 60 48 85 c0 0f 84 73 01 00 00 48 8b 40 40 48
0x00007064d443280a:   8b 8f 90 00 00 00 8b 00 48 0f a3 c1 0f 82 5c 01
0x00007064d443281a:   00 00 83 e2 04 0f 85 53 01 00 00 0f 1f 00 b8 01
0x00007064d443282a:   00 00 00 48 83 c4 10 5b 41 5c 5d c3 66 2e 0f 1f
0x00007064d443283a:   84 00 00 00 00 00 c3 41 8b 04 24 0f 1f 00 89 c1
0x00007064d443284a:   83 f9 01 0f 84 6d 01 00 00 0f 87 b7 00 00 00 49
0x00007064d443285a:   8b 4c 24 08 49 8b 84 24 b0 00 00 00 8b 51 70 48
0x00007064d443286a:   39 d0 73 ba 48 8b 33 48 8d 3c 30 48 39 fa 72 ae
0x00007064d443287a:   44 0f b6 41 18 8b 79 10 41 8d 90 6f ff ff ff 83
0x00007064d443288a:   fa 0d 0f 87 ba 01 00 00 8b 51 6c 48 09 f0 83 ea
0x00007064d443289a:   01 48 85 c2 75 88 8b b1 98 00 00 00 31 d2 8d 44
0x00007064d44328aa:   37 ff f7 f6 49 8b 94 24 b8 00 00 00 85 ff 0f 84 


Stack slot to memory mapping:

stack at sp + 0 slots: 0x000070650081edd0 points into unknown readable memory: 0x0000000000000001 | 01 00 00 00 00 00 00 00
stack at sp + 1 slots: 0x0 is null
stack at sp + 2 slots: 0x000070650063e780 points into unknown readable memory: 0x0000000100000000 | 00 00 00 00 01 00 00 00
stack at sp + 3 slots: 0x000070650081edd0 points into unknown readable memory: 0x0000000000000001 | 01 00 00 00 00 00 00 00
stack at sp + 4 slots: 0x00007065059fe000 is pointing into the stack for thread: 0x000070650001a0a0
stack at sp + 5 slots: 0x00007064d46e22e7: <offset 0x00000000004e22e7> in /lib/x86_64-linux-gnu/libcuda.so.1 at 0x00007064d4200000
stack at sp + 6 slots: 0x00007064efc66a90 is at code_begin+-112 in 
[CodeBlob (0x00007064efc66a90)]
Framesize: 0
BufferBlob (0x00007064efc66a90) used for Interpreter
stack at sp + 7 slots: 0x0 is null


Compiled method (n/a) 481  433     n 0       jcuda.runtime.JCuda::cudaMemcpyAsyncNative (native)
 total in heap  [0x00007064f03c2010,0x00007064f03c23d0] = 960
 relocation     [0x00007064f03c2168,0x00007064f03c21a0] = 56
 main code      [0x00007064f03c21a0,0x00007064f03c23c8] = 552
 oops           [0x00007064f03c23c8,0x00007064f03c23d0] = 8

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x000070647445b7b8} 'cudaMemcpyAsyncNative' '(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I' in 'jcuda/runtime/JCuda'
  # parm0:    rsi:rsi   = 'jcuda/Pointer'
  # parm1:    rdx:rdx   = 'jcuda/Pointer'
  # parm2:    rcx:rcx   = long
  # parm3:    r8        = int
  # parm4:    r9:r9     = 'jcuda/runtime/cudaStream_t'
  #           [sp+0x60]  (sp of caller)
  0x00007064f03c21a0: 448b 5608 | 49bb 0000 | 007f 6470 | 0000 4d03 | d349 3bc2 | 0f84 0600 

  0x00007064f03c21b8: ;   {runtime_call ic_miss_stub}
  0x00007064f03c21b8: 0000 e9c1 | ae8e ff90 
[Verified Entry Point]
  0x00007064f03c21c0: 8984 2400 | c0fe ff55 | 488b ec48 | 83ec 5090 | 4181 7f20 | 0100 0000 

  0x00007064f03c21d8: ;   {runtime_call StubRoutines (final stubs)}
  0x00007064f03c21d8: 7405 e8c1 | 128d ff4c | 894c 2428 | 4983 f900 | 488d 4424 | 2848 0f44 | 4424 2848 | 8904 244d 
  0x00007064f03c21f8: 8bc8 4c8b | c148 8954 | 2410 4883 | fa00 488d | 4c24 1048 | 0f44 4c24 | 1048 8974 | 2408 4883 
  0x00007064f03c2218: fe00 488d | 5424 0848 | 0f44 5424 

  0x00007064f03c2224: ;   {oop(a 'java/lang/Class'{0x000000063381c6b0} = 'jcuda/runtime/JCuda')}
  0x00007064f03c2224: 0849 beb0 | c681 3306 | 0000 004c | 8974 2438 | 4c8d 7424 | 3849 8bf6 

  0x00007064f03c223c: ;   {internal_word}
  0x00007064f03c223c: c5f8 7749 | ba3c 223c | f064 7000 | 004d 8997 | a003 0000 | 4989 a798 

  0x00007064f03c2254: ;   {external_word}
  0x00007064f03c2254: 0300 0080 | 3d2f beb3 | 1600 0f84 | 3c00 0000 | 5652 5141 

  0x00007064f03c2268: ;   {metadata({method} {0x000070647445b7b8} 'cudaMemcpyAsyncNative' '(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I' in 'jcuda/runtime/JCuda')}
  0x00007064f03c2268: 5041 5148 | beb8 b745 | 7464 7000 | 0049 8bff | 40f6 c40f | 0f84 1200 | 0000 4883 

  0x00007064f03c2284: ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007064f03c2284: ec08 e805 | 7e3f 1648 | 83c4 08e9 | 0500 0000 

  0x00007064f03c2294: ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007064f03c2294: e8f7 7d3f | 1641 5941 | 5859 5a5e | 498d bfb8 | 0300 0041 | c787 4404 | 0000 0400 

  0x00007064f03c22b0: ;   {runtime_call Java_jcuda_runtime_JCuda_cudaMemcpyAsyncNative}
  0x00007064f03c22b0: 0000 e859 | dac5 8dc5 | f877 41c7 | 8744 0400 | 0005 0000 | 00f0 8344 | 24c0 0049 | 3baf 4804 
  0x00007064f03c22d0: 0000 0f87 | 0e00 0000 | 4183 bf40 | 0400 0000 | 0f84 2400 | 0000 c5f8 | 7748 8945 | f849 8bff 
  0x00007064f03c22f0: 4c8b e448 | 83ec 0048 

  0x00007064f03c22f8: ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007064f03c22f8: 83e4 f0e8 | 5021 f615 | 498b e44d | 33e4 488b | 45f8 41c7 | 8744 0400 | 0008 0000 | 0041 83bf 
  0x00007064f03c2318: c004 0000 | 020f 847f 

  0x00007064f03c2320: ;   {external_word}
  0x00007064f03c2320: 0000 0080 | 3d63 bdb3 | 1600 0f84 | 3600 0000 | 4889 45f8 

  0x00007064f03c2334: ;   {metadata({method} {0x000070647445b7b8} 'cudaMemcpyAsyncNative' '(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I' in 'jcuda/runtime/JCuda')}
  0x00007064f03c2334: 48be b8b7 | 4574 6470 | 0000 498b | ff40 f6c4 | 0f0f 8412 | 0000 0048 

  0x00007064f03c234c: ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007064f03c234c: 83ec 08e8 | 2c7e 3f16 | 4883 c408 | e905 0000 

  0x00007064f03c235c: ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007064f03c235c: 00e8 1e7e | 3f16 488b | 45f8 49c7 | 8798 0300 | 0000 0000 | 0049 c787 | a003 0000 | 0000 0000 
  0x00007064f03c237c: c5f8 7749 | 8b8f 2804 | 0000 c781 | 0001 0000 | 0000 0000 | c949 837f | 0800 0f85 | 0100 0000 
  0x00007064f03c239c: ;   {runtime_call StubRoutines (initial stubs)}
  0x00007064f03c239c: c3e9 5ed8 | 89ff c5f8 | 7748 8945 | f84c 8be4 | 4883 ec00 | 4883 e4f0 

  0x00007064f03c23b4: ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007064f03c23b4: e837 8d3f | 1649 8be4 | 4d33 e448 | 8b45 f8e9 | 5bff ffff 
[/MachCode]


Compiled method (c2) 492  540       4       JCudaWrapper.array.DArray::get (26 bytes)
 total in heap  [0x00007064f03d9790,0x00007064f03de208] = 19064
 relocation     [0x00007064f03d98e8,0x00007064f03d9ab8] = 464
 main code      [0x00007064f03d9ac0,0x00007064f03dbc20] = 8544
 stub code      [0x00007064f03dbc20,0x00007064f03dbc48] = 40
 oops           [0x00007064f03dbc48,0x00007064f03dbca8] = 96
 metadata       [0x00007064f03dbca8,0x00007064f03dbf98] = 752
 scopes data    [0x00007064f03dbf98,0x00007064f03ddb88] = 7152
 scopes pcs     [0x00007064f03ddb88,0x00007064f03de008] = 1152
 dependencies   [0x00007064f03de008,0x00007064f03de078] = 112
 handler table  [0x00007064f03de078,0x00007064f03de1b0] = 312
 nul chk table  [0x00007064f03de1b0,0x00007064f03de208] = 88

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x0000706474481890} 'get' '(LJCudaWrapper/resourceManagement/Handle;[DIII)V' in 'JCudaWrapper/array/DArray'
  # this:     rsi:rsi   = 'JCudaWrapper/array/DArray'
  # parm0:    rdx:rdx   = 'JCudaWrapper/resourceManagement/Handle'
  # parm1:    rcx:rcx   = '[D'
  # parm2:    r8        = int
  # parm3:    r9        = int
  # parm4:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x00007064f03d9ac0: 448b 5608 | 49bb 0000 | 007f 6470 | 0000 4d03 | d349 3bc2 

  0x00007064f03d9ad4: ;   {runtime_call ic_miss_stub}
  0x00007064f03d9ad4: 0f85 a635 | 8dff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x00007064f03d9ae0: 8984 2400 | c0fe ff55 | 4883 ec60 | 4181 7f20 | 0100 0000 | 0f85 1821 | 0000 897c | 241c 4489 
  0x00007064f03d9b00: 4c24 3044 | 8944 2418 | 4889 4c24 | 2848 8954 | 2410 4889 | 7424 204d | 8b87 b801 | 0000 4d8b 
  0x00007064f03d9b20: d049 83c2 | 184d 3b97 | c801 0000 | 0f83 fc0e | 0000 4d89 | 97b8 0100 | 0041 0f18 | 8200 0100 
  0x00007064f03d9b40: 0049 c700 | 0100 0000 | 410f 1882 | 4001 0000 

  0x00007064f03d9b50: ;   {metadata('java/lang/Object'[])}
  0x00007064f03d9b50: 41c7 4008 | 4012 0000 | 410f 1882 | 8001 0000 | 41c7 400c | 0100 0000 | 4589 6014 | 4c8b 5424 
  0x00007064f03d9b70: 284d 8bda | 49c1 eb03 | 4589 5810 | 498b afb8 | 0100 004c | 8bd5 4983 | c228 4d3b | 97c8 0100 
  0x00007064f03d9b90: 000f 83c5 | 0e00 004d | 8997 b801 | 0000 410f | 1882 0001 | 0000 48c7 | 4500 0100 

  0x00007064f03d9bac: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007064f03d9bac: 0000 c745 | 08d0 a00e | 0044 8965 | 0c44 8965 | 2448 c745 | 10ff ffff | ff4d 8bd8 | 49c1 eb03 
  0x00007064f03d9bcc: 49ba 0100 | 0000 5044 | 0000 4c89 | 5518 4489 | 5d20 498b | 9fb8 0100 | 004c 8bd3 | 4983 c238 
  0x00007064f03d9bec: 4d3b 97c8 | 0100 000f | 8394 0e00 | 004d 8997 | b801 0000 | 410f 1882 | 0001 0000 | 48c7 0301 
  0x00007064f03d9c0c: ;   {metadata('java/util/stream/ReferencePipeline$Head')}
  0x00007064f03d9c0c: 0000 00c7 | 4308 201b | 0e00 4489 | 630c 4c89 | 6310 4c89 | 6318 4c89 | 6320 4489 | 632c 4c89 
  0x00007064f03d9c2c: 6330 4c8b | dd49 c1eb | 0344 895b | 284c 8bd5 | 488b eb48 | c1ed 034c | 8bdb 4d33 | d349 c1ea 
  0x00007064f03d9c4c: 164d 85d2 | 741a 49c1 | eb09 48bf | 00c0 74e3 | 6470 0000 | 4903 fb80 | 3f02 0f85 | 590c 0000 
  0x00007064f03d9c6c: 4180 7f40 | 000f 8509 | 0b00 0089 | 6b1c 4488 | 631a 0fb6 | 6b18 c743 | 0c50 0000 | 00c7 4314 
  0x00007064f03d9c8c: 5f00 0000 | 4489 6310 | 85ed 0f85 | e016 0000 | 448b 4b28 | c643 1801 

  0x00007064f03d9ca4: ; implicit exception: dispatches to 0x00007064f03dba94
  0x00007064f03d9ca4: 478b 74cc | 0841 807f | 4000 0f85 | 030b 0000 | 4489 6328 | c743 146f 

  0x00007064f03d9cbc: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x000000063381c660})}
  0x00007064f03d9cbc: 0000 0149 | ba60 c681 | 3306 0000 | 0041 0fb6 | 6a19 85ed | 0f84 d616 

  0x00007064f03d9cd4: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x000000063381c680})}
  0x00007064f03d9cd4: 0000 49ba | 80c6 8133 | 0600 0000 | 458b 4224 | 458b 521c | 4181 e06f | 0000 0145 | 3bc2 0f85 
  0x00007064f03d9cf4: 2814 0000 | 4f8d 04cc 

  0x00007064f03d9cfc: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007064f03d9cfc: 4181 fef8 | 9204 010f | 848b 0000 

  0x00007064f03d9d08: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007064f03d9d08: 0041 81fe | d0a0 0e00 | 0f85 da18 | 0000 418b | 681c 83e5 | 4085 ed0f | 84b3 1b00 | 004d 8b50 
  0x00007064f03d9d28: 104d 85d2 | 0f8c 7e00 | 0000 4533 | db4d 3bd3 | bdff ffff | ff7c 0840 | 0f95 c540 | 0fb6 edbe 
  0x00007064f03d9d48: 45ff ffff | 4c8b 5424 | 204c 8914 | 244c 8b54 | 2410 4c89 | 5424 0844 | 8b54 2418 | 4489 5424 
  0x00007064f03d9d68: 1044 8b5c | 2430 4489 | 5c24 1448 | ff74 2428 | 488f 4424 | 2048 895c | 2430 4c89 

  0x00007064f03d9d84: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03d9d84: 4424 38e8 

  0x00007064f03d9d88: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::estimateSize@6 (line 1042)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03d9d88: 7491 8dff 

  0x00007064f03d9d8c: ;   {other}
  0x00007064f03d9d8c: 0f1f 8400 | fc05 0000 | 418b 681c | 83e5 4085 | ed0f 8421 | 1900 004d | 8b50 104d | 85d2 0f8d 
  0x00007064f03d9dac: 6419 0000 | 4f8d 14cc | 458b 4208 

  0x00007064f03d9db8: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007064f03d9db8: 4181 f8d0 | a00e 000f | 851f 1300 | 0049 8bda | 8b7b 2045 | 8b5c fc0c 

  0x00007064f03d9dd0: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x000000063381c660})}
  0x00007064f03d9dd0: 49b8 60c6 | 8133 0600 | 0000 450f | b648 1845 | 85c9 0f84 | e811 0000 | 8b73 184d | 8d14 fc48 
  0x00007064f03d9df0: b900 c074 | e364 7000 | 000f 1f80 | 0000 0000 | 448b 430c | 4585 c00f | 8c97 1200 | 0044 3bc6 
  0x00007064f03d9e10: 7c05 4533 | c0eb 2445 | 8d48 0144 | 894b 0c45 | 3bc3 0f83 | 5c11 0000 | 438b 6c82 | 1085 ed0f 
  0x00007064f03d9e30: 8413 1500 | 0041 b801 | 0000 004d | 8b8f 5004 

  0x00007064f03d9e40: ; ImmutableOopMap {r10=Oop rbx=Oop rdi=NarrowOop [16]=Oop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.ReferencePipeline::forEachWithCancel@18 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
                      ;   {poll}
  0x00007064f03d9e40: 0000 4185 | 0145 85c0 | 75b6 4c8b | 5424 2841 | 8b6a 0c4d | 8b9f b801 | 0000 4d8b | d349 83c2 
  0x00007064f03d9e60: 384d 3b97 | c801 0000 | 0f83 3e0c | 0000 4d89 | 97b8 0100 | 0041 0f18 | 8200 0100 | 0049 c703 
  0x00007064f03d9e80: 0100 0000 

  0x00007064f03d9e84: ;   {metadata('java/nio/HeapDoubleBuffer')}
  0x00007064f03d9e84: 41c7 4308 | 98ba 0401 | 4d89 6310 | 4589 6318 | 4589 6324 | 4d89 6328 | 4d89 6330 | 41c7 430c 
  0x00007064f03d9ea4: ffff ffff | 4189 6b1c | 4189 6b20 | 4c8b 5424 | 2849 c1ea | 0345 8953 | 304c 8b54 | 2428 4d8b 
  0x00007064f03d9ec4: c34d 33d0 | 49c1 ea16 | 48bd 0300 | 0000 5044 | 0000 4d85 | d274 1a49 | c1e8 0948 | bf00 c074 
  0x00007064f03d9ee4: e364 7000 | 0049 03f8 | 803f 020f | 851e 0a00 | 0045 8963 | 284d 8b8f | b801 0000 | 49c7 4310 
  0x00007064f03d9f04: 1000 0000 | 4d8b d149 | 83c2 204d | 3b97 c801 | 0000 0f83 | ce0b 0000 | 4d89 97b8 | 0100 0041 
  0x00007064f03d9f24: 0f18 8200 | 0100 0049 | c701 0100 | 0000 410f | 1882 4001 

  0x00007064f03d9f38: ;   {metadata({type array int})}
  0x00007064f03d9f38: 0000 41c7 | 4108 3826 | 0000 410f | 1882 8001 | 0000 41c7 | 410c 0300 | 0000 4589 | 611c 448b 
  0x00007064f03d9f58: 4424 1845 | 8941 1044 | 8b54 2430 | 4589 5114 | 8b5c 241c | 4189 5918 | 498b bfb8 | 0100 004c 
  0x00007064f03d9f78: 8bd7 4983 | c228 4d3b | 97c8 0100 | 000f 8396 | 0b00 004d | 8997 b801 | 0000 410f | 1882 0001 
  0x00007064f03d9f98: 0000 48c7 | 0701 0000 

  0x00007064f03d9fa0: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007064f03d9fa0: 00c7 4708 | f892 0401 | 4489 670c | 4489 6724 | 48c7 4710 | ffff ffff | 4889 6f18 | 49c1 e903 
  0x00007064f03d9fc0: 4489 4f20 | 4d8b 97b8 | 0100 004d | 8bca 4983 | c138 4d3b | 8fc8 0100 | 000f 83c4 | 0b00 004d 
  0x00007064f03d9fe0: 898f b801 | 0000 410f | 1881 0001 | 0000 49c7 | 0201 0000 

  0x00007064f03d9ff4: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007064f03d9ff4: 0041 c742 | 08f0 9c04 | 0145 8962 | 0c4d 8962 | 104d 8962 | 184d 8962 | 2045 8962 | 2c4d 8962 
  0x00007064f03da014: 3048 8bdf | 48c1 eb03 | 4189 5a28 | 4c8b cf49 | 8bea 48c1 | ed03 498b | da4c 33cb | 49c1 e916 
  0x00007064f03da034: 4d85 c974 | 1a48 c1eb | 0948 bf00 | c074 e364 | 7000 0048 | 03fb 803f | 020f 851a | 0900 0041 
  0x00007064f03da054: 807f 4000 | 0f85 9007 | 0000 4189 | 6a1c 410f | b66a 1841 | c742 0c50 | 0000 0045 | 8862 1a45 
  0x00007064f03da074: 8962 1041 | c742 145f | 0000 0085 | ed0f 8575 | 1300 0041 | c642 1801 | 458b 4a28 

  0x00007064f03da090: ; implicit exception: dispatches to 0x00007064f03dbadc
  0x00007064f03da090: 438b 5ccc | 0841 807f | 4000 0f85 | 8407 0000 | 4589 6228 

  0x00007064f03da0a4: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x000000063381c660})}
  0x00007064f03da0a4: 48bf 60c6 | 8133 0600 | 0000 0fb6 | 6f19 41c7 | 4214 6f00 | 0001 85ed | 0f84 6a13 

  0x00007064f03da0c0: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x000000063381c680})}
  0x00007064f03da0c0: 0000 48bf | 80c6 8133 | 0600 0000 

  0x00007064f03da0cc: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x000000063381c680})}
  0x00007064f03da0cc: 8b7f 2448 | ba80 c681 | 3306 0000 | 008b 521c | 81e7 6f00 | 0001 3bfa | 0f85 8610 | 0000 4b8d 
  0x00007064f03da0ec: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007064f03da0ec: 3ccc 81fb | f892 0401 | 0f84 8600 

  0x00007064f03da0f8: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007064f03da0f8: 0000 81fb | d0a0 0e00 | 0f85 3215 | 0000 8b6f | 1c83 e540 | 85ed 0f84 | 1418 0000 | 488b 5f10 
  0x00007064f03da118: 4885 db7c | 7e45 33c9 | 493b d9bd | ffff ffff | 7c08 400f | 95c5 400f | b6ed be45 | ffff ff4c 
  0x00007064f03da138: 8b4c 2420 | 4c89 0c24 | 4c8b 4c24 | 104c 894c | 2408 4489 | 4424 1048 | 8944 24f8 | 8b44 2430 
  0x00007064f03da158: 8944 2414 | 488b 4424 | f84c 895c | 2420 4c89 | 5424 3048 | 897c 2438 

  0x00007064f03da170: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03da170: 6666 90e8 

  0x00007064f03da174: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::estimateSize@6 (line 1042)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03da174: 888d 8dff 

  0x00007064f03da178: ;   {other}
  0x00007064f03da178: 0f1f 8400 | e809 0002 | 8b6f 1c83 | e540 85ed | 0f84 ea15 | 0000 488b | 5f10 4885 | db0f 8d29 
  0x00007064f03da198: 1600 004b | 8d3c cc44 

  0x00007064f03da1a0: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007064f03da1a0: 8b4f 0841 | 81f9 f892 | 0401 0f85 | 1418 0000 | 8b47 2041 | 8b5c c40c 

  0x00007064f03da1b8: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x000000063381c660})}
  0x00007064f03da1b8: 49ba 60c6 | 8133 0600 | 0000 450f | b64a 1845 | 85c9 0f84 | 3c0e 0000 | 8b57 1849 | 8d34 c4e9 
  0x00007064f03da1d8: 7a03 0000 | 0f1f 4000 | 41b9 0100 | 0000 4d8b | 9750 0400 

  0x00007064f03da1ec: ; ImmutableOopMap {r11=Oop rdi=Oop rsi=Oop rax=NarrowOop [16]=Oop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@31 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
                      ;   {poll}
  0x00007064f03da1ec: 0041 8502 | 4585 c90f | 855d 0300 | 004c 8b54 | 2420 458b | 520c 448b | 4c24 308b | 7c24 1c41 
  0x00007064f03da20c: 8d6c 39ff | 413b ea0f | 8d5f 1200 | 004c 8b54 | 2420 458b | 521c 470f | af44 d418 | 4d8b b7b8 
  0x00007064f03da22c: 0100 004d | 8bd6 4983 | c228 4963 | e84d 3b97 | c801 0000 | 0f83 e709 | 0000 4d89 | 97b8 0100 
  0x00007064f03da24c: 0041 0f18 | 8200 0100 | 0049 c706 | 0100 0000 

  0x00007064f03da25c: ;   {metadata('jcuda/Pointer')}
  0x00007064f03da25c: 41c7 4608 | f839 0001 | 4589 660c | 4d89 6610 | 4d89 6618 | 4d89 6620 | 4989 6e18 | 4d8b 8fb8 
  0x00007064f03da27c: 0100 004d | 8bd1 4983 | c218 4d8b | c349 c1e8 | 0345 8946 | 0c4d 3b97 | c801 0000 | 0f83 f209 
  0x00007064f03da29c: 0000 4d89 | 97b8 0100 | 0041 0f18 | 8200 0100 | 0049 c701 | 0100 0000 | 410f 1882 | 4001 0000 
  0x00007064f03da2bc: ;   {metadata({type array int})}
  0x00007064f03da2bc: 41c7 4108 | 3826 0000 | 410f 1882 | 8001 0000 | 41c7 410c | 0100 0000 | 4589 6114 | 448b 5424 
  0x00007064f03da2dc: 3045 8951 | 104d 8b9f | b801 0000 | 4d8b d349 | 83c2 284d | 3b97 c801 | 0000 0f83 | f809 0000 
  0x00007064f03da2fc: 4d89 97b8 | 0100 0041 | 0f18 8200 | 0100 0049 | c703 0100 

  0x00007064f03da310: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007064f03da310: 0000 41c7 | 4308 f892 | 0401 4589 | 630c 4589 | 6324 49c7 | 4310 ffff | ffff 49ba | 0100 0000 
  0x00007064f03da330: 5044 0000 | 4d89 5318 | 4d8b d149 | c1ea 0345 | 8953 204d | 8baf b801 | 0000 4d8b | d549 83c2 
  0x00007064f03da350: 384d 3b97 | c801 0000 | 0f83 200a | 0000 4d89 | 97b8 0100 | 0041 0f18 | 8200 0100 | 0049 c745 
  0x00007064f03da370: 0001 0000 

  0x00007064f03da374: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007064f03da374: 0041 c745 | 08f0 9c04 | 0145 8965 | 0c4d 8965 | 104d 8965 | 184d 8965 | 2045 8965 | 2c4d 8965 
  0x00007064f03da394: 304d 8bd3 | 49c1 ea03 | 4589 5528 | 4d8b d349 | 8bdd 48c1 | eb03 4d8b | dd4d 33d3 | 49c1 ea16 
  0x00007064f03da3b4: 4d85 d274 | 1049 c1eb | 0949 03cb | 8039 020f | 8514 0600 | 0041 807f | 4000 0f85 | 8304 0000 
  0x00007064f03da3d4: 4189 5d1c | 410f b66d | 1841 c745 | 0c50 0000 | 0045 8865 | 1a45 8965 | 1041 c745 | 145f 0000 
  0x00007064f03da3f4: 0085 ed0f | 85c3 1000 | 0041 c645 | 1801 458b | 5d28 438b | 5cdc 0841 | 807f 4000 | 0f85 7804 
  0x00007064f03da414: 0000 4589 

  0x00007064f03da418: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x000000063381c660})}
  0x00007064f03da418: 6528 49ba | 60c6 8133 | 0600 0000 | 410f b66a | 1941 c745 | 146f 0000 | 0185 ed0f | 84bb 1000 
  0x00007064f03da438: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x000000063381c680})}
  0x00007064f03da438: 0049 ba80 | c681 3306 | 0000 0045 | 8b4a 2445 | 8b52 1c41 | 81e1 6f00 | 0001 453b | ca0f 8569 
  0x00007064f03da458: 0d00 004f 

  0x00007064f03da45c: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007064f03da45c: 8d04 dc81 | fbf8 9204 | 010f 848d 

  0x00007064f03da468: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007064f03da468: 0000 0081 | fbd0 a00e | 000f 8509 | 1200 0041 | 8b68 1c83 | e540 85ed | 0f84 ee14 | 0000 4d8b 
  0x00007064f03da488: 5010 4d85 | d20f 8c81 | 0000 0045 | 33db 4d3b | d3bd ffff | ffff 7c08 | 400f 95c5 | 400f b6ed 
  0x00007064f03da4a8: be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c | 8944 2410 | 488b 4424 
  0x00007064f03da4c8: f84c 8974 | 2418 4889 | 4424 f88b | 4424 3089 | 4424 1448 | 8b44 24f8 | 4c89 6c24 | 304c 8944 
  0x00007064f03da4e8: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03da4e8: 2438 90e8 

  0x00007064f03da4ec: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::estimateSize@6 (line 1042)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03da4ec: 108a 8dff 

  0x00007064f03da4f0: ;   {other}
  0x00007064f03da4f0: 0f1f 8400 | 600d 0004 | 418b 681c | 83e5 4085 | ed0f 841d | 1300 004d | 8b50 104d | 85d2 0f8d 
  0x00007064f03da510: 6013 0000 | 4b8d 0cdc | 448b 5108 

  0x00007064f03da51c: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007064f03da51c: 4181 faf8 | 9204 010f | 85df 1400 | 008b 5920 

  0x00007064f03da52c: ; implicit exception: dispatches to 0x00007064f03db050
  0x00007064f03da52c: 458b 54dc 

  0x00007064f03da530: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x000000063381c660})}
  0x00007064f03da530: 0c49 bb60 | c681 3306 | 0000 0045 | 0fb6 5b18 | 4585 db0f | 8407 0b00 | 0044 8b59 | 1849 8d3c 
  0x00007064f03da550: dce9 bb01 | 0000 448b | 4f0c 4585 | c90f 8c91 | 0900 0044 | 3bca 7c08 | 4533 c9e9 | 76fc ffff 
  0x00007064f03da570: 458d 5101 | 4489 570c | 443b cb0f | 83db 0800 | 0042 8b6c | 8e10 85ed | 0f8d 52fc | ffff be45 
  0x00007064f03da590: ffff ff4c | 8b54 2420 | 4c89 1424 | 4c8b 5424 | 104c 8954 | 2408 4489 | 4424 1048 | 897c 2420 
  0x00007064f03da5b0: 4c89 5c24 

  0x00007064f03da5b4: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03da5b4: 2866 90e8 

  0x00007064f03da5b8: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::lambda$checkLowerBound$1@2 (line 351)
                      ; - JCudaWrapper.array.Array$$Lambda/0x000070648000a9c8::test@5
                      ; - java.util.stream.MatchOps$2MatchSink::accept@12 (line 119)
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@47 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03da5b8: 4489 8dff 

  0x00007064f03da5bc: ;   {other}
  0x00007064f03da5bc: 0f1f 8400 | 2c0e 0005 | 660f 1f44 | 0000 660f | 1f44 0000 | 41b9 0100 | 0000 498b | 9750 0400 
  0x00007064f03da5dc: 004c 8b44 

  0x00007064f03da5e0: ; ImmutableOopMap {r8=Oop rcx=Oop rbx=NarrowOop rdi=Oop r14=Oop [16]=Oop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@31 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
                      ;   {poll}
  0x00007064f03da5e0: 2420 8502 | 4585 c90f | 8524 0100 | 0041 8b68 | 0c44 8b5c | 2430 443b | dd0f 8d45 | 0f00 0045 
  0x00007064f03da600: 8b50 1c47 | 8b4c d418 | 8b4c 2430 | 410f afc9 | 458b 5818 | 4c63 c145 | 85db 0f84 | 6c0a 0000 
  0x00007064f03da620: 498b 97b8 | 0100 004c | 8bd2 4983 | c228 4d3b | 97c8 0100 | 000f 83cb | 0700 004d | 8997 b801 
  0x00007064f03da640: 0000 410f | 1882 0001 | 0000 48c7 | 0201 0000 

  0x00007064f03da650: ;   {metadata('jcuda/driver/CUdeviceptr')}
  0x00007064f03da650: 00c7 4208 | 90a7 0001 | 4489 620c | 4c89 6210 | 4c89 6218 | 4c89 6220 | 4f03 44dc | 184c 8942 
  0x00007064f03da670: 1847 8b44 | dc20 4489 | 4220 4f8b | 54dc 104c | 8952 1047 | 8b5c dc0c | 4489 5a0c | 4c8b 5c24 
  0x00007064f03da690: 1041 0fb6 | 6b0c 458b | d144 8b4c | 241c 450f | afca 4963 | c985 ed0f | 84cb 0e00 | 0041 8b6b 
  0x00007064f03da6b0: 2085 ed0f | 85df 0e00 | 0045 8b53 | 1c4d 8bca | 49c1 e103 | 41b8 0200 | 0000 498b 

  0x00007064f03da6cc: ;   {static_call}
  0x00007064f03da6cc: f666 90e8 

  0x00007064f03da6d0: ; ImmutableOopMap {}
                      ;*invokestatic cudaMemcpyAsyncNative {reexecute=0 rethrow=0 return_oop=0}
                      ; - jcuda.runtime.JCuda::cudaMemcpyAsync@7 (line 5696)
                      ; - JCudaWrapper.array.Array::get@73 (line 248)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03da6d0: ec7a feff 

  0x00007064f03da6d4: ;   {other}
  0x00007064f03da6d4: 0f1f 8400 | 440f 0007 

  0x00007064f03da6dc: ;   {oop(a 'java/lang/Class'{0x000000063381c6b0} = 'jcuda/runtime/JCuda')}
  0x00007064f03da6dc: 49ba b0c6 | 8133 0600 | 0000 410f | b6aa 7d01 | 0000 85ed | 0f85 ca0e | 0000 85c0 | 0f85 da0e 
  0x00007064f03da6fc: 0000 4883 

  0x00007064f03da700: ;   {poll_return}
  0x00007064f03da700: c460 5d49 | 3ba7 4804 | 0000 0f87 | ec14 0000 | c344 8b41 | 0c45 85c0 | 0f8c 2208 | 0000 453b 
  0x00007064f03da720: c37c 0845 | 33c9 e9ab | feff ff41 | 8d50 0189 | 510c 453b | c20f 8371 | 0700 0042 | 8b6c 8710 
  0x00007064f03da740: 85ed 0f8d | 88fe ffff | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007064f03da760: 8944 2410 | 488b 4424 | f84c 8974 | 2418 4889 

  0x00007064f03da770: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03da770: 4c24 28e8 

  0x00007064f03da774: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [40]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::lambda$checkLowerBound$1@2 (line 351)
                      ; - JCudaWrapper.array.Array$$Lambda/0x000070648000a9c8::test@5
                      ; - java.util.stream.MatchOps$2MatchSink::accept@12 (line 119)
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@47 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03da774: 8887 8dff 

  0x00007064f03da778: ;   {other}
  0x00007064f03da778: 0f1f 8400 | e80f 0008 | 448b 5b1c | 4585 db0f | 84ea f4ff | ff4d 8b57 | 2849 8bfb | 48c1 e703 
  0x00007064f03da798: 4d85 d20f | 8483 0a00 | 004d 8b5f | 384b 897c | 13f8 4983 | c2f8 4d89 | 5728 e9c0 | f4ff ff44 
  0x00007064f03da7b8: 8b53 2845 | 85d2 0f84 | f0f4 ffff | 4d8b 5f28 | 498b fa48 | c1e7 034d | 85db 0f84 | 690a 0000 
  0x00007064f03da7d8: 4d8b 5738 | 4b89 7c1a | f849 83c3 | f84d 895f | 28e9 c6f4 | ffff 418b | 5a1c 85db | 0f84 64f8 
  0x00007064f03da7f8: ffff 4d8b | 4f28 488b | fb48 c1e7 | 034d 85c9 | 0f84 5c0a | 0000 498b | 5f38 4a89 | 7c0b f849 
  0x00007064f03da818: 83c1 f84d | 894f 28e9 | 3af8 ffff | 418b 7a28 | 85ff 0f84 | 70f8 ffff | 498b 5728 | 48c1 e703 
  0x00007064f03da838: 4885 d20f | 8468 0a00 | 0049 8b77 | 3848 897c | 16f8 4883 | c2f8 4989 | 5728 e949 | f8ff ff45 
  0x00007064f03da858: 8b55 1c45 | 85d2 0f84 | 70fb ffff | 4d8b 5f28 | 498b fa48 | c1e7 034d | 85db 0f84 

  0x00007064f03da874: ;   {no_reloc}
  0x00007064f03da874: 7a0a 0000 | 4d8b 5738 | 4b89 7c1a | f849 83c3 | f84d 895f | 28e9 46fb | ffff 458b | 4528 4585 
  0x00007064f03da894: c00f 847b | fbff ff4d | 8b57 2849 | 8bf8 48c1 | e703 4d85 | d20f 8460 | 0a00 004d | 8b47 384b 
  0x00007064f03da8b4: 897c 10f8 | 4983 c2f8 | 4d89 5728 | e951 fbff | ff4d 8b57 | 484d 8b5f | 58f0 8344 | 24c0 0080 
  0x00007064f03da8d4: 3f00 0f84 | 90f3 ffff | 4488 274d | 85d2 751d | 498b f749 | ba70 f61a | 0665 7000 | 0041 ffd2 
  0x00007064f03da8f4: ;   {other}
  0x00007064f03da8f4: 0f1f 8400 | 0000 0000 | e96b f3ff | ff4b 897c | 13f8 4983 | c2f8 4d89 | 5748 e959 | f3ff ff4d 
  0x00007064f03da914: 8b57 584d | 8b47 48f0 | 8344 24c0 | 0080 3f00 | 0f84 cbf5 | ffff 4488 | 274d 85c0 | 7529 4d8b 
  0x00007064f03da934: eb48 8bd9 | 498b f749 | ba70 f61a | 0665 7000 | 0041 ffd2 

  0x00007064f03da948: ;   {other}
  0x00007064f03da948: 0f1f 8400 | 0000 0000 | 488b cb4d | 8bdd e99a | f5ff ff4b | 897c 02f8 | 4983 c0f8 | 4d89 4748 
  0x00007064f03da968: e988 f5ff | ff4d 8b4f | 4849 8b5f | 58f0 8344 | 24c0 0080 | 3f00 0f84 | cff6 ffff | 4488 274d 
  0x00007064f03da988: 85c9 753f | 4c89 5424 | 284c 895c | 2408 4889 | 0c24 418b | d849 8bf7 | 49ba 70f6 | 1a06 6570 
  0x00007064f03da9a8: 0000 41ff 

  0x00007064f03da9ac: ;   {other}
  0x00007064f03da9ac: d20f 1f84 | 0000 0000 | 0044 8bc3 | 488b 0c24 | 4c8b 5c24 | 084c 8b54 | 2428 e988 | f6ff ff4a 
  0x00007064f03da9cc: 897c 0bf8 | 4983 c1f8 | 4d89 4f48 | e976 f6ff | ff4d 8b57 | 484d 8b5f | 58f0 8344 | 24c0 0080 
  0x00007064f03da9ec: 3900 0f84 | d5f9 ffff | 4488 214d | 85d2 7520 | 488b f949 | 8bf7 49ba | 70f6 1a06 | 6570 0000 
  0x00007064f03daa0c: ;   {other}
  0x00007064f03daa0c: 41ff d20f | 1f84 0000 | 0000 00e9 | adf9 ffff | 4b89 4c13 | f849 83c2 | f84d 8957 | 48e9 9bf9 
  0x00007064f03daa2c: ;   {metadata('java/lang/Object'[])}
  0x00007064f03daa2c: ffff 48be | 4012 007f | 6470 0000 | ba01 0000 | 004c 8b54 | 2420 498b 

  0x00007064f03daa44: ;   {runtime_call _new_array_Java}
  0x00007064f03daa44: ea66 90e8 

  0x00007064f03daa48: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - JCudaWrapper.array.DArray::get@1 (line 133)
  0x00007064f03daa48: 34b2 99ff 

  0x00007064f03daa4c: ;   {other}
  0x00007064f03daa4c: 0f1f 8400 | bc12 0009 | 4c8b c0e9 | 10f1 ffff 

  0x00007064f03daa5c: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007064f03daa5c: 48be d0a0 | 0e7f 6470 | 0000 488b | 6c24 204c | 8944 2440 

  0x00007064f03daa70: ;   {runtime_call _new_instance_Java}
  0x00007064f03daa70: 6666 90e8 

  0x00007064f03daa74: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop [64]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.Spliterators::spliterator@13 (line 178)
                      ; - java.util.Arrays::spliterator@6 (line 5396)
                      ; - java.util.Arrays::stream@3 (line 5547)
                      ; - java.util.Arrays::stream@4 (line 5528)
                      ; - JCudaWrapper.array.Array::checkNull@1 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03daa74: 88f5 99ff 

  0x00007064f03daa78: ;   {other}
  0x00007064f03daa78: 0f1f 8400 | e812 000a | 488b e84c | 8b44 2440 | e930 f1ff 

  0x00007064f03daa8c: ;   {metadata('java/util/stream/ReferencePipeline$Head')}
  0x00007064f03daa8c: ff48 be20 | 1b0e 7f64 

  0x00007064f03daa94: ;   {runtime_call _new_instance_Java}
  0x00007064f03daa94: 7000 00e8 

  0x00007064f03daa98: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.StreamSupport::stream@5 (line 69)
                      ; - java.util.Arrays::stream@7 (line 5547)
                      ; - java.util.Arrays::stream@4 (line 5528)
                      ; - JCudaWrapper.array.Array::checkNull@1 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03daa98: 64f5 99ff 

  0x00007064f03daa9c: ;   {other}
  0x00007064f03daa9c: 0f1f 8400 | 0c13 000b | 488b d8e9 | 82f1 ffff | 4889 4c24 | 0848 ff74 | 2428 488f 

  0x00007064f03daab8: ;   {metadata('java/nio/HeapDoubleBuffer')}
  0x00007064f03daab8: 0424 48be | 98ba 0480 | 6470 0000 

  0x00007064f03daac4: ;   {runtime_call _new_instance_Java}
  0x00007064f03daac4: 6666 90e8 

  0x00007064f03daac8: ; ImmutableOopMap {[0]=Oop [16]=Oop [32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.nio.DoubleBuffer::wrap@0 (line 436)
                      ; - java.nio.DoubleBuffer::wrap@4 (line 465)
                      ; - jcuda.Pointer::to@5 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x00007064f03daac8: 34f5 99ff 

  0x00007064f03daacc: ;   {other}
  0x00007064f03daacc: 0f1f 8400 | 3c13 000c | 48ff 3424 | 488f 4424 | 2848 8b4c | 2408 4c8b | d8e9 b6f3 | ffff 4c89 
  0x00007064f03daaec: 5c24 0848 

  0x00007064f03daaf0: ;   {metadata({type array int})}
  0x00007064f03daaf0: 890c 2448 | be38 2600 | 7f64 7000 | 00ba 0300 

  0x00007064f03dab00: ;   {runtime_call _new_array_Java}
  0x00007064f03dab00: 0000 90e8 

  0x00007064f03dab04: ; ImmutableOopMap {[8]=Oop [16]=Oop [32]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - JCudaWrapper.array.Array::get@1 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dab04: 78b1 99ff 

  0x00007064f03dab08: ;   {other}
  0x00007064f03dab08: 0f1f 8400 | 7813 000d | 488b 0c24 | 4c8b 5c24 | 084c 8bc8 | e935 f4ff | ff4c 894c | 2440 4c89 
  0x00007064f03dab28: 5c24 3848 | 894c 2428 | 895c 2408 | 4889 4424 | f88b 4424 | 3089 4424 | 0448 8b44 | 24f8 4489 
  0x00007064f03dab48: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007064f03dab48: 0424 48be | f892 0480 | 6470 0000 

  0x00007064f03dab54: ;   {runtime_call _new_instance_Java}
  0x00007064f03dab54: 6666 90e8 

  0x00007064f03dab58: ; ImmutableOopMap {[16]=Oop [32]=Oop [56]=Oop [64]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.Spliterators::spliterator@13 (line 240)
                      ; - java.util.Arrays::spliterator@6 (line 5435)
                      ; - java.util.Arrays::stream@3 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dab58: a4f4 99ff 

  0x00007064f03dab5c: ;   {other}
  0x00007064f03dab5c: 0f1f 8400 | cc13 000e | 448b 0424 | 4889 4424 | f88b 4424 | 0489 4424 | 3048 8b44 | 24f8 4889 
  0x00007064f03dab7c: 4424 f88b | 4424 0889 | 4424 1c48 | 8b44 24f8 | 488b 4c24 | 284c 8b5c | 2438 4c8b | 4c24 4048 
  0x00007064f03dab9c: 8bf8 e90d | f4ff ff48 | 897c 2438 | 4c89 5c24 | 2848 894c | 2408 4889 | 4424 f88b | 4424 1c89 
  0x00007064f03dabbc: 4424 0448 | 8b44 24f8 | 4889 4424 | f88b 4424 | 3089 0424 | 488b 4424 | f841 8be8 

  0x00007064f03dabd8: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007064f03dabd8: 48be f09c | 0480 6470 

  0x00007064f03dabe0: ;   {runtime_call _new_instance_Java}
  0x00007064f03dabe0: 0000 90e8 

  0x00007064f03dabe4: ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.StreamSupport::intStream@0 (line 138)
                      ; - java.util.Arrays::stream@7 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dabe4: 18f4 99ff 

  0x00007064f03dabe8: ;   {other}
  0x00007064f03dabe8: 0f1f 8400 | 5814 000f | 448b c548 | 8944 24f8 | 8b04 2489 | 4424 3048 | 8b44 24f8 | 4889 4424 
  0x00007064f03dac08: f88b 4424 | 0489 4424 | 1c48 8b44 | 24f8 488b | 4c24 084c | 8b5c 2428 | 488b 7c24 | 384c 8bd0 
  0x00007064f03dac28: e9e8 f3ff | ff4c 895c | 2438 4889 | 4c24 2848 | 8944 24f8 | 8b44 241c | 8944 240c | 488b 4424 
  0x00007064f03dac48: f848 ff74 | 2420 488f 

  0x00007064f03dac50: ;   {metadata('jcuda/Pointer')}
  0x00007064f03dac50: 0424 48be | f839 0080 | 6470 0000 

  0x00007064f03dac5c: ;   {runtime_call _new_instance_Java}
  0x00007064f03dac5c: 6666 90e8 

  0x00007064f03dac60: ; ImmutableOopMap {[0]=Oop [16]=Oop [32]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jcuda.Pointer::withByteOffset@0 (line 516)
                      ; - JCudaWrapper.array.Array::get@48 (line 249)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dac60: 9cf3 99ff 

  0x00007064f03dac64: ;   {other}
  0x00007064f03dac64: 0f1f 8400 | d414 0010 | 4889 4424 | f88b 4424 | 0c89 4424 | 1c48 8b44 | 24f8 488b | 4c24 284c 
  0x00007064f03dac84: 8b5c 2438 | 4c8b f0e9 | e4f5 ffff | 4c89 7424 | 2848 894c | 2408 4889 | 4424 f88b | 4424 1c89 
  0x00007064f03daca4: 4424 0448 | 8b44 24f8 | 488b 6c24 

  0x00007064f03dacb0: ;   {metadata({type array int})}
  0x00007064f03dacb0: 2048 be38 | 2600 7f64 | 7000 00ba | 0100 0000 

  0x00007064f03dacc0: ;   {runtime_call _new_array_Java}
  0x00007064f03dacc0: 6666 90e8 

  0x00007064f03dacc4: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - JCudaWrapper.array.Array::pointer@1 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dacc4: b8af 99ff 

  0x00007064f03dacc8: ;   {other}
  0x00007064f03dacc8: 0f1f 8400 | 3815 0011 | 4889 4424 | f88b 4424 | 0489 4424 | 1c48 8b44 | 24f8 488b | 4c24 084c 
  0x00007064f03dace8: 8b74 2428 | 4c8b c8e9 | e4f5 ffff | 4c89 4c24 | 384c 8974 | 2428 4889 | 4c24 0848 | 8944 24f8 
  0x00007064f03dad08: 8b44 241c | 8944 2404 | 488b 4424 | f848 8944 | 24f8 8b44 | 2430 8904 | 2448 8b44 | 24f8 488b 
  0x00007064f03dad28: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007064f03dad28: 6c24 2048 | bef8 9204 | 8064 7000 

  0x00007064f03dad34: ;   {runtime_call _new_instance_Java}
  0x00007064f03dad34: 0066 90e8 

  0x00007064f03dad38: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.Spliterators::spliterator@13 (line 240)
                      ; - java.util.Arrays::spliterator@6 (line 5435)
                      ; - java.util.Arrays::stream@3 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dad38: c4f2 99ff 

  0x00007064f03dad3c: ;   {other}
  0x00007064f03dad3c: 0f1f 8400 | ac15 0012 | 4889 4424 | f88b 0424 | 8944 2430 | 488b 4424 | f848 8944 | 24f8 8b44 
  0x00007064f03dad5c: 2404 8944 | 241c 488b | 4424 f848 | 8b4c 2408 | 4c8b 7424 | 284c 8b4c | 2438 4c8b | d8e9 a4f5 
  0x00007064f03dad7c: ffff 4c89 | 5c24 384c | 8974 2428 | 4889 4c24 | 0848 8944 | 24f8 8b44 | 241c 8944 | 2404 488b 
  0x00007064f03dad9c: 4424 f848 | 8944 24f8 | 8b44 2430 | 8904 2448 | 8b44 24f8 | 488b 6c24 

  0x00007064f03dadb4: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007064f03dadb4: 2048 bef0 | 9c04 8064 

  0x00007064f03dadbc: ;   {runtime_call _new_instance_Java}
  0x00007064f03dadbc: 7000 00e8 

  0x00007064f03dadc0: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.StreamSupport::intStream@0 (line 138)
                      ; - java.util.Arrays::stream@7 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dadc0: 3cf2 99ff 

  0x00007064f03dadc4: ;   {other}
  0x00007064f03dadc4: 0f1f 8400 | 3416 0013 | 4889 4424 | f88b 0424 | 8944 2430 | 488b 4424 | f848 8944 | 24f8 8b44 
  0x00007064f03dade4: 2404 8944 | 241c 488b | 4424 f848 | 8b4c 2408 | 4c8b 7424 | 284c 8b5c | 2438 4c8b | e8e9 8ff5 
  0x00007064f03dae04: ffff 4c89 | 4424 3044 | 894c 240c | 4c89 7424 | 284b 8d2c | dc44 895c 

  0x00007064f03dae1c: ;   {metadata('jcuda/driver/CUdeviceptr')}
  0x00007064f03dae1c: 2418 48be | 90a7 0080 | 6470 0000 | 48ff 7424 | 2048 8f04 

  0x00007064f03dae30: ;   {runtime_call _new_instance_Java}
  0x00007064f03dae30: 2466 90e8 

  0x00007064f03dae34: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [24]=NarrowOop [40]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jcuda.driver.CUdeviceptr::withByteOffset@0 (line 69)
                      ; - JCudaWrapper.array.Array::pointer@35 (line 109)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dae34: c8f1 99ff 

  0x00007064f03dae38: ;   {other}
  0x00007064f03dae38: 0f1f 8400 | a816 0014 | 4c8b 7424 | 2844 8b4c | 240c 448b | 5c24 184c | 8b44 2430 | 488b d0e9 
  0x00007064f03dae58: 0cf8 ffff | bee4 ffff | ff4c 8b54 | 2420 498b | ea4c 8b54 | 2410 4c89 | 1424 4489 | 4424 0848 
  0x00007064f03dae78: 8944 24f8 | 8b44 241c | 8944 2410 | 488b 4424 | f848 897c | 2418 4489 | 4c24 144c | 895c 2420 
  0x00007064f03dae98: 8944 2428 

  0x00007064f03dae9c: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03dae9c: 6666 90e8 

  0x00007064f03daea0: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@46 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03daea0: 5c80 8dff 

  0x00007064f03daea4: ;   {other}
  0x00007064f03daea4: 0f1f 8400 | 1417 0015 | bee4 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007064f03daec4: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 | 4c24 2044 | 8944 2428 | 895c 242c 
  0x00007064f03daee4: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03daee4: 6666 90e8 

  0x00007064f03daee8: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [32]=Oop [44]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@46 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03daee8: 1480 8dff 

  0x00007064f03daeec: ;   {other}
  0x00007064f03daeec: 0f1f 8400 | 5c17 0016 | be45 ffff | ff4c 8b54 | 2420 498b | ea4c 8b54 | 2410 4c89 | 1424 4489 
  0x00007064f03daf0c: 4424 0848 | 8944 24f8 | 8b44 241c | 8944 2410 | 488b 4424 | f848 897c | 2418 4489 | 4c24 144c 
  0x00007064f03daf2c: 895c 2420 

  0x00007064f03daf30: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03daf30: 6666 90e8 

  0x00007064f03daf34: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::tryAdvance@16 (line 1132)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03daf34: c87f 8dff 

  0x00007064f03daf38: ;   {other}
  0x00007064f03daf38: 0f1f 8400 | a817 0017 | be45 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007064f03daf58: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 | 4c24 2044 | 8944 2428 

  0x00007064f03daf74: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03daf74: 6666 90e8 

  0x00007064f03daf78: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [32]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::tryAdvance@16 (line 1132)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03daf78: 847f 8dff 

  0x00007064f03daf7c: ;   {other}
  0x00007064f03daf7c: 0f1f 8400 | ec17 0018 | bee4 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8b5c 2418 
  0x00007064f03daf9c: 4489 5c24 | 0844 8b5c | 241c 4489 | 5c24 1048 | 895c 2418 | 4489 4424 | 1448 ff74 | 2428 488f 
  0x00007064f03dafbc: 4424 2089 

  0x00007064f03dafc0: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03dafc0: 7c24 28e8 

  0x00007064f03dafc4: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=NarrowOop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Spliterators$ArraySpliterator::tryAdvance@45 (line 1033)
                      ; - java.util.stream.ReferencePipeline::forEachWithCancel@13 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03dafc4: 387f 8dff 

  0x00007064f03dafc8: ;   {other}
  0x00007064f03dafc8: 0f1f 8400 | 3818 0019 | bebe ffff | ff48 8b6c | 2420 4c8b | 5c24 104c | 891c 2444 | 8b5c 2418 
  0x00007064f03dafe8: 4489 5c24 | 0844 8b5c | 241c 4489 | 5c24 104c | 8954 2420 

  0x00007064f03daffc: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03daffc: 6666 90e8 

  0x00007064f03db000: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.ReferencePipeline::forEachWithCancel@8 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03db000: fc7e 8dff 

  0x00007064f03db004: ;   {other}
  0x00007064f03db004: 0f1f 8400 | 7418 001a | bebe ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8944 2408 
  0x00007064f03db024: 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4889 | 7c24 184c | 895c 2420 

  0x00007064f03db040: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db040: 6666 90e8 

  0x00007064f03db044: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@20 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db044: b87e 8dff 

  0x00007064f03db048: ;   {other}
  0x00007064f03db048: 0f1f 8400 | b818 001b | bebe ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007064f03db068: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 

  0x00007064f03db07c: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db07c: 4c24 20e8 

  0x00007064f03db080: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@20 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db080: 7c7e 8dff 

  0x00007064f03db084: ;   {other}
  0x00007064f03db084: 0f1f 8400 | f418 001c | bef6 ffff | ff49 8be8 

  0x00007064f03db094: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db094: 6666 90e8 

  0x00007064f03db098: ; ImmutableOopMap {}
                      ;*invokevirtual withByteOffset {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::pointer@35 (line 109)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db098: 647e 8dff 

  0x00007064f03db09c: ;   {other}
  0x00007064f03db09c: 0f1f 8400 | 0c19 001d | be45 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8b5c 2418 
  0x00007064f03db0bc: 4489 5c24 | 0844 8b5c | 241c 4489 | 5c24 1048 | 895c 2418 | 4489 4424 

  0x00007064f03db0d4: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db0d4: 1466 90e8 

  0x00007064f03db0d8: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [40]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::tryAdvance@16 (line 1032)
                      ; - java.util.stream.ReferencePipeline::forEachWithCancel@13 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03db0d8: 247e 8dff 

  0x00007064f03db0dc: ;   {other}
  0x00007064f03db0dc: 0f1f 8400 | 4c19 001e | be76 ffff | ff48 8b6c | 2420 4c8b | 5c24 104c | 891c 2444 | 8b44 2418 
  0x00007064f03db0fc: 4489 4424 | 0844 8b44 | 241c 4489 | 4424 104c | 8954 2420 

  0x00007064f03db110: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db110: 6666 90e8 

  0x00007064f03db114: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.ReferencePipeline::forEachWithCancel@8 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03db114: e87d 8dff 

  0x00007064f03db118: ;   {other}
  0x00007064f03db118: 0f1f 8400 | 8819 001f | be45 ffff | ff48 8b6c | 2420 4c8b | 5c24 104c | 891c 248b | 4c24 1889 
  0x00007064f03db138: 4c24 088b | 4c24 1c89 | 4c24 1048 | ff74 2428 | 488f 4424 | 1848 895c | 2420 4489 | 4c24 1444 
  0x00007064f03db158: 8944 2428 | 4489 5424 

  0x00007064f03db160: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db160: 2c66 90e8 

  0x00007064f03db164: ; ImmutableOopMap {rbp=Oop [0]=Oop [20]=NarrowOop [24]=Oop [32]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.StreamOpFlag::isKnown@10 (line 503)
                      ; - java.util.stream.AbstractPipeline::copyInto@12 (line 507)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03db164: 987d 8dff 

  0x00007064f03db168: ;   {other}
  0x00007064f03db168: 0f1f 8400 | d819 0020 | be45 ffff | ff48 8b4c | 2420 488b | e948 8b4c | 2410 4889 | 0c24 4489 
  0x00007064f03db188: 4424 0848 | 8944 24f8 | 8b44 241c | 8944 2410 | 488b 4424 | f84c 895c | 2418 4c89 | 5424 2044 
  0x00007064f03db1a8: 894c 2414 | 897c 2428 | 8954 242c 

  0x00007064f03db1b4: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db1b4: 6666 90e8 

  0x00007064f03db1b8: ; ImmutableOopMap {rbp=Oop [0]=Oop [20]=NarrowOop [24]=Oop [32]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.StreamOpFlag::isKnown@10 (line 503)
                      ; - java.util.stream.AbstractPipeline::copyInto@12 (line 507)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db1b8: 447d 8dff 

  0x00007064f03db1bc: ;   {other}
  0x00007064f03db1bc: 0f1f 8400 | 2c1a 0021 | be45 ffff | ff48 8b6c | 2420 4c8b | 4424 104c | 8904 2448 | 8944 24f8 
  0x00007064f03db1dc: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 | 4424 f88b | 4424 3089 | 4424 0c48 
  0x00007064f03db1fc: 8b44 24f8 | 4c89 6c24 | 2044 895c | 2428 4489 | 4c24 2c44 | 8954 2430 

  0x00007064f03db214: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db214: 6666 90e8 

  0x00007064f03db218: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [32]=Oop [40]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.StreamOpFlag::isKnown@10 (line 503)
                      ; - java.util.stream.AbstractPipeline::copyInto@12 (line 507)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db218: e47c 8dff 

  0x00007064f03db21c: ;   {other}
  0x00007064f03db21c: 0f1f 8400 | 8c1a 0022 | 498b f749 | ba40 f61a | 0665 7000 | 0041 ffd2 

  0x00007064f03db234: ;   {other}
  0x00007064f03db234: 0f1f 8400 | 0000 0000 | e936 eaff | ff45 8be9 | 488b eb49 | 8bf7 49ba | 40f6 1a06 | 6570 0000 
  0x00007064f03db254: ;   {other}
  0x00007064f03db254: 41ff d20f | 1f84 0000 | 0000 0048 | 8bdd 458b | cde9 4aea | ffff 4c89 | 5424 284c | 895c 2408 
  0x00007064f03db274: 4889 0c24 | 458b e849 | 8bf7 49ba | 40f6 1a06 | 6570 0000 

  0x00007064f03db288: ;   {other}
  0x00007064f03db288: 41ff d20f | 1f84 0000 | 0000 0045 | 8bc5 488b | 0c24 4c8b | 5c24 084c | 8b54 2428 | e9b5 edff 
  0x00007064f03db2a8: ff44 894c | 2418 4c89 | 5424 284c | 895c 2408 | 4889 0c24 | 418b e849 | 8bf7 49ba | 40f6 1a06 
  0x00007064f03db2c8: 6570 0000 

  0x00007064f03db2cc: ;   {other}
  0x00007064f03db2cc: 41ff d20f | 1f84 0000 | 0000 0044 | 8bc5 488b | 0c24 4c8b | 5c24 084c | 8b54 2428 | 448b 4c24 
  0x00007064f03db2ec: 18e9 aeed | ffff 498b | f749 ba40 | f61a 0665 | 7000 0041 

  0x00007064f03db300: ;   {other}
  0x00007064f03db300: ffd2 0f1f | 8400 0000 | 0000 e9c5 | f0ff ff44 | 895c 2418 | 4c89 6c24 | 084c 8934 | 2449 8bf7 
  0x00007064f03db320: 49ba 40f6 | 1a06 6570 | 0000 41ff 

  0x00007064f03db32c: ;   {other}
  0x00007064f03db32c: d20f 1f84 | 0000 0000 | 004c 8b34 | 244c 8b6c | 2408 448b | 5c24 18e9 | cef0 ffff | be45 ffff 
  0x00007064f03db34c: ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 | 448b 5424 | 1844 8954 | 2410 4889 
  0x00007064f03db36c: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db36c: 5c24 20e8 

  0x00007064f03db370: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [40]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::lambda$checkNull$2@1 (line 392)
                      ; - JCudaWrapper.array.Array$$Lambda/0x000070648000b220::test@1
                      ; - java.util.stream.MatchOps$1MatchSink::accept@12 (line 90)
                      ; - java.util.Spliterators$ArraySpliterator::tryAdvance@49 (line 1034)
                      ; - java.util.stream.ReferencePipeline::forEachWithCancel@13 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03db370: 8c7b 8dff 

  0x00007064f03db374: ;   {other}
  0x00007064f03db374: 0f1f 8400 | e41b 0023 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007064f03db394: 448b 5c24 | 1844 895c 

  0x00007064f03db39c: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db39c: 2410 90e8 

  0x00007064f03db3a0: ; ImmutableOopMap {[0]=Oop [8]=Oop [40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::evaluate@31 (line 228)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03db3a0: 5c7b 8dff 

  0x00007064f03db3a4: ;   {other}
  0x00007064f03db3a4: 0f1f 8400 | 141c 0024 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007064f03db3c4: 448b 5424 | 1844 8954 | 2410 448b | 5424 1c44 | 8954 2418 | 48ff 7424 | 2848 8f44 | 2420 4489 
  0x00007064f03db3e4: 4c24 1c48 | 895c 2428 

  0x00007064f03db3ec: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db3ec: 6666 90e8 

  0x00007064f03db3f0: ; ImmutableOopMap {[0]=Oop [8]=Oop [28]=NarrowOop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.MatchOps$BooleanTerminalSink::<init>@9 (line 257)
                      ; - java.util.stream.MatchOps$1MatchSink::<init>@12 (line 85)
                      ; - java.util.stream.MatchOps::lambda$makeRef$0@6 (line 97)
                      ; - java.util.stream.MatchOps$$Lambda/0x000070648004b5d0::get@8
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@5 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03db3f0: 0c7b 8dff 

  0x00007064f03db3f4: ;   {other}
  0x00007064f03db3f4: 0f1f 8400 | 641c 0025 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007064f03db414: 4489 4424 | 104c 895c 

  0x00007064f03db41c: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db41c: 2420 90e8 

  0x00007064f03db420: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::evaluate@31 (line 228)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db420: dc7a 8dff 

  0x00007064f03db424: ;   {other}
  0x00007064f03db424: 0f1f 8400 | 941c 0026 | be45 ffff | ff48 8b4c | 2420 4889 | 0c24 488b | 4c24 1048 | 894c 2408 
  0x00007064f03db444: 4489 4424 | 1048 8944 | 24f8 8b44 | 241c 8944 | 2418 488b | 4424 f84c | 895c 2420 | 4489 4c24 
  0x00007064f03db464: 1c4c 8954 

  0x00007064f03db468: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db468: 2428 90e8 

  0x00007064f03db46c: ; ImmutableOopMap {[0]=Oop [8]=Oop [28]=NarrowOop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.MatchOps$BooleanTerminalSink::<init>@9 (line 257)
                      ; - java.util.stream.MatchOps$2MatchSink::<init>@12 (line 114)
                      ; - java.util.stream.MatchOps::lambda$makeInt$1@6 (line 126)
                      ; - java.util.stream.MatchOps$$Lambda/0x000070648004aec0::get@8
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@5 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db46c: 907a 8dff 

  0x00007064f03db470: ;   {other}
  0x00007064f03db470: 0f1f 8400 | e01c 0027 | be45 ffff | ff48 ff74 | 2420 488f | 0424 4c8b | 4c24 104c | 894c 2408 
  0x00007064f03db490: 4489 4424 | 1048 8944 | 24f8 8b44 | 241c 8944 | 2418 488b | 4424 f84c | 895c 2420 | 4489 5424 
  0x00007064f03db4b0: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db4b0: 2866 90e8 

  0x00007064f03db4b4: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::checkUpperBound@25 (line 381)
                      ; - JCudaWrapper.array.Array::checkAgainstLength@6 (line 362)
                      ; - JCudaWrapper.array.Array::get@34 (line 246)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db4b4: 487a 8dff 

  0x00007064f03db4b8: ;   {other}
  0x00007064f03db4b8: 0f1f 8400 | 281d 0028 | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007064f03db4d8: 8944 2410 | 488b 4424 | f84c 8974 

  0x00007064f03db4e4: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db4e4: 2418 90e8 

  0x00007064f03db4e8: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::evaluate@31 (line 228)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db4e8: 147a 8dff 

  0x00007064f03db4ec: ;   {other}
  0x00007064f03db4ec: 0f1f 8400 | 5c1d 0029 | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007064f03db50c: 8944 2410 | 488b 4424 | f84c 8974 | 2418 4889 | 4424 f88b | 4424 3089 | 4424 1448 | 8b44 24f8 
  0x00007064f03db52c: 4489 5c24 | 284c 896c 

  0x00007064f03db534: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db534: 2430 90e8 

  0x00007064f03db538: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [40]=NarrowOop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.MatchOps$BooleanTerminalSink::<init>@9 (line 257)
                      ; - java.util.stream.MatchOps$2MatchSink::<init>@12 (line 114)
                      ; - java.util.stream.MatchOps::lambda$makeInt$1@6 (line 126)
                      ; - java.util.stream.MatchOps$$Lambda/0x000070648004aec0::get@8
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@5 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db538: c479 8dff 

  0x00007064f03db53c: ;   {other}
  0x00007064f03db53c: 0f1f 8400 | ac1d 002a | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007064f03db55c: 8944 2410 | 488b 4424 | f84c 8974 

  0x00007064f03db568: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db568: 2418 90e8 

  0x00007064f03db56c: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::checkUpperBound@25 (line 381)
                      ; - JCudaWrapper.array.Array::checkAgainstLength@6 (line 362)
                      ; - JCudaWrapper.array.Array::pointer@18 (line 107)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db56c: 9079 8dff 

  0x00007064f03db570: ;   {other}
  0x00007064f03db570: 0f1f 8400 | e01d 002b | be45 ffff | ff4c 8934 | 2448 8954 | 2408 4889 

  0x00007064f03db588: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db588: 4c24 10e8 

  0x00007064f03db58c: ; ImmutableOopMap {[0]=Oop [8]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.resourceManagement.Handle::getStream@4 (line 109)
                      ; - JCudaWrapper.array.Array::get@70 (line 253)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db58c: 7079 8dff 

  0x00007064f03db590: ;   {other}
  0x00007064f03db590: 0f1f 8400 | 001e 002c | be45 ffff | ff4c 8934 | 244c 895c | 2408 4889 | 5424 1048 | 894c 2418 
  0x00007064f03db5b0: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db5b0: 6666 90e8 

  0x00007064f03db5b4: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.resourceManagement.Handle::getStream@21 (line 110)
                      ; - JCudaWrapper.array.Array::get@70 (line 253)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db5b4: 4879 8dff 

  0x00007064f03db5b8: ;   {other}
  0x00007064f03db5b8: 0f1f 8400 | 281e 002d | be45 ffff | ff89 0424 

  0x00007064f03db5c8: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db5c8: 6666 90e8 

  0x00007064f03db5cc: ; ImmutableOopMap {}
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jcuda.runtime.JCuda::checkResult@3 (line 514)
                      ; - jcuda.runtime.JCuda::cudaMemcpyAsync@10 (line 5696)
                      ; - JCudaWrapper.array.Array::get@73 (line 248)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db5cc: 3079 8dff 

  0x00007064f03db5d0: ;   {other}
  0x00007064f03db5d0: 0f1f 8400 | 401e 002e | be45 ffff | ff89 0424 

  0x00007064f03db5e0: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db5e0: 6666 90e8 

  0x00007064f03db5e4: ; ImmutableOopMap {}
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::get@80 (line 255)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db5e4: 1879 8dff 

  0x00007064f03db5e8: ;   {other}
  0x00007064f03db5e8: 0f1f 8400 | 581e 002f | bec6 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8b54 2418 
  0x00007064f03db608: 4489 5424 | 0844 8b54 | 241c 4489 | 5424 1048 | ff74 2428 | 488f 4424 | 1848 895c | 2420 4489 
  0x00007064f03db628: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db628: 4c24 28e8 

  0x00007064f03db62c: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=NarrowOop }
                      ;*invokeinterface getExactSizeIfKnown {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03db62c: d078 8dff 

  0x00007064f03db630: ;   {other}
  0x00007064f03db630: 0f1f 8400 | a01e 0030 | bec6 ffff | ff48 8b6c | 2420 488b | 4c24 1048 | 890c 2444 | 8944 2408 
  0x00007064f03db650: 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4c89 | 5c24 184c | 8954 2420 | 4489 4c24 
  0x00007064f03db670: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db670: 2866 90e8 

  0x00007064f03db674: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=NarrowOop }
                      ;*invokeinterface getExactSizeIfKnown {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db674: 8878 8dff 

  0x00007064f03db678: ;   {other}
  0x00007064f03db678: 0f1f 8400 | e81e 0031 | bec6 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007064f03db698: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4c89 | 6c24 2844 | 895c 2424 

  0x00007064f03db6b4: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db6b4: 6666 90e8 

  0x00007064f03db6b8: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [36]=NarrowOop [40]=Oop }
                      ;*invokeinterface getExactSizeIfKnown {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db6b8: 4478 8dff 

  0x00007064f03db6bc: ;   {other}
  0x00007064f03db6bc: 0f1f 8400 | 2c1f 0032 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007064f03db6dc: 448b 5c24 | 1844 895c | 2410 448b | 5424 3044 | 8954 2414 | 48ff 7424 | 2848 8f44 | 2420 4c89 
  0x00007064f03db6fc: 4424 2848 | 895c 2430 

  0x00007064f03db704: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db704: 6666 90e8 

  0x00007064f03db708: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03db708: f477 8dff 

  0x00007064f03db70c: ;   {other}
  0x00007064f03db70c: 0f1f 8400 | 7c1f 0033 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007064f03db72c: ffff 4c8b | 5424 204c | 8914 244c | 8b54 2410 | 4c89 5424 | 0844 8b54 | 2418 4489 | 5424 1044 
  0x00007064f03db74c: 8b5c 2430 | 4489 5c24 | 1448 ff74 | 2428 488f | 4424 2048 | 895c 2430 | 4c89 4424 

  0x00007064f03db768: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db768: 3866 90e8 

  0x00007064f03db76c: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::estimateSize@6 (line 1141)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03db76c: 9077 8dff 

  0x00007064f03db770: ;   {other}
  0x00007064f03db770: 0f1f 8400 | e01f 0034 | be45 ffff | ff4c 8b4c | 2420 4c89 | 0c24 4c8b | 4c24 104c | 894c 2408 
  0x00007064f03db790: 4489 4424 | 1048 8944 | 24f8 8b44 | 2430 8944 | 2414 488b | 4424 f84c | 895c 2420 | 4889 7c24 
  0x00007064f03db7b0: 284c 8954 

  0x00007064f03db7b4: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db7b4: 2430 90e8 

  0x00007064f03db7b8: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db7b8: 4477 8dff 

  0x00007064f03db7bc: ;   {other}
  0x00007064f03db7bc: 0f1f 8400 | 2c20 0035 | 4533 c949 | 3bd9 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007064f03db7dc: ffff 4c8b | 4c24 204c | 890c 244c | 8b4c 2410 | 4c89 4c24 | 0844 8944 | 2410 4889 | 4424 f88b 
  0x00007064f03db7fc: 4424 3089 | 4424 1448 | 8b44 24f8 | 4c89 5c24 | 204c 8954 | 2430 4889 

  0x00007064f03db814: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db814: 7c24 38e8 

  0x00007064f03db818: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::estimateSize@6 (line 1141)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db818: e476 8dff 

  0x00007064f03db81c: ;   {other}
  0x00007064f03db81c: 0f1f 8400 | 8c20 0036 | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007064f03db83c: 8944 2410 | 488b 4424 | f84c 8974 | 2418 4889 | 4424 f88b | 4424 3089 | 4424 1448 | 8b44 24f8 
  0x00007064f03db85c: 4c89 4424 | 284c 896c 

  0x00007064f03db864: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db864: 2430 90e8 

  0x00007064f03db868: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db868: 9476 8dff 

  0x00007064f03db86c: ;   {other}
  0x00007064f03db86c: 0f1f 8400 | dc20 0037 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007064f03db88c: ffff 4c8b | 5424 104c | 8954 2408 | 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4c89 
  0x00007064f03db8ac: 7424 1848 | 8944 24f8 | 8b44 2430 | 8944 2414 | 488b 4424 | f84c 896c | 2430 4c89 

  0x00007064f03db8c8: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db8c8: 4424 38e8 

  0x00007064f03db8cc: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::estimateSize@6 (line 1141)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db8cc: 3076 8dff 

  0x00007064f03db8d0: ;   {other}
  0x00007064f03db8d0: 0f1f 8400 | 4021 0038 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007064f03db8f0: 448b 5c24 | 1844 895c | 2410 448b | 5424 3044 | 8954 2414 | 48ff 7424 | 2848 8f44 | 2420 4c89 
  0x00007064f03db910: 4424 2848 | 895c 2430 

  0x00007064f03db918: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db918: 6666 90e8 

  0x00007064f03db91c: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03db91c: e075 8dff 

  0x00007064f03db920: ;   {other}
  0x00007064f03db920: 0f1f 8400 | 9021 0039 | be45 ffff | ff4c 8b4c | 2420 4c89 | 0c24 4c8b | 4c24 104c | 894c 2408 
  0x00007064f03db940: 4489 4424 | 1048 8944 | 24f8 8b44 | 2430 8944 | 2414 488b | 4424 f84c | 895c 2420 | 4889 7c24 
  0x00007064f03db960: 284c 8954 

  0x00007064f03db964: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db964: 2430 90e8 

  0x00007064f03db968: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db968: 9475 8dff 

  0x00007064f03db96c: ;   {other}
  0x00007064f03db96c: 0f1f 8400 | dc21 003a | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007064f03db98c: 8944 2410 | 488b 4424 | f84c 8974 | 2418 4889 | 4424 f88b | 4424 3089 | 4424 1448 | 8b44 24f8 
  0x00007064f03db9ac: 4c89 4424 | 284c 896c 

  0x00007064f03db9b4: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db9b4: 2430 90e8 

  0x00007064f03db9b8: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db9b8: 4475 8dff 

  0x00007064f03db9bc: ;   {other}
  0x00007064f03db9bc: 0f1f 8400 | 2c22 003b | bede ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8944 2408 
  0x00007064f03db9dc: 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4889 | 7c24 204c | 895c 2428 

  0x00007064f03db9f8: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03db9f8: 6666 90e8 

  0x00007064f03db9fc: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.IntPipeline::adapt@1 (line 118)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@1 (line 160)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03db9fc: 0075 8dff 

  0x00007064f03dba00: ;   {other}
  0x00007064f03dba00: 0f1f 8400 | 7022 003c | bede ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007064f03dba20: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 

  0x00007064f03dba34: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03dba34: 4c24 28e8 

  0x00007064f03dba38: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [40]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.IntPipeline::adapt@1 (line 118)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@1 (line 160)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dba38: c474 8dff 

  0x00007064f03dba3c: ;   {other}
  0x00007064f03dba3c: 0f1f 8400 | ac22 003d | be5e ffff 

  0x00007064f03dba48: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03dba48: ff66 90e8 

  0x00007064f03dba4c: ; ImmutableOopMap {}
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.nio.DoubleBuffer::wrap@3 (line 465)
                      ; - jcuda.Pointer::to@5 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x00007064f03dba4c: b074 8dff 

  0x00007064f03dba50: ;   {other}
  0x00007064f03dba50: 0f1f 8400 | c022 003e | bef6 ffff 

  0x00007064f03dba5c: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03dba5c: ff66 90e8 

  0x00007064f03dba60: ; ImmutableOopMap {}
                      ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::get@43 (line 248)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dba60: 9c74 8dff 

  0x00007064f03dba64: ;   {other}
  0x00007064f03dba64: 0f1f 8400 | d422 003f | bef6 ffff 

  0x00007064f03dba70: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03dba70: ff66 90e8 

  0x00007064f03dba74: ; ImmutableOopMap {}
                      ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::pointer@30 (line 109)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dba74: 8874 8dff 

  0x00007064f03dba78: ;   {other}
  0x00007064f03dba78: 0f1f 8400 | e822 0040 | bef6 ffff 

  0x00007064f03dba84: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03dba84: ff66 90e8 

  0x00007064f03dba88: ; ImmutableOopMap {}
                      ;*invokevirtual getStream {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::get@70 (line 253)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dba88: 7474 8dff 

  0x00007064f03dba8c: ;   {other}
  0x00007064f03dba8c: 0f1f 8400 | fc22 0041 | be45 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8b5c 2418 
  0x00007064f03dbaac: 4489 5c24 | 0844 8b5c | 241c 4489 | 5c24 1048 | ff74 2428 | 488f 4424 | 1848 895c | 2428 4489 
  0x00007064f03dbacc: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03dbacc: 4c24 14e8 

  0x00007064f03dbad0: ; ImmutableOopMap {rbp=Oop [0]=Oop [20]=NarrowOop [24]=Oop [40]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::sourceSpliterator@9 (line 400)
                      ; - java.util.stream.AbstractPipeline::evaluate@85 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007064f03dbad0: 2c74 8dff 

  0x00007064f03dbad4: ;   {other}
  0x00007064f03dbad4: 0f1f 8400 | 4423 0042 | be45 ffff | ff48 8b6c | 2420 488b | 4c24 1048 | 890c 2444 | 8944 2408 
  0x00007064f03dbaf4: 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4c89 | 5c24 184c | 8954 2428 | 4489 4c24 
  0x00007064f03dbb14: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03dbb14: 1466 90e8 

  0x00007064f03dbb18: ; ImmutableOopMap {rbp=Oop [0]=Oop [20]=NarrowOop [24]=Oop [40]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::sourceSpliterator@9 (line 400)
                      ; - java.util.stream.AbstractPipeline::evaluate@85 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dbb18: e473 8dff 

  0x00007064f03dbb1c: ;   {other}
  0x00007064f03dbb1c: 0f1f 8400 | 8c23 0043 | be45 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007064f03dbb3c: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 | 4424 f88b | 4424 3089 | 4424 0c48 
  0x00007064f03dbb5c: 8b44 24f8 | 4c89 6c24 | 2844 895c 

  0x00007064f03dbb68: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03dbb68: 2430 90e8 

  0x00007064f03dbb6c: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [40]=Oop [48]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::sourceSpliterator@9 (line 400)
                      ; - java.util.stream.AbstractPipeline::evaluate@85 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007064f03dbb6c: 9073 8dff 

  0x00007064f03dbb70: ;   {other}
  0x00007064f03dbb70: 0f1f 8400 | e023 0044 | 488b f0eb | 5e48 8bf0 | eb59 488b | f0eb 5448 | 8bf0 eb4f | 488b f0eb 
  0x00007064f03dbb90: 4a44 8b50 

  0x00007064f03dbb94: ;   {metadata('java/lang/IllegalArgumentException')}
  0x00007064f03dbb94: 0849 bb20 | c506 7f64 | 7000 0049 | b800 0000 | 7f64 7000 | 004d 03c2 | 4d8b 5050 | 4d3b d374 
  0x00007064f03dbbb4: 3048 8bf0 | eb21 488b | f0eb 1c48 | 8bf0 eb17 | 488b f0eb | 1248 8bf0 | eb0d 488b | f0eb 0848 
  0x00007064f03dbbd4: 8bf0 eb03 | 488b f048 | 83c4 605d 

  0x00007064f03dbbe0: ;   {runtime_call _rethrow_Java}
  0x00007064f03dbbe0: e99b 309a | ffbe 2500 | 0000 8b6c 

  0x00007064f03dbbec: ;   {runtime_call UncommonTrapBlob}
  0x00007064f03dbbec: 2418 90e8 

  0x00007064f03dbbf0: ; ImmutableOopMap {[16]=Oop [32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.nio.DoubleBuffer::wrap@13 (line 438)
                      ; - java.nio.DoubleBuffer::wrap@4 (line 465)
                      ; - jcuda.Pointer::to@5 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x00007064f03dbbf0: 0c73 8dff 

  0x00007064f03dbbf4: ;   {other}
  0x00007064f03dbbf4: 0f1f 8400 | 6424 0045 

  0x00007064f03dbbfc: ;   {internal_word}
  0x00007064f03dbbfc: 49ba 03a7 | 3df0 6470 | 0000 4d89 | 9760 0400 

  0x00007064f03dbc0c: ;   {runtime_call SafepointBlob}
  0x00007064f03dbc0c: 00e9 ee83 

  0x00007064f03dbc10: ;   {runtime_call StubRoutines (final stubs)}
  0x00007064f03dbc10: 8dff e889 | 788b ffe9 | dede ffff | f4f4 f4f4 
[Stub Code]
  0x00007064f03dbc20: ;   {no_reloc}
  0x00007064f03dbc20: 48bb 0000 | 0000 0000 

  0x00007064f03dbc28: ;   {runtime_call nmethod}
  0x00007064f03dbc28: 0000 e9fb 

  0x00007064f03dbc2c: ;   {runtime_call ExceptionBlob}
  0x00007064f03dbc2c: ffff ffe9 | 4c97 99ff 
[Deopt Handler Code]
  0x00007064f03dbc34: e800 0000 | 0048 832c 

  0x00007064f03dbc3c: ;   {runtime_call DeoptimizationBlob}
  0x00007064f03dbc3c: 2405 e95d | 768d fff4 | f4f4 f4f4 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x00007063ac071bc0, length=16, elements={
0x000070650001a0a0, 0x000070650012cc90, 0x000070650012e200, 0x000070650012f9a0,
0x0000706500130fe0, 0x0000706500132580, 0x0000706500134140, 0x0000706500135800,
0x0000706500149370, 0x000070644405ec50, 0x000070644405fef0, 0x000070650017f770,
0x0000706501667630, 0x00007064440ef160, 0x00007064480b0f40, 0x00007064480b20c0
}

Java Threads: ( => current thread )
=>0x000070650001a0a0 JavaThread "main"                              [_thread_in_native, id=31989, stack(0x0000706505900000,0x0000706505a00000) (1024K)]
  0x000070650012cc90 JavaThread "Reference Handler"          daemon [_thread_blocked, id=31997, stack(0x00007064d7dff000,0x00007064d7eff000) (1024K)]
  0x000070650012e200 JavaThread "Finalizer"                  daemon [_thread_blocked, id=31998, stack(0x00007064d6f00000,0x00007064d7000000) (1024K)]
  0x000070650012f9a0 JavaThread "Signal Dispatcher"          daemon [_thread_blocked, id=31999, stack(0x00007064d6e00000,0x00007064d6f00000) (1024K)]
  0x0000706500130fe0 JavaThread "Service Thread"             daemon [_thread_blocked, id=32000, stack(0x00007064d6d00000,0x00007064d6e00000) (1024K)]
  0x0000706500132580 JavaThread "Monitor Deflation Thread"   daemon [_thread_blocked, id=32001, stack(0x00007064d6c00000,0x00007064d6d00000) (1024K)]
  0x0000706500134140 JavaThread "C2 CompilerThread0"         daemon [_thread_blocked, id=32002, stack(0x00007064d6b00000,0x00007064d6c00000) (1024K)]
  0x0000706500135800 JavaThread "C1 CompilerThread0"         daemon [_thread_blocked, id=32003, stack(0x00007064d6a00000,0x00007064d6b00000) (1024K)]
  0x0000706500149370 JavaThread "Common-Cleaner"             daemon [_thread_blocked, id=32004, stack(0x00007064d6900000,0x00007064d6a00000) (1024K)]
  0x000070644405ec50 JavaThread "C1 CompilerThread1"         daemon [_thread_blocked, id=32005, stack(0x00007064d6800000,0x00007064d6900000) (1024K)]
  0x000070644405fef0 JavaThread "C1 CompilerThread2"         daemon [_thread_blocked, id=32006, stack(0x00007064d6700000,0x00007064d6800000) (1024K)]
  0x000070650017f770 JavaThread "Notification Thread"        daemon [_thread_blocked, id=32007, stack(0x00007064d6600000,0x00007064d6700000) (1024K)]
  0x0000706501667630 JavaThread "pool-1-thread-1"            daemon [_thread_blocked, id=32013, stack(0x00007064d6500000,0x00007064d6600000) (1024K)]
  0x00007064440ef160 JavaThread "C1 CompilerThread3"         daemon [_thread_blocked, id=32014, stack(0x00007064d6400000,0x00007064d6500000) (1024K)]
  0x00007064480b0f40 JavaThread "C2 CompilerThread1"         daemon [_thread_blocked, id=32015, stack(0x00007064cbf00000,0x00007064cc000000) (1024K)]
  0x00007064480b20c0 JavaThread "C2 CompilerThread2"         daemon [_thread_blocked, id=32016, stack(0x00007064cb500000,0x00007064cb600000) (1024K)]
Total: 16

Other Threads:
  0x0000706500123890 VMThread "VM Thread"                           [id=31996, stack(0x00007064d7f00000,0x00007064d8000000) (1024K)]
  0x0000706500111260 WatcherThread "VM Periodic Task Thread"        [id=31995, stack(0x00007064dc0f6000,0x00007064dc1f6000) (1024K)]
  0x0000706500045410 WorkerThread "GC Thread#0"                     [id=31990, stack(0x0000706504565000,0x0000706504665000) (1024K)]
  0x000070646c008d60 WorkerThread "GC Thread#1"                     [id=32018, stack(0x00007064c9f00000,0x00007064ca000000) (1024K)]
  0x000070646c009790 WorkerThread "GC Thread#2"                     [id=32019, stack(0x00007064c9500000,0x00007064c9600000) (1024K)]
  0x000070646c00a1e0 WorkerThread "GC Thread#3"                     [id=32020, stack(0x00007064c8300000,0x00007064c8400000) (1024K)]
  0x000070646c00ad30 WorkerThread "GC Thread#4"                     [id=32021, stack(0x00007064c81ff000,0x00007064c82ff000) (1024K)]
  0x000070646c00b880 WorkerThread "GC Thread#5"                     [id=32022, stack(0x00007064c80fe000,0x00007064c81fe000) (1024K)]
  0x000070646c00c400 WorkerThread "GC Thread#6"                     [id=32023, stack(0x000070647ef00000,0x000070647f000000) (1024K)]
  0x000070646c00cf80 WorkerThread "GC Thread#7"                     [id=32024, stack(0x000070647e500000,0x000070647e600000) (1024K)]
  0x000070646c00db00 WorkerThread "GC Thread#8"                     [id=32025, stack(0x000070647e3ff000,0x000070647e4ff000) (1024K)]
  0x000070646c00e6a0 WorkerThread "GC Thread#9"                     [id=32026, stack(0x000070647e2fe000,0x000070647e3fe000) (1024K)]
  0x000070646c00f240 WorkerThread "GC Thread#10"                    [id=32027, stack(0x000070647df00000,0x000070647e000000) (1024K)]
  0x0000706500055f10 ConcurrentGCThread "G1 Main Marker"            [id=31991, stack(0x0000706504464000,0x0000706504564000) (1024K)]
  0x0000706500056ec0 WorkerThread "G1 Conc#0"                       [id=31992, stack(0x0000706504363000,0x0000706504463000) (1024K)]
  0x00007065000fead0 ConcurrentGCThread "G1 Refine#0"               [id=31993, stack(0x00007064dc2f8000,0x00007064dc3f8000) (1024K)]
  0x00007065000ffa90 ConcurrentGCThread "G1 Service"                [id=31994, stack(0x00007064dc1f7000,0x00007064dc2f7000) (1024K)]
Total: 17

Threads with active compile tasks:
Total: 0

VM state: not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap address: 0x0000000616800000, size: 7832 MB, Compressed Oops mode: Zero based, Oop shift amount: 3

CDS archive(s) mapped at: [0x000070647f000000-0x000070647fc97000-0x000070647fc97000), size 13201408, SharedBaseAddress: 0x000070647f000000, ArchiveRelocationMode: 1.
Compressed class space mapped at: 0x0000706480000000-0x00007064c0000000, reserved size: 1073741824
Narrow klass base: 0x000070647f000000, Narrow klass shift: 0, Narrow klass range: 0x100000000

GC Precious Log:
 CardTable entry size: 512
 Card Set container configuration: InlinePtr #cards 4 size 8 Array Of Cards #cards 32 size 80 Howl #buckets 8 coarsen threshold 7372 Howl Bitmap #cards 1024 size 144 coarsen threshold 921 Card regions per heap region 1 cards per card region 8192
 CPUs: 16 total, 16 available
 Memory: 31322M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (Zero based)
 Heap Region Size: 4M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 492M
 Heap Max Capacity: 7832M
 Pre-touch: Disabled
 Parallel Workers: 13
 Concurrent Workers: 3
 Concurrent Refinement Workers: 13
 Periodic GC: Disabled

Heap:
 garbage-first heap   total 507904K, used 2775K [0x0000000616800000, 0x0000000800000000)
  region size 4096K, 2 young (8192K), 1 survivors (4096K)
 Metaspace       used 1516K, committed 1600K, reserved 1114112K
  class space    used 96K, committed 128K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, TAMS=top-at-mark-start, PB=parsable bottom
|   0|0x0000000616800000, 0x0000000616800000, 0x0000000616c00000|  0%| F|  |TAMS 0x0000000616800000| PB 0x0000000616800000| Untracked 
|   1|0x0000000616c00000, 0x0000000616c00000, 0x0000000617000000|  0%| F|  |TAMS 0x0000000616c00000| PB 0x0000000616c00000| Untracked 
|   2|0x0000000617000000, 0x0000000617000000, 0x0000000617400000|  0%| F|  |TAMS 0x0000000617000000| PB 0x0000000617000000| Untracked 
|   3|0x0000000617400000, 0x0000000617400000, 0x0000000617800000|  0%| F|  |TAMS 0x0000000617400000| PB 0x0000000617400000| Untracked 
|   4|0x0000000617800000, 0x0000000617800000, 0x0000000617c00000|  0%| F|  |TAMS 0x0000000617800000| PB 0x0000000617800000| Untracked 
|   5|0x0000000617c00000, 0x0000000617c00000, 0x0000000618000000|  0%| F|  |TAMS 0x0000000617c00000| PB 0x0000000617c00000| Untracked 
|   6|0x0000000618000000, 0x0000000618000000, 0x0000000618400000|  0%| F|  |TAMS 0x0000000618000000| PB 0x0000000618000000| Untracked 
|   7|0x0000000618400000, 0x0000000618400000, 0x0000000618800000|  0%| F|  |TAMS 0x0000000618400000| PB 0x0000000618400000| Untracked 
|   8|0x0000000618800000, 0x0000000618800000, 0x0000000618c00000|  0%| F|  |TAMS 0x0000000618800000| PB 0x0000000618800000| Untracked 
|   9|0x0000000618c00000, 0x0000000618c00000, 0x0000000619000000|  0%| F|  |TAMS 0x0000000618c00000| PB 0x0000000618c00000| Untracked 
|  10|0x0000000619000000, 0x0000000619000000, 0x0000000619400000|  0%| F|  |TAMS 0x0000000619000000| PB 0x0000000619000000| Untracked 
|  11|0x0000000619400000, 0x0000000619400000, 0x0000000619800000|  0%| F|  |TAMS 0x0000000619400000| PB 0x0000000619400000| Untracked 
|  12|0x0000000619800000, 0x0000000619800000, 0x0000000619c00000|  0%| F|  |TAMS 0x0000000619800000| PB 0x0000000619800000| Untracked 
|  13|0x0000000619c00000, 0x0000000619c00000, 0x000000061a000000|  0%| F|  |TAMS 0x0000000619c00000| PB 0x0000000619c00000| Untracked 
|  14|0x000000061a000000, 0x000000061a000000, 0x000000061a400000|  0%| F|  |TAMS 0x000000061a000000| PB 0x000000061a000000| Untracked 
|  15|0x000000061a400000, 0x000000061a400000, 0x000000061a800000|  0%| F|  |TAMS 0x000000061a400000| PB 0x000000061a400000| Untracked 
|  16|0x000000061a800000, 0x000000061a800000, 0x000000061ac00000|  0%| F|  |TAMS 0x000000061a800000| PB 0x000000061a800000| Untracked 
|  17|0x000000061ac00000, 0x000000061ac00000, 0x000000061b000000|  0%| F|  |TAMS 0x000000061ac00000| PB 0x000000061ac00000| Untracked 
|  18|0x000000061b000000, 0x000000061b000000, 0x000000061b400000|  0%| F|  |TAMS 0x000000061b000000| PB 0x000000061b000000| Untracked 
|  19|0x000000061b400000, 0x000000061b400000, 0x000000061b800000|  0%| F|  |TAMS 0x000000061b400000| PB 0x000000061b400000| Untracked 
|  20|0x000000061b800000, 0x000000061b800000, 0x000000061bc00000|  0%| F|  |TAMS 0x000000061b800000| PB 0x000000061b800000| Untracked 
|  21|0x000000061bc00000, 0x000000061bc00000, 0x000000061c000000|  0%| F|  |TAMS 0x000000061bc00000| PB 0x000000061bc00000| Untracked 
|  22|0x000000061c000000, 0x000000061c000000, 0x000000061c400000|  0%| F|  |TAMS 0x000000061c000000| PB 0x000000061c000000| Untracked 
|  23|0x000000061c400000, 0x000000061c400000, 0x000000061c800000|  0%| F|  |TAMS 0x000000061c400000| PB 0x000000061c400000| Untracked 
|  24|0x000000061c800000, 0x000000061c800000, 0x000000061cc00000|  0%| F|  |TAMS 0x000000061c800000| PB 0x000000061c800000| Untracked 
|  25|0x000000061cc00000, 0x000000061cc00000, 0x000000061d000000|  0%| F|  |TAMS 0x000000061cc00000| PB 0x000000061cc00000| Untracked 
|  26|0x000000061d000000, 0x000000061d000000, 0x000000061d400000|  0%| F|  |TAMS 0x000000061d000000| PB 0x000000061d000000| Untracked 
|  27|0x000000061d400000, 0x000000061d400000, 0x000000061d800000|  0%| F|  |TAMS 0x000000061d400000| PB 0x000000061d400000| Untracked 
|  28|0x000000061d800000, 0x000000061d800000, 0x000000061dc00000|  0%| F|  |TAMS 0x000000061d800000| PB 0x000000061d800000| Untracked 
|  29|0x000000061dc00000, 0x000000061dc00000, 0x000000061e000000|  0%| F|  |TAMS 0x000000061dc00000| PB 0x000000061dc00000| Untracked 
|  30|0x000000061e000000, 0x000000061e000000, 0x000000061e400000|  0%| F|  |TAMS 0x000000061e000000| PB 0x000000061e000000| Untracked 
|  31|0x000000061e400000, 0x000000061e400000, 0x000000061e800000|  0%| F|  |TAMS 0x000000061e400000| PB 0x000000061e400000| Untracked 
|  32|0x000000061e800000, 0x000000061e800000, 0x000000061ec00000|  0%| F|  |TAMS 0x000000061e800000| PB 0x000000061e800000| Untracked 
|  33|0x000000061ec00000, 0x000000061ec00000, 0x000000061f000000|  0%| F|  |TAMS 0x000000061ec00000| PB 0x000000061ec00000| Untracked 
|  34|0x000000061f000000, 0x000000061f000000, 0x000000061f400000|  0%| F|  |TAMS 0x000000061f000000| PB 0x000000061f000000| Untracked 
|  35|0x000000061f400000, 0x000000061f400000, 0x000000061f800000|  0%| F|  |TAMS 0x000000061f400000| PB 0x000000061f400000| Untracked 
|  36|0x000000061f800000, 0x000000061f800000, 0x000000061fc00000|  0%| F|  |TAMS 0x000000061f800000| PB 0x000000061f800000| Untracked 
|  37|0x000000061fc00000, 0x000000061fc00000, 0x0000000620000000|  0%| F|  |TAMS 0x000000061fc00000| PB 0x000000061fc00000| Untracked 
|  38|0x0000000620000000, 0x0000000620000000, 0x0000000620400000|  0%| F|  |TAMS 0x0000000620000000| PB 0x0000000620000000| Untracked 
|  39|0x0000000620400000, 0x0000000620400000, 0x0000000620800000|  0%| F|  |TAMS 0x0000000620400000| PB 0x0000000620400000| Untracked 
|  40|0x0000000620800000, 0x0000000620800000, 0x0000000620c00000|  0%| F|  |TAMS 0x0000000620800000| PB 0x0000000620800000| Untracked 
|  41|0x0000000620c00000, 0x0000000620c00000, 0x0000000621000000|  0%| F|  |TAMS 0x0000000620c00000| PB 0x0000000620c00000| Untracked 
|  42|0x0000000621000000, 0x0000000621000000, 0x0000000621400000|  0%| F|  |TAMS 0x0000000621000000| PB 0x0000000621000000| Untracked 
|  43|0x0000000621400000, 0x0000000621400000, 0x0000000621800000|  0%| F|  |TAMS 0x0000000621400000| PB 0x0000000621400000| Untracked 
|  44|0x0000000621800000, 0x0000000621800000, 0x0000000621c00000|  0%| F|  |TAMS 0x0000000621800000| PB 0x0000000621800000| Untracked 
|  45|0x0000000621c00000, 0x0000000621c00000, 0x0000000622000000|  0%| F|  |TAMS 0x0000000621c00000| PB 0x0000000621c00000| Untracked 
|  46|0x0000000622000000, 0x0000000622000000, 0x0000000622400000|  0%| F|  |TAMS 0x0000000622000000| PB 0x0000000622000000| Untracked 
|  47|0x0000000622400000, 0x0000000622400000, 0x0000000622800000|  0%| F|  |TAMS 0x0000000622400000| PB 0x0000000622400000| Untracked 
|  48|0x0000000622800000, 0x0000000622800000, 0x0000000622c00000|  0%| F|  |TAMS 0x0000000622800000| PB 0x0000000622800000| Untracked 
|  49|0x0000000622c00000, 0x0000000622c00000, 0x0000000623000000|  0%| F|  |TAMS 0x0000000622c00000| PB 0x0000000622c00000| Untracked 
|  50|0x0000000623000000, 0x0000000623000000, 0x0000000623400000|  0%| F|  |TAMS 0x0000000623000000| PB 0x0000000623000000| Untracked 
|  51|0x0000000623400000, 0x0000000623400000, 0x0000000623800000|  0%| F|  |TAMS 0x0000000623400000| PB 0x0000000623400000| Untracked 
|  52|0x0000000623800000, 0x0000000623800000, 0x0000000623c00000|  0%| F|  |TAMS 0x0000000623800000| PB 0x0000000623800000| Untracked 
|  53|0x0000000623c00000, 0x0000000623c00000, 0x0000000624000000|  0%| F|  |TAMS 0x0000000623c00000| PB 0x0000000623c00000| Untracked 
|  54|0x0000000624000000, 0x0000000624000000, 0x0000000624400000|  0%| F|  |TAMS 0x0000000624000000| PB 0x0000000624000000| Untracked 
|  55|0x0000000624400000, 0x0000000624400000, 0x0000000624800000|  0%| F|  |TAMS 0x0000000624400000| PB 0x0000000624400000| Untracked 
|  56|0x0000000624800000, 0x0000000624800000, 0x0000000624c00000|  0%| F|  |TAMS 0x0000000624800000| PB 0x0000000624800000| Untracked 
|  57|0x0000000624c00000, 0x0000000624c00000, 0x0000000625000000|  0%| F|  |TAMS 0x0000000624c00000| PB 0x0000000624c00000| Untracked 
|  58|0x0000000625000000, 0x0000000625000000, 0x0000000625400000|  0%| F|  |TAMS 0x0000000625000000| PB 0x0000000625000000| Untracked 
|  59|0x0000000625400000, 0x0000000625400000, 0x0000000625800000|  0%| F|  |TAMS 0x0000000625400000| PB 0x0000000625400000| Untracked 
|  60|0x0000000625800000, 0x0000000625800000, 0x0000000625c00000|  0%| F|  |TAMS 0x0000000625800000| PB 0x0000000625800000| Untracked 
|  61|0x0000000625c00000, 0x0000000625c00000, 0x0000000626000000|  0%| F|  |TAMS 0x0000000625c00000| PB 0x0000000625c00000| Untracked 
|  62|0x0000000626000000, 0x0000000626000000, 0x0000000626400000|  0%| F|  |TAMS 0x0000000626000000| PB 0x0000000626000000| Untracked 
|  63|0x0000000626400000, 0x0000000626400000, 0x0000000626800000|  0%| F|  |TAMS 0x0000000626400000| PB 0x0000000626400000| Untracked 
|  64|0x0000000626800000, 0x0000000626800000, 0x0000000626c00000|  0%| F|  |TAMS 0x0000000626800000| PB 0x0000000626800000| Untracked 
|  65|0x0000000626c00000, 0x0000000626c00000, 0x0000000627000000|  0%| F|  |TAMS 0x0000000626c00000| PB 0x0000000626c00000| Untracked 
|  66|0x0000000627000000, 0x0000000627000000, 0x0000000627400000|  0%| F|  |TAMS 0x0000000627000000| PB 0x0000000627000000| Untracked 
|  67|0x0000000627400000, 0x0000000627400000, 0x0000000627800000|  0%| F|  |TAMS 0x0000000627400000| PB 0x0000000627400000| Untracked 
|  68|0x0000000627800000, 0x0000000627800000, 0x0000000627c00000|  0%| F|  |TAMS 0x0000000627800000| PB 0x0000000627800000| Untracked 
|  69|0x0000000627c00000, 0x0000000627c00000, 0x0000000628000000|  0%| F|  |TAMS 0x0000000627c00000| PB 0x0000000627c00000| Untracked 
|  70|0x0000000628000000, 0x0000000628000000, 0x0000000628400000|  0%| F|  |TAMS 0x0000000628000000| PB 0x0000000628000000| Untracked 
|  71|0x0000000628400000, 0x0000000628400000, 0x0000000628800000|  0%| F|  |TAMS 0x0000000628400000| PB 0x0000000628400000| Untracked 
|  72|0x0000000628800000, 0x0000000628800000, 0x0000000628c00000|  0%| F|  |TAMS 0x0000000628800000| PB 0x0000000628800000| Untracked 
|  73|0x0000000628c00000, 0x0000000628c00000, 0x0000000629000000|  0%| F|  |TAMS 0x0000000628c00000| PB 0x0000000628c00000| Untracked 
|  74|0x0000000629000000, 0x0000000629000000, 0x0000000629400000|  0%| F|  |TAMS 0x0000000629000000| PB 0x0000000629000000| Untracked 
|  75|0x0000000629400000, 0x0000000629400000, 0x0000000629800000|  0%| F|  |TAMS 0x0000000629400000| PB 0x0000000629400000| Untracked 
|  76|0x0000000629800000, 0x0000000629800000, 0x0000000629c00000|  0%| F|  |TAMS 0x0000000629800000| PB 0x0000000629800000| Untracked 
|  77|0x0000000629c00000, 0x0000000629c00000, 0x000000062a000000|  0%| F|  |TAMS 0x0000000629c00000| PB 0x0000000629c00000| Untracked 
|  78|0x000000062a000000, 0x000000062a000000, 0x000000062a400000|  0%| F|  |TAMS 0x000000062a000000| PB 0x000000062a000000| Untracked 
|  79|0x000000062a400000, 0x000000062a400000, 0x000000062a800000|  0%| F|  |TAMS 0x000000062a400000| PB 0x000000062a400000| Untracked 
|  80|0x000000062a800000, 0x000000062a800000, 0x000000062ac00000|  0%| F|  |TAMS 0x000000062a800000| PB 0x000000062a800000| Untracked 
|  81|0x000000062ac00000, 0x000000062ac00000, 0x000000062b000000|  0%| F|  |TAMS 0x000000062ac00000| PB 0x000000062ac00000| Untracked 
|  82|0x000000062b000000, 0x000000062b000000, 0x000000062b400000|  0%| F|  |TAMS 0x000000062b000000| PB 0x000000062b000000| Untracked 
|  83|0x000000062b400000, 0x000000062b400000, 0x000000062b800000|  0%| F|  |TAMS 0x000000062b400000| PB 0x000000062b400000| Untracked 
|  84|0x000000062b800000, 0x000000062b800000, 0x000000062bc00000|  0%| F|  |TAMS 0x000000062b800000| PB 0x000000062b800000| Untracked 
|  85|0x000000062bc00000, 0x000000062bc00000, 0x000000062c000000|  0%| F|  |TAMS 0x000000062bc00000| PB 0x000000062bc00000| Untracked 
|  86|0x000000062c000000, 0x000000062c000000, 0x000000062c400000|  0%| F|  |TAMS 0x000000062c000000| PB 0x000000062c000000| Untracked 
|  87|0x000000062c400000, 0x000000062c400000, 0x000000062c800000|  0%| F|  |TAMS 0x000000062c400000| PB 0x000000062c400000| Untracked 
|  88|0x000000062c800000, 0x000000062c800000, 0x000000062cc00000|  0%| F|  |TAMS 0x000000062c800000| PB 0x000000062c800000| Untracked 
|  89|0x000000062cc00000, 0x000000062cc00000, 0x000000062d000000|  0%| F|  |TAMS 0x000000062cc00000| PB 0x000000062cc00000| Untracked 
|  90|0x000000062d000000, 0x000000062d000000, 0x000000062d400000|  0%| F|  |TAMS 0x000000062d000000| PB 0x000000062d000000| Untracked 
|  91|0x000000062d400000, 0x000000062d400000, 0x000000062d800000|  0%| F|  |TAMS 0x000000062d400000| PB 0x000000062d400000| Untracked 
|  92|0x000000062d800000, 0x000000062d800000, 0x000000062dc00000|  0%| F|  |TAMS 0x000000062d800000| PB 0x000000062d800000| Untracked 
|  93|0x000000062dc00000, 0x000000062dc00000, 0x000000062e000000|  0%| F|  |TAMS 0x000000062dc00000| PB 0x000000062dc00000| Untracked 
|  94|0x000000062e000000, 0x000000062e000000, 0x000000062e400000|  0%| F|  |TAMS 0x000000062e000000| PB 0x000000062e000000| Untracked 
|  95|0x000000062e400000, 0x000000062e400000, 0x000000062e800000|  0%| F|  |TAMS 0x000000062e400000| PB 0x000000062e400000| Untracked 
|  96|0x000000062e800000, 0x000000062e800000, 0x000000062ec00000|  0%| F|  |TAMS 0x000000062e800000| PB 0x000000062e800000| Untracked 
|  97|0x000000062ec00000, 0x000000062ec00000, 0x000000062f000000|  0%| F|  |TAMS 0x000000062ec00000| PB 0x000000062ec00000| Untracked 
|  98|0x000000062f000000, 0x000000062f000000, 0x000000062f400000|  0%| F|  |TAMS 0x000000062f000000| PB 0x000000062f000000| Untracked 
|  99|0x000000062f400000, 0x000000062f400000, 0x000000062f800000|  0%| F|  |TAMS 0x000000062f400000| PB 0x000000062f400000| Untracked 
| 100|0x000000062f800000, 0x000000062f800000, 0x000000062fc00000|  0%| F|  |TAMS 0x000000062f800000| PB 0x000000062f800000| Untracked 
| 101|0x000000062fc00000, 0x000000062fc00000, 0x0000000630000000|  0%| F|  |TAMS 0x000000062fc00000| PB 0x000000062fc00000| Untracked 
| 102|0x0000000630000000, 0x0000000630000000, 0x0000000630400000|  0%| F|  |TAMS 0x0000000630000000| PB 0x0000000630000000| Untracked 
| 103|0x0000000630400000, 0x0000000630400000, 0x0000000630800000|  0%| F|  |TAMS 0x0000000630400000| PB 0x0000000630400000| Untracked 
| 104|0x0000000630800000, 0x0000000630800000, 0x0000000630c00000|  0%| F|  |TAMS 0x0000000630800000| PB 0x0000000630800000| Untracked 
| 105|0x0000000630c00000, 0x0000000630c00000, 0x0000000631000000|  0%| F|  |TAMS 0x0000000630c00000| PB 0x0000000630c00000| Untracked 
| 106|0x0000000631000000, 0x0000000631000000, 0x0000000631400000|  0%| F|  |TAMS 0x0000000631000000| PB 0x0000000631000000| Untracked 
| 107|0x0000000631400000, 0x0000000631400000, 0x0000000631800000|  0%| F|  |TAMS 0x0000000631400000| PB 0x0000000631400000| Untracked 
| 108|0x0000000631800000, 0x0000000631800000, 0x0000000631c00000|  0%| F|  |TAMS 0x0000000631800000| PB 0x0000000631800000| Untracked 
| 109|0x0000000631c00000, 0x0000000631c00000, 0x0000000632000000|  0%| F|  |TAMS 0x0000000631c00000| PB 0x0000000631c00000| Untracked 
| 110|0x0000000632000000, 0x0000000632000000, 0x0000000632400000|  0%| F|  |TAMS 0x0000000632000000| PB 0x0000000632000000| Untracked 
| 111|0x0000000632400000, 0x0000000632400000, 0x0000000632800000|  0%| F|  |TAMS 0x0000000632400000| PB 0x0000000632400000| Untracked 
| 112|0x0000000632800000, 0x0000000632800000, 0x0000000632c00000|  0%| F|  |TAMS 0x0000000632800000| PB 0x0000000632800000| Untracked 
| 113|0x0000000632c00000, 0x0000000632c00000, 0x0000000633000000|  0%| F|  |TAMS 0x0000000632c00000| PB 0x0000000632c00000| Untracked 
| 114|0x0000000633000000, 0x0000000633000000, 0x0000000633400000|  0%| F|  |TAMS 0x0000000633000000| PB 0x0000000633000000| Untracked 
| 115|0x0000000633400000, 0x0000000633400000, 0x0000000633800000|  0%| F|  |TAMS 0x0000000633400000| PB 0x0000000633400000| Untracked 
| 116|0x0000000633800000, 0x00000006339a9610, 0x0000000633c00000| 41%| S|CS|TAMS 0x0000000633800000| PB 0x0000000633800000| Complete 
| 117|0x0000000633c00000, 0x0000000633c00000, 0x0000000634000000|  0%| F|  |TAMS 0x0000000633c00000| PB 0x0000000633c00000| Untracked 
| 118|0x0000000634000000, 0x0000000634000000, 0x0000000634400000|  0%| F|  |TAMS 0x0000000634000000| PB 0x0000000634000000| Untracked 
| 119|0x0000000634400000, 0x0000000634400000, 0x0000000634800000|  0%| F|  |TAMS 0x0000000634400000| PB 0x0000000634400000| Untracked 
| 120|0x0000000634800000, 0x0000000634800000, 0x0000000634c00000|  0%| F|  |TAMS 0x0000000634800000| PB 0x0000000634800000| Untracked 
| 121|0x0000000634c00000, 0x0000000634c00000, 0x0000000635000000|  0%| F|  |TAMS 0x0000000634c00000| PB 0x0000000634c00000| Untracked 
| 122|0x0000000635000000, 0x00000006350e14e8, 0x0000000635400000| 22%| E|  |TAMS 0x0000000635000000| PB 0x0000000635000000| Complete 
|1957|0x00000007ffc00000, 0x00000007ffd0c710, 0x0000000800000000| 26%| O|  |TAMS 0x00000007ffc00000| PB 0x00000007ffc00000| Untracked 

Card table byte_map: [0x00007064e6800000,0x00007064e774c000] _byte_map_base: 0x00007064e374c000

Marking Bits: (CMBitMap*) 0x0000706500045f40
 Bits: [0x00007064dec00000, 0x00007064e6660000)

Polling page: 0x0000706507384000

Metaspace:

Usage:
  Non-class:      1.39 MB used.
      Class:     96.04 KB used.
       Both:      1.48 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,       1.44 MB (  2%) committed,  1 nodes.
      Class space:        1.00 GB reserved,     128.00 KB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,       1.56 MB ( <1%) committed. 

Chunk freelists:
   Non-Class:  11.38 MB
       Class:  15.69 MB
        Both:  27.06 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 21.00 MB
CDS: on
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
 - use_allocation_guard: 0.


Internal statistics:

num_allocs_failed_limit: 0.
num_arena_births: 12.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 25.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 0.
num_chunks_taken_from_freelist: 46.
num_chunk_merges: 0.
num_chunk_splits: 29.
num_chunks_enlarged: 23.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=119168Kb used=251Kb max_used=251Kb free=118917Kb
 bounds [0x00007064f03a0000, 0x00007064f0610000, 0x00007064f7800000]
CodeHeap 'profiled nmethods': size=119164Kb used=707Kb max_used=707Kb free=118456Kb
 bounds [0x00007064e8800000, 0x00007064e8a70000, 0x00007064efc5f000]
CodeHeap 'non-nmethods': size=7428Kb used=3132Kb max_used=3163Kb free=4295Kb
 bounds [0x00007064efc5f000, 0x00007064eff7f000, 0x00007064f03a0000]
 total_blobs=1111 nmethods=567 adapters=447
 compilation: enabled
              stopped_count=0, restarted_count=0
 full_count=0

Compilation events (20 events):
Event: 0.375 Thread 0x00007064440ef160  557       3       java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
Event: 0.375 Thread 0x0000706500135800  558       3       java.util.concurrent.locks.ReentrantLock$Sync::lock (13 bytes)
Event: 0.375 Thread 0x000070644405ec50  556       3       jdk.internal.misc.InternalLock::lock (8 bytes)
Event: 0.375 Thread 0x000070644405fef0  559       3       jdk.internal.misc.InternalLock::unlock (8 bytes)
Event: 0.375 Thread 0x00007064440ef160 nmethod 557 0x00007064e88ac710 code [0x00007064e88ac8e0, 0x00007064e88acbd0]
Event: 0.375 Thread 0x00007064440ef160  561       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::release (19 bytes)
Event: 0.375 Thread 0x0000706500135800 nmethod 558 0x00007064e88acd10 code [0x00007064e88acee0, 0x00007064e88ad168]
Event: 0.375 Thread 0x0000706500135800  562       3       java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (51 bytes)
Event: 0.375 Thread 0x000070644405ec50 nmethod 556 0x00007064e88ad210 code [0x00007064e88ad3e0, 0x00007064e88ad7c0]
Event: 0.375 Thread 0x000070644405ec50  560       3       java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
Event: 0.375 Thread 0x000070644405fef0 nmethod 559 0x00007064e88ad910 code [0x00007064e88adae0, 0x00007064e88adea0]
Event: 0.376 Thread 0x00007064440ef160 nmethod 561 0x00007064e88ae010 code [0x00007064e88ae220, 0x00007064e88ae830]
Event: 0.376 Thread 0x000070644405ec50 nmethod 560 0x00007064e88aea10 code [0x00007064e88aebe0, 0x00007064e88aeeb8]
Event: 0.376 Thread 0x0000706500135800 nmethod 562 0x00007064e88af010 code [0x00007064e88af1e0, 0x00007064e88af540]
Event: 0.378 Thread 0x0000706500134140 nmethod 540 0x00007064f03d9790 code [0x00007064f03d9ac0, 0x00007064f03dbc48]
Event: 0.383 Thread 0x00007064440ef160  563       1       java.nio.Buffer::position (5 bytes)
Event: 0.383 Thread 0x00007064440ef160 nmethod 563 0x00007064f03de290 code [0x00007064f03de420, 0x00007064f03de4e0]
Event: 0.387 Thread 0x00007064440ef160  564       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext (34 bytes)
Event: 0.387 Thread 0x00007064440ef160 nmethod 564 0x00007064e88af610 code [0x00007064e88af800, 0x00007064e88afc88]
Event: 0.472 Thread 0x0000706500135800  566       3       java.lang.invoke.MethodType::checkPtypes (76 bytes)

GC Heap History (2 events):
Event: 0.469 GC heap before
{Heap before GC invocations=0 (full 0):
 garbage-first heap   total 507904K, used 25649K [0x0000000616800000, 0x0000000800000000)
  region size 4096K, 6 young (24576K), 0 survivors (0K)
 Metaspace       used 1514K, committed 1600K, reserved 1114112K
  class space    used 96K, committed 128K, reserved 1048576K
}
Event: 0.472 GC heap after
{Heap after GC invocations=1 (full 0):
 garbage-first heap   total 507904K, used 2775K [0x0000000616800000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 1514K, committed 1600K, reserved 1114112K
  class space    used 96K, committed 128K, reserved 1048576K
}

Dll operation events (7 events):
Event: 0.002 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
Event: 0.023 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
Event: 0.024 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
Event: 0.059 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
Event: 0.081 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
Event: 0.132 Loaded shared library /tmp/libJCublas2-12.0.0-linux-x86_64.so
Event: 0.235 Loaded shared library /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so

Deoptimization events (20 events):
Event: 0.063 Thread 0x000070650001a0a0 DEOPT PACKING pc=0x00007064e88383cd sp=0x00007065059fcff0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT UNPACKING pc=0x00007064efcb372f sp=0x00007065059fc480 mode 0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT PACKING pc=0x00007064e88383cd sp=0x00007065059fcff0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT UNPACKING pc=0x00007064efcb372f sp=0x00007065059fc480 mode 0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT PACKING pc=0x00007064e88383cd sp=0x00007065059fcff0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT UNPACKING pc=0x00007064efcb372f sp=0x00007065059fc480 mode 0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT PACKING pc=0x00007064e88383cd sp=0x00007065059fcff0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT UNPACKING pc=0x00007064efcb372f sp=0x00007065059fc480 mode 0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT PACKING pc=0x00007064e88383cd sp=0x00007065059fcff0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT UNPACKING pc=0x00007064efcb372f sp=0x00007065059fc480 mode 0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT PACKING pc=0x00007064e88383cd sp=0x00007065059fcff0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT UNPACKING pc=0x00007064efcb372f sp=0x00007065059fc480 mode 0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT PACKING pc=0x00007064e88383cd sp=0x00007065059fcff0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT UNPACKING pc=0x00007064efcb372f sp=0x00007065059fc480 mode 0
Event: 0.063 Thread 0x000070650001a0a0 DEOPT PACKING pc=0x00007064e88383cd sp=0x00007065059fcff0
Event: 0.064 Thread 0x000070650001a0a0 DEOPT UNPACKING pc=0x00007064efcb372f sp=0x00007065059fc480 mode 0
Event: 0.064 Thread 0x000070650001a0a0 DEOPT PACKING pc=0x00007064e88383cd sp=0x00007065059fcff0
Event: 0.064 Thread 0x000070650001a0a0 DEOPT UNPACKING pc=0x00007064efcb372f sp=0x00007065059fc480 mode 0
Event: 0.065 Thread 0x000070650001a0a0 DEOPT PACKING pc=0x00007064e88383cd sp=0x00007065059fcff0
Event: 0.065 Thread 0x000070650001a0a0 DEOPT UNPACKING pc=0x00007064efcb372f sp=0x00007065059fc480 mode 0

Classes loaded (20 events):
Event: 0.248 Loading class java/util/stream/MatchOps$MatchKind
Event: 0.248 Loading class java/util/stream/MatchOps$MatchKind done
Event: 0.248 Loading class java/util/stream/MatchOps
Event: 0.248 Loading class java/util/stream/MatchOps done
Event: 0.249 Loading class java/util/stream/MatchOps$MatchOp
Event: 0.249 Loading class java/util/stream/MatchOps$MatchOp done
Event: 0.249 Loading class java/util/stream/MatchOps$BooleanTerminalSink
Event: 0.249 Loading class java/util/stream/MatchOps$BooleanTerminalSink done
Event: 0.249 Loading class java/util/stream/MatchOps$2MatchSink
Event: 0.249 Loading class java/util/stream/Sink$OfInt
Event: 0.249 Loading class java/util/stream/Sink$OfInt done
Event: 0.249 Loading class java/util/stream/MatchOps$2MatchSink done
Event: 0.251 Loading class java/util/stream/MatchOps$1MatchSink
Event: 0.251 Loading class java/util/stream/MatchOps$1MatchSink done
Event: 0.253 Loading class java/nio/HeapDoubleBuffer
Event: 0.253 Loading class java/nio/HeapDoubleBuffer done
Event: 0.311 Loading class java/lang/foreign/MemorySegment
Event: 0.311 Loading class java/lang/foreign/MemorySegment done
Event: 0.317 Loading class jdk/internal/math/FormattedFPDecimal
Event: 0.317 Loading class jdk/internal/math/FormattedFPDecimal done

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (8 events):
Event: 0.045 Thread 0x000070650001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635073bb0}> (0x0000000635073bb0) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x000070650001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635074320}> (0x0000000635074320) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x000070650001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635074b50}> (0x0000000635074b50) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x000070650001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635075148}> (0x0000000635075148) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x000070650001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635075718}> (0x0000000635075718) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x000070650001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635075cf8}> (0x0000000635075cf8) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x000070650001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635076548}> (0x0000000635076548) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.241 Thread 0x000070650001a0a0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000634cc5540}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object)'> (0x0000000634cc5540) 
thrown [./src/hotspot/share/interpreter/linkResolver.cpp, line 772]

ZGC Phase Switch (0 events):
No events

VM Operations (4 events):
Event: 0.047 Executing VM operation: HandshakeAllThreads (Deoptimize)
Event: 0.047 Executing VM operation: HandshakeAllThreads (Deoptimize) done
Event: 0.469 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 0.472 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done

Memory protections (19 events):
Event: 0.002 Protecting memory [0x0000706505900000,0x0000706505904000] with protection modes 0
Event: 0.021 Protecting memory [0x00007064d7dff000,0x00007064d7e03000] with protection modes 0
Event: 0.022 Protecting memory [0x00007064d6f00000,0x00007064d6f04000] with protection modes 0
Event: 0.022 Protecting memory [0x00007064d6e00000,0x00007064d6e04000] with protection modes 0
Event: 0.022 Protecting memory [0x00007064d6d00000,0x00007064d6d04000] with protection modes 0
Event: 0.022 Protecting memory [0x00007064d6c00000,0x00007064d6c04000] with protection modes 0
Event: 0.022 Protecting memory [0x00007064d6b00000,0x00007064d6b04000] with protection modes 0
Event: 0.022 Protecting memory [0x00007064d6a00000,0x00007064d6a04000] with protection modes 0
Event: 0.037 Protecting memory [0x00007064d6900000,0x00007064d6904000] with protection modes 0
Event: 0.044 Protecting memory [0x00007064d6800000,0x00007064d6804000] with protection modes 0
Event: 0.044 Protecting memory [0x00007064d6700000,0x00007064d6704000] with protection modes 0
Event: 0.055 Protecting memory [0x00007064d6600000,0x00007064d6604000] with protection modes 0
Event: 0.058 Protecting memory [0x00007064d6500000,0x00007064d6504000] with protection modes 0
Event: 0.064 Protecting memory [0x00007064d6400000,0x00007064d6404000] with protection modes 0
Event: 0.242 Protecting memory [0x00007064d6500000,0x00007064d6504000] with protection modes 0
Event: 0.261 Protecting memory [0x00007064d6400000,0x00007064d6404000] with protection modes 0
Event: 0.287 Protecting memory [0x00007064cbf00000,0x00007064cbf04000] with protection modes 0
Event: 0.287 Protecting memory [0x00007064cb500000,0x00007064cb504000] with protection modes 0
Event: 0.287 Protecting memory [0x00007064cb100000,0x00007064cb104000] with protection modes 0

Nmethod flushes (0 events):
No events

Events (20 events):
Event: 0.021 Thread 0x000070650001a0a0 Thread added: 0x000070650012e200
Event: 0.022 Thread 0x000070650001a0a0 Thread added: 0x000070650012f9a0
Event: 0.022 Thread 0x000070650001a0a0 Thread added: 0x0000706500130fe0
Event: 0.022 Thread 0x000070650001a0a0 Thread added: 0x0000706500132580
Event: 0.022 Thread 0x000070650001a0a0 Thread added: 0x0000706500134140
Event: 0.022 Thread 0x000070650001a0a0 Thread added: 0x0000706500135800
Event: 0.037 Thread 0x000070650001a0a0 Thread added: 0x0000706500149370
Event: 0.044 Thread 0x0000706500135800 Thread added: 0x000070644405ec50
Event: 0.044 Thread 0x0000706500135800 Thread added: 0x000070644405fef0
Event: 0.055 Thread 0x000070650001a0a0 Thread added: 0x000070650017f770
Event: 0.058 Thread 0x000070644405ec50 Thread added: 0x000070643802a1d0
Event: 0.064 Thread 0x0000706500135800 Thread added: 0x00007064440eae60
Event: 0.232 Thread 0x00007064440eae60 Thread exited: 0x00007064440eae60
Event: 0.234 Thread 0x000070643802a1d0 Thread exited: 0x000070643802a1d0
Event: 0.242 Thread 0x000070650001a0a0 Thread added: 0x0000706501667630
Event: 0.261 Thread 0x0000706500135800 Thread added: 0x00007064440ef160
Event: 0.287 Thread 0x0000706500134140 Thread added: 0x00007064480b0f40
Event: 0.287 Thread 0x0000706500134140 Thread added: 0x00007064480b20c0
Event: 0.287 Thread 0x0000706500134140 Thread added: 0x00007064480a82b0
Event: 0.473 Thread 0x00007064480a82b0 Thread exited: 0x00007064480a82b0


Dynamic libraries:
200000000-200200000 ---p 00000000 00:00 0 
200200000-200400000 rw-s 00000000 00:05 1108                             /dev/nvidia0
200400000-203400000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
203400000-204400000 ---p 00000000 00:00 0 
204400000-204600000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
204600000-204800000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
204800000-204a00000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
204a00000-204c00000 rw-s 204a00000 00:05 1109                            /dev/nvidia-uvm
204c00000-204e00000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
204e00000-205000000 ---p 00000000 00:00 0 
205000000-205200000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
205200000-300200000 ---p 00000000 00:00 0 
616800000-635400000 rw-p 00000000 00:00 0 
635400000-7ffc00000 ---p 00000000 00:00 0 
7ffc00000-7ffd0d000 rw-p 00cd6000 103:02 17173446                        /usr/lib/jvm/java-21-openjdk-amd64/lib/server/classes.jsa
7ffd0d000-800000000 rw-p 00000000 00:00 0 
10000000000-10004000000 ---p 00000000 00:00 0 
62fca0735000-62fca0736000 r--p 00000000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
62fca0736000-62fca0737000 r-xp 00001000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
62fca0737000-62fca0738000 r--p 00002000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
62fca0738000-62fca0739000 r--p 00002000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
62fca0739000-62fca073a000 rw-p 00003000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
62fca08b1000-62fca08f8000 rw-p 00000000 00:00 0                          [heap]
706370000000-706370021000 rw-p 00000000 00:00 0 
706370021000-706374000000 ---p 00000000 00:00 0 
706374000000-706374021000 rw-p 00000000 00:00 0 
706374021000-706378000000 ---p 00000000 00:00 0 
70637c000000-70637c021000 rw-p 00000000 00:00 0 
70637c021000-706380000000 ---p 00000000 00:00 0 
706380000000-706380021000 rw-p 00000000 00:00 0 
706380021000-706384000000 ---p 00000000 00:00 0 
706388000000-706388021000 rw-p 00000000 00:00 0 
706388021000-70638c000000 ---p 00000000 00:00 0 
70638c000000-70638c021000 rw-p 00000000 00:00 0 
70638c021000-706390000000 ---p 00000000 00:00 0 
706394000000-706394021000 rw-p 00000000 00:00 0 
706394021000-706398000000 ---p 00000000 00:00 0 
706398000000-706398021000 rw-p 00000000 00:00 0 
706398021000-70639c000000 ---p 00000000 00:00 0 
7063a0000000-7063a0021000 rw-p 00000000 00:00 0 
7063a0021000-7063a4000000 ---p 00000000 00:00 0 
7063a4000000-7063a4021000 rw-p 00000000 00:00 0 
7063a4021000-7063a8000000 ---p 00000000 00:00 0 
7063ac000000-7063ac173000 rw-p 00000000 00:00 0 
7063ac173000-7063b0000000 ---p 00000000 00:00 0 
7063b0000000-7063b01ca000 rw-p 00000000 00:00 0 
7063b01ca000-7063b4000000 ---p 00000000 00:00 0 
7063b8000000-7063b8582000 rw-p 00000000 00:00 0 
7063b8582000-7063bc000000 ---p 00000000 00:00 0 
7063be000000-7063c6000000 ---p 00000000 00:00 0 
7063c8000000-7063ca000000 ---p 00000000 00:00 0 
7063cc000000-7063cc400000 ---p 00000000 00:00 0 
7063cc400000-7063cc600000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7063cc600000-7063cc800000 rw-s 00000000 00:01 10325                      /dev/zero (deleted)
7063cc800000-7063cca00000 rw-s 00000000 00:01 10326                      /dev/zero (deleted)
7063cca00000-7063cd000000 ---p 00000000 00:00 0 
7063cd000000-7063cd200000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7063cd200000-7063cd400000 ---p 00000000 00:00 0 
7063cd400000-7063cd600000 rw-s 00000000 00:01 10328                      /dev/zero (deleted)
7063cd600000-7063cdb33000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7063cdb33000-7063ce000000 ---p 00000000 00:00 0 
7063d0000000-7063e0000000 ---p 00000000 00:00 0 
7063e4000000-7063e4021000 rw-p 00000000 00:00 0 
7063e4021000-7063e8000000 ---p 00000000 00:00 0 
7063ea000000-7063f0000000 ---p 00000000 00:00 0 
7063f0000000-7063f0021000 rw-p 00000000 00:00 0 
7063f0021000-7063f4000000 ---p 00000000 00:00 0 
7063f7800000-706411068000 r-xp 00000000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
706411068000-706411268000 ---p 19868000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
706411268000-7064114a6000 r--p 19868000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
7064114a6000-706414e5a000 rw-p 19aa6000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
706414e5a000-70641902b000 rw-p 00000000 00:00 0 
706419400000-70641fb28000 r-xp 00000000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
70641fb28000-70641fd28000 ---p 06728000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
70641fd28000-70641fd34000 r--p 06728000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
70641fd34000-70641fd3b000 rw-p 06734000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
70641fd3b000-70641fd47000 rw-p 00000000 00:00 0 
706420000000-706420021000 rw-p 00000000 00:00 0 
706420021000-706424000000 ---p 00000000 00:00 0 
706424000000-706424052000 rw-p 00000000 00:00 0 
706424052000-706428000000 ---p 00000000 00:00 0 
70642c000000-70642c021000 rw-p 00000000 00:00 0 
70642c021000-706430000000 ---p 00000000 00:00 0 
706430000000-70643005f000 rw-p 00000000 00:00 0 
70643005f000-706434000000 ---p 00000000 00:00 0 
706438000000-706438058000 rw-p 00000000 00:00 0 
706438058000-70643c000000 ---p 00000000 00:00 0 
70643c000000-70643c021000 rw-p 00000000 00:00 0 
70643c021000-706440000000 ---p 00000000 00:00 0 
706444000000-706444102000 rw-p 00000000 00:00 0 
706444102000-706448000000 ---p 00000000 00:00 0 
706448000000-7064485a7000 rw-p 00000000 00:00 0 
7064485a7000-70644c000000 ---p 00000000 00:00 0 
706450000000-706450021000 rw-p 00000000 00:00 0 
706450021000-706454000000 ---p 00000000 00:00 0 
706454000000-706454021000 rw-p 00000000 00:00 0 
706454021000-706458000000 ---p 00000000 00:00 0 
70645c000000-70645c021000 rw-p 00000000 00:00 0 
70645c021000-706460000000 ---p 00000000 00:00 0 
706460000000-706460021000 rw-p 00000000 00:00 0 
706460021000-706464000000 ---p 00000000 00:00 0 
706468000000-706468021000 rw-p 00000000 00:00 0 
706468021000-70646c000000 ---p 00000000 00:00 0 
70646c000000-70646c021000 rw-p 00000000 00:00 0 
70646c021000-706470000000 ---p 00000000 00:00 0 
706474000000-7064740d0000 rw-p 00000000 00:00 0 
7064740d0000-706474400000 ---p 00000000 00:00 0 
706474400000-7064744a0000 rw-p 00000000 00:00 0 
7064744a0000-706478000000 ---p 00000000 00:00 0 
706478000000-706478021000 rw-p 00000000 00:00 0 
706478021000-70647c000000 ---p 00000000 00:00 0 
70647dc00000-70647dedd000 rw-p 00000000 00:00 0 
70647deff000-70647df00000 ---p 00000000 00:00 0 
70647df00000-70647e000000 rw-p 00000000 00:00 0 
70647e000000-70647e0c7000 r-xp 00000000 103:02 18219053                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
70647e0c7000-70647e2c7000 ---p 000c7000 103:02 18219053                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
70647e2c7000-70647e2cc000 r--p 000c7000 103:02 18219053                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
70647e2cc000-70647e2cd000 rw-p 000cc000 103:02 18219053                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
70647e2cd000-70647e2cf000 rw-p 00000000 00:00 0 
70647e2fd000-70647e2fe000 ---p 00000000 00:00 0 
70647e2fe000-70647e3fe000 rw-p 00000000 00:00 0 
70647e3fe000-70647e3ff000 ---p 00000000 00:00 0 
70647e3ff000-70647e4ff000 rw-p 00000000 00:00 0 
70647e4ff000-70647e500000 ---p 00000000 00:00 0 
70647e500000-70647e600000 rw-p 00000000 00:00 0 
70647e600000-70647e601000 ---p 00000000 00:00 0 
70647e601000-70647ee01000 rw-p 00000000 00:00 0 
70647eeff000-70647ef00000 ---p 00000000 00:00 0 
70647ef00000-70647f000000 rw-p 00000000 00:00 0 
70647f000000-70647fc97000 rw-p 00001000 103:02 17173446                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/classes.jsa
70647fc97000-706480000000 ---p 00000000 00:00 0 
706480000000-706480010000 rw-p 00000000 00:00 0 
706480010000-706480040000 ---p 00000000 00:00 0 
706480040000-706480050000 rw-p 00000000 00:00 0 
706480050000-7064c0000000 ---p 00000000 00:00 0 
7064c0000000-7064c0021000 rw-p 00000000 00:00 0 
7064c0021000-7064c4000000 ---p 00000000 00:00 0 
7064c4000000-7064c4021000 rw-p 00000000 00:00 0 
7064c4021000-7064c8000000 ---p 00000000 00:00 0 
7064c80fd000-7064c80fe000 ---p 00000000 00:00 0 
7064c80fe000-7064c81fe000 rw-p 00000000 00:00 0 
7064c81fe000-7064c81ff000 ---p 00000000 00:00 0 
7064c81ff000-7064c82ff000 rw-p 00000000 00:00 0 
7064c82ff000-7064c8300000 ---p 00000000 00:00 0 
7064c8300000-7064c8400000 rw-p 00000000 00:00 0 
7064c8400000-7064c8401000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c8401000-7064c8402000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c8402000-7064c8403000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c8403000-7064c8404000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c8404000-7064c8405000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c8405000-7064c8406000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c8406000-7064c8407000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c8407000-7064c8408000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c8408000-7064c8409000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c8409000-7064c840a000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c840a000-7064c840b000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c840b000-7064c840c000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c840c000-7064c840d000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c840d000-7064c840e000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c840e000-7064c840f000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c840f000-7064c8410000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7064c8410000-7064c9421000 ---p 00000000 00:00 0 
7064c94ff000-7064c9500000 ---p 00000000 00:00 0 
7064c9500000-7064c9600000 rw-p 00000000 00:00 0 
7064c9600000-7064c9601000 ---p 00000000 00:00 0 
7064c9601000-7064c9e01000 rw-p 00000000 00:00 0 
7064c9eff000-7064c9f00000 ---p 00000000 00:00 0 
7064c9f00000-7064ca000000 rw-p 00000000 00:00 0 
7064ca000000-7064cb021000 ---p 00000000 00:00 0 
7064cb100000-7064cb104000 ---p 00000000 00:00 0 
7064cb104000-7064cb200000 rw-p 00000000 00:00 0 
7064cb200000-7064cb45a000 rw-p 00000000 00:00 0 
7064cb500000-7064cb504000 ---p 00000000 00:00 0 
7064cb504000-7064cb600000 rw-p 00000000 00:00 0 
7064cb600000-7064cb601000 ---p 00000000 00:00 0 
7064cb601000-7064cbe01000 rw-p 00000000 00:00 0 
7064cbf00000-7064cbf04000 ---p 00000000 00:00 0 
7064cbf04000-7064cc000000 rw-p 00000000 00:00 0 
7064cc000000-7064cc021000 rw-p 00000000 00:00 0 
7064cc021000-7064d0000000 ---p 00000000 00:00 0 
7064d0000000-7064d0021000 rw-p 00000000 00:00 0 
7064d0021000-7064d4000000 ---p 00000000 00:00 0 
7064d4000000-7064d4200000 rw-s 00000000 00:01 10327                      /dev/zero (deleted)
7064d4200000-7064d42de000 r--p 00000000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
7064d42de000-7064d47b3000 r-xp 000de000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
7064d47b3000-7064d5c4f000 r--p 005b3000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
7064d5c4f000-7064d5c50000 ---p 01a4f000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
7064d5c50000-7064d5c68000 r--p 01a4f000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
7064d5c68000-7064d5d63000 rw-p 01a67000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
7064d5d63000-7064d5dcc000 rw-p 00000000 00:00 0 
7064d5e00000-7064d5f38000 r-xp 00000000 103:02 18219052                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
7064d5f38000-7064d6138000 ---p 00138000 103:02 18219052                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
7064d6138000-7064d613d000 r--p 00138000 103:02 18219052                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
7064d613d000-7064d613f000 rw-p 0013d000 103:02 18219052                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
7064d613f000-7064d6141000 rw-p 00000000 00:00 0 
7064d61fa000-7064d6400000 rw-p 00000000 00:00 0 
7064d6400000-7064d6404000 ---p 00000000 00:00 0 
7064d6404000-7064d6500000 rw-p 00000000 00:00 0 
7064d6500000-7064d6504000 ---p 00000000 00:00 0 
7064d6504000-7064d6600000 rw-p 00000000 00:00 0 
7064d6600000-7064d6604000 ---p 00000000 00:00 0 
7064d6604000-7064d6700000 rw-p 00000000 00:00 0 
7064d6700000-7064d6704000 ---p 00000000 00:00 0 
7064d6704000-7064d6800000 rw-p 00000000 00:00 0 
7064d6800000-7064d6804000 ---p 00000000 00:00 0 
7064d6804000-7064d6900000 rw-p 00000000 00:00 0 
7064d6900000-7064d6904000 ---p 00000000 00:00 0 
7064d6904000-7064d6a00000 rw-p 00000000 00:00 0 
7064d6a00000-7064d6a04000 ---p 00000000 00:00 0 
7064d6a04000-7064d6b00000 rw-p 00000000 00:00 0 
7064d6b00000-7064d6b04000 ---p 00000000 00:00 0 
7064d6b04000-7064d6c00000 rw-p 00000000 00:00 0 
7064d6c00000-7064d6c04000 ---p 00000000 00:00 0 
7064d6c04000-7064d6d00000 rw-p 00000000 00:00 0 
7064d6d00000-7064d6d04000 ---p 00000000 00:00 0 
7064d6d04000-7064d6e00000 rw-p 00000000 00:00 0 
7064d6e00000-7064d6e04000 ---p 00000000 00:00 0 
7064d6e04000-7064d6f00000 rw-p 00000000 00:00 0 
7064d6f00000-7064d6f04000 ---p 00000000 00:00 0 
7064d6f04000-7064d7000000 rw-p 00000000 00:00 0 
7064d7000000-7064d7dec000 r--p 00000000 103:02 16521112                  /usr/lib/locale/locale-archive
7064d7dff000-7064d7e03000 ---p 00000000 00:00 0 
7064d7e03000-7064d7eff000 rw-p 00000000 00:00 0 
7064d7eff000-7064d7f00000 ---p 00000000 00:00 0 
7064d7f00000-7064d8000000 rw-p 00000000 00:00 0 
7064d8000000-7064d8021000 rw-p 00000000 00:00 0 
7064d8021000-7064dc000000 ---p 00000000 00:00 0 
7064dc024000-7064dc029000 r--p 00000000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7064dc029000-7064dc06a000 r-xp 00005000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7064dc06a000-7064dc0f3000 r--p 00046000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7064dc0f3000-7064dc0f4000 r--p 000ce000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7064dc0f4000-7064dc0f5000 rw-p 000cf000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7064dc0f5000-7064dc0f6000 ---p 00000000 00:00 0 
7064dc0f6000-7064dc1f6000 rw-p 00000000 00:00 0 
7064dc1f6000-7064dc1f7000 ---p 00000000 00:00 0 
7064dc1f7000-7064dc2f7000 rw-p 00000000 00:00 0 
7064dc2f7000-7064dc2f8000 ---p 00000000 00:00 0 
7064dc2f8000-7064dc3f8000 rw-p 00000000 00:00 0 
7064dc3f8000-7064df3b0000 rw-p 00000000 00:00 0 
7064df3b0000-7064e6650000 ---p 00000000 00:00 0 
7064e6650000-7064e6660000 rw-p 00000000 00:00 0 
7064e667e000-7064e68f6000 rw-p 00000000 00:00 0 
7064e68f6000-7064e774a000 ---p 00000000 00:00 0 
7064e774a000-7064e774c000 rw-p 00000000 00:00 0 
7064e774c000-7064e78f6000 rw-p 00000000 00:00 0 
7064e78f6000-7064e874a000 ---p 00000000 00:00 0 
7064e874a000-7064e874c000 rw-p 00000000 00:00 0 
7064e875f000-7064e8800000 rw-p 00000000 00:00 0 
7064e8800000-7064e8a70000 rwxp 00000000 00:00 0 
7064e8a70000-7064efc5f000 ---p 00000000 00:00 0 
7064efc5f000-7064eff7f000 rwxp 00000000 00:00 0 
7064eff7f000-7064f03a0000 ---p 00000000 00:00 0 
7064f03a0000-7064f0610000 rwxp 00000000 00:00 0 
7064f0610000-7064f7800000 ---p 00000000 00:00 0 
7064f7800000-7064ffe0c000 r--s 00000000 103:02 17173445                  /usr/lib/jvm/java-21-openjdk-amd64/lib/modules
7064ffe3d000-706501815000 rw-p 00000000 00:00 0 
706501815000-706504000000 ---p 00000000 00:00 0 
706504004000-706504362000 rw-p 00000000 00:00 0 
706504362000-706504363000 ---p 00000000 00:00 0 
706504363000-706504463000 rw-p 00000000 00:00 0 
706504463000-706504464000 ---p 00000000 00:00 0 
706504464000-706504564000 rw-p 00000000 00:00 0 
706504564000-706504565000 ---p 00000000 00:00 0 
706504565000-706504665000 rw-p 00000000 00:00 0 
706504665000-706505433000 rw-p 00000000 00:00 0 
706505433000-706505517000 ---p 00000000 00:00 0 
706505517000-70650551c000 rw-p 00000000 00:00 0 
70650551c000-706505600000 ---p 00000000 00:00 0 
706505600000-70650569d000 r--p 00000000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
70650569d000-7065057e5000 r-xp 0009d000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
7065057e5000-70650586c000 r--p 001e5000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
70650586c000-706505877000 r--p 0026b000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
706505877000-70650587a000 rw-p 00276000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
70650587a000-70650587e000 rw-p 00000000 00:00 0 
706505882000-706505889000 r--s 00000000 103:02 16532226                  /usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache
706505889000-70650588a000 r--p 00000000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
70650588a000-70650588b000 r-xp 00001000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
70650588b000-70650588c000 r--p 00002000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
70650588c000-70650588d000 r--p 00002000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
70650588d000-70650588e000 rw-p 00003000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
70650588e000-70650588f000 r--p 00000000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
70650588f000-706505890000 r-xp 00001000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
706505890000-706505891000 r--p 00002000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
706505891000-706505892000 r--p 00002000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
706505892000-706505893000 rw-p 00003000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
706505899000-7065058a9000 -w-s 00000000 00:05 1108                       /dev/nvidia0
7065058a9000-7065058b0000 r--p 00000000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7065058b0000-7065058b9000 r-xp 00007000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7065058b9000-7065058bd000 r--p 00010000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7065058bd000-7065058be000 r--p 00014000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7065058be000-7065058bf000 rw-p 00015000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7065058bf000-706505900000 rw-p 00000000 00:00 0 
706505900000-706505904000 ---p 00000000 00:00 0 
706505904000-706505a00000 rw-p 00000000 00:00 0 
706505a00000-706505ca1000 r--p 00000000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
706505ca1000-706506b11000 r-xp 002a1000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
706506b11000-706506de5000 r--p 01111000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
706506de5000-706506eb8000 r--p 013e4000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
706506eb8000-706506ee8000 rw-p 014b7000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
706506ee8000-706506f4e000 rw-p 00000000 00:00 0 
706506f50000-706506f51000 r--p 00000000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
706506f51000-706506f52000 r-xp 00001000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
706506f52000-706506f53000 r--p 00002000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
706506f53000-706506f54000 r--p 00002000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
706506f54000-706506f55000 rw-p 00003000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
706506f55000-706506f57000 r--p 00000000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
706506f57000-706506f5c000 r-xp 00002000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
706506f5c000-706506f5e000 r--p 00007000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
706506f5e000-706506f5f000 r--p 00008000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
706506f5f000-706506f60000 rw-p 00009000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
706506f60000-706506fdc000 rw-p 00000000 00:00 0 
706506fdc000-706506fe9000 r--p 00000000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
706506fe9000-706506ff8000 r-xp 0000d000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
706506ff8000-706506ffd000 r--p 0001c000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
706506ffd000-706506ffe000 r--p 00021000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
706506ffe000-706506fff000 rw-p 00022000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
706506fff000-706507000000 rw-p 00000000 00:00 0 
706507000000-706507028000 r--p 00000000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
706507028000-7065071b0000 r-xp 00028000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
7065071b0000-7065071ff000 r--p 001b0000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
7065071ff000-706507203000 r--p 001fe000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
706507203000-706507205000 rw-p 00202000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
706507205000-706507212000 rw-p 00000000 00:00 0 
706507215000-706507218000 r--p 00000000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
706507218000-706507220000 r-xp 00003000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
706507220000-706507222000 r--p 0000b000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
706507222000-706507223000 r--p 0000c000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
706507223000-706507224000 rw-p 0000d000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
706507224000-70650722b000 rw-p 00000000 00:00 0 
70650722b000-706507233000 ---p 00000000 00:00 0 
706507233000-706507237000 r--p 00000000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
706507237000-70650725b000 r-xp 00004000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
70650725b000-70650725f000 r--p 00028000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
70650725f000-706507260000 r--p 0002b000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
706507260000-706507261000 rw-p 0002c000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
706507261000-706507271000 r--p 00000000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
706507271000-7065072f0000 r-xp 00010000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
7065072f0000-706507348000 r--p 0008f000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
706507348000-706507349000 r--p 000e7000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
706507349000-70650734a000 rw-p 000e8000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
70650734a000-70650734c000 rw-p 00000000 00:00 0 
70650734c000-70650734e000 r--p 00000000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
70650734e000-706507358000 r-xp 00002000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
706507358000-70650735b000 r--p 0000c000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
70650735b000-70650735c000 r--p 0000f000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
70650735c000-70650735d000 rw-p 00010000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
70650735d000-70650735f000 r--p 00000000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
70650735f000-706507371000 r-xp 00002000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
706507371000-706507377000 r--p 00014000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
706507377000-706507378000 r--p 0001a000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
706507378000-706507379000 rw-p 0001b000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
70650737c000-706507384000 rw-s 00000000 103:02 18219064                  /tmp/hsperfdata_dov/31985
706507384000-706507385000 ---p 00000000 00:00 0 
706507385000-706507386000 r--p 00000000 00:00 0 
706507386000-706507387000 ---p 00000000 00:00 0 
706507387000-706507389000 r--p 00000000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
706507389000-70650738c000 r-xp 00002000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
70650738c000-70650738d000 r--p 00005000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
70650738d000-70650738e000 r--p 00006000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
70650738e000-70650738f000 rw-p 00007000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
70650738f000-706507391000 rw-p 00000000 00:00 0 
706507391000-706507392000 r--p 00000000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
706507392000-7065073bd000 r-xp 00001000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7065073bd000-7065073c7000 r--p 0002c000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7065073c7000-7065073c9000 r--p 00036000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7065073c9000-7065073cb000 rw-p 00038000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7ffd6406d000-7ffd6408e000 rw-p 00000000 00:00 0                          [stack]
7ffd640a3000-7ffd640a7000 r--p 00000000 00:00 0                          [vvar]
7ffd640a7000-7ffd640a9000 r-xp 00000000 00:00 0                          [vdso]
ffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]
Total number of mappings: 370


VM Arguments:
jvm_args: -Dfile.encoding=UTF-8 --module-path=/home/dov/projects/NeighborhoodPIG/build/classes 
java_command: main.TestStuff
java_class_path (initial): /home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-javadoc.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-sources.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-test-sources.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-tests.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-tools.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcublas-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcublas-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcuda-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcuda-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcudnn-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcudnn-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcufft-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcufft-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcurand-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcurand-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusolver-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusolver-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusparse-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusparse-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/NeighborhoodPIG/build/classes
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 12                                        {product} {ergonomic}
     uint ConcGCThreads                            = 3                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 13                                        {product} {ergonomic}
   size_t G1HeapRegionSize                         = 4194304                                   {product} {ergonomic}
    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}
   size_t InitialHeapSize                          = 515899392                                 {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MaxHeapSize                              = 8212447232                                {product} {ergonomic}
   size_t MaxNewSize                               = 4924112896                                {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 4194304                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 7602480                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122027880                              {pd product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122027880                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
   size_t SoftMaxHeapSize                          = 8212447232                             {manageable} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags foldmultilines=false
 #1: stderr all=off uptime,level,tags foldmultilines=false

Environment Variables:
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin
USERNAME=dov
SHELL=/bin/bash
DISPLAY=:1
LANG=en_US.UTF-8

Active Locale:
LC_ALL=en_US.UTF-8
LC_COLLATE=en_US.UTF-8
LC_CTYPE=en_US.UTF-8
LC_MESSAGES=en_US.UTF-8
LC_MONETARY=en_US.UTF-8
LC_NUMERIC=en_US.UTF-8
LC_TIME=en_US.UTF-8

Signal Handlers:
   SIGSEGV: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
    SIGBUS: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
    SIGFPE: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
   SIGPIPE: javaSignalHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGXFSZ: javaSignalHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGILL: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
   SIGUSR2: SR_handler in libjvm.so, mask=00000000000000000000000000000000, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGHUP: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGINT: SIG_IGN, mask=00000000000000000000000000000000, flags=none, blocked
   SIGTERM: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGQUIT: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGTRAP: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked


Periodic native trim disabled

---------------  S Y S T E M  ---------------

OS:
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=24.04
DISTRIB_CODENAME=noble
DISTRIB_DESCRIPTION="Ubuntu 24.04.1 LTS"
uname: Linux 6.8.0-49-generic #49-Ubuntu SMP PREEMPT_DYNAMIC Mon Nov  4 02:06:24 UTC 2024 x86_64
OS uptime: 0 days 16:01 hours
libc: glibc 2.39 NPTL 2.39 
rlimit (soft/hard): STACK 8192k/infinity , CORE 0k/infinity , NPROC 125013/125013 , NOFILE 1048576/1048576 , AS infinity/infinity , CPU infinity/infinity , DATA infinity/infinity , FSIZE infinity/infinity , MEMLOCK 4009332k/4009332k
load average: 2.57 0.88 0.33

/proc/meminfo:
MemTotal:       32074664 kB
MemFree:        21132508 kB
MemAvailable:   24514888 kB
Buffers:          475840 kB
Cached:          3323580 kB
SwapCached:            0 kB
Active:          6580136 kB
Inactive:        2447104 kB
Active(anon):    5358756 kB
Inactive(anon):        0 kB
Active(file):    1221380 kB
Inactive(file):  2447104 kB
Unevictable:          32 kB
Mlocked:              32 kB
SwapTotal:       8388604 kB
SwapFree:        8388604 kB
Zswap:                 0 kB
Zswapped:              0 kB
Dirty:               668 kB
Writeback:             0 kB
AnonPages:       5228348 kB
Mapped:          1147744 kB
Shmem:            130572 kB
KReclaimable:     157340 kB
Slab:             468024 kB
SReclaimable:     157340 kB
SUnreclaim:       310684 kB
KernelStack:       24452 kB
PageTables:        61412 kB
SecPageTables:         0 kB
NFS_Unstable:          0 kB
Bounce:                0 kB
WritebackTmp:          0 kB
CommitLimit:    24425936 kB
Committed_AS:   28347284 kB
VmallocTotal:   34359738367 kB
VmallocUsed:      166616 kB
VmallocChunk:          0 kB
Percpu:            21376 kB
HardwareCorrupted:     0 kB
AnonHugePages:         0 kB
ShmemHugePages:        0 kB
ShmemPmdMapped:        0 kB
FileHugePages:         0 kB
FilePmdMapped:         0 kB
Unaccepted:            0 kB
HugePages_Total:       0
HugePages_Free:        0
HugePages_Rsvd:        0
HugePages_Surp:        0
Hugepagesize:       2048 kB
Hugetlb:               0 kB
DirectMap4k:     1610216 kB
DirectMap2M:    16467968 kB
DirectMap1G:    15728640 kB

/sys/kernel/mm/transparent_hugepage/enabled: always [madvise] never
/sys/kernel/mm/transparent_hugepage/hpage_pmd_size: 2097152
/sys/kernel/mm/transparent_hugepage/defrag (defrag/compaction efforts parameter): always defer defer+madvise [madvise] never

Process Memory:
Virtual Size: 17771940K (peak: 17771940K)
Resident Set Size: 321964K (peak: 321964K) (anon: 154348K, file: 159424K, shmem: 8192K)
Swapped out: 0K
C-Heap outstanding allocations: 74167K, retained: 9112K
glibc malloc tunables: (default)

/proc/sys/kernel/threads-max (system-wide limit on the number of threads): 250026
/proc/sys/vm/max_map_count (maximum number of memory map areas a process may have): 1048576
/proc/sys/vm/swappiness (control to define how aggressively the kernel swaps out anonymous memory): 60
/proc/sys/kernel/pid_max (system-wide limit on number of process identifiers): 4194304

container (cgroup) information:
container_type: cgroupv2
cpu_cpuset_cpus: not supported
cpu_memory_nodes: not supported
active_processor_count: 16
cpu_quota: not supported
cpu_period: not supported
cpu_shares: not supported
memory_limit_in_bytes: unlimited
memory_and_swap_limit_in_bytes: unlimited
memory_soft_limit_in_bytes: unlimited
memory_usage_in_bytes: 2820748 k
memory_max_usage_in_bytes: not supported
memory_swap_current_in_bytes: unlimited
memory_swap_max_limit_in_bytes: unlimited
maximum number of tasks: 37503
current number of tasks: 229

Steal ticks since vm start: 0
Steal ticks percentage since vm start:  0.000

CPU: total 16 (initial active 16) (16 cores per cpu, 2 threads per core) family 25 model 68 stepping 1 microcode 0xa404101, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4a, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, clmul, bmi1, bmi2, adx, sha, fma, vzeroupper, clflush, clflushopt, rdtscp, rdpid, f16c, pku, ospke, cet_ss
CPU Model and flags from /proc/cpuinfo:
model name	: AMD Ryzen 9 6900HS with Radeon Graphics
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf rapl pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 invpcid cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local user_shstk clzero irperf xsaveerptr rdpru wbnoinvd cppc arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip pku ospke vaes vpclmulqdq rdpid overflow_recov succor smca debug_swap

Online cpus: 0-15
Offline cpus: 
BIOS frequency limitation: <Not Available>
Frequency switch latency (ns): 0
Available cpu frequencies: <Not Available>
Current governor: powersave
Core performance/turbo boost: <Not Available>

Memory: 4k page, physical 32074664k(24514888k free), swap 8388604k(8388604k free)
Page Sizes: 4k

vm_info: OpenJDK 64-Bit Server VM (21.0.5+11-Ubuntu-1ubuntu124.04) for linux-amd64 JRE (21.0.5+11-Ubuntu-1ubuntu124.04), built on 2024-10-22T07:47:02Z by "buildd" with gcc 13.2.0

END.
