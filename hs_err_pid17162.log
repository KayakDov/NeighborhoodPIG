#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007edca5c327ba, pid=17162, tid=17166
#
# JRE version: OpenJDK Runtime Environment (21.0.5+11) (build 21.0.5+11-Ubuntu-1ubuntu124.04)
# Java VM: OpenJDK 64-Bit Server VM (21.0.5+11-Ubuntu-1ubuntu124.04, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)
# Problematic frame:
# C  [libcuda.so.1+0x2327ba]
#
# Core dump will be written. Default location: Core dumps may be processed with "/usr/share/apport/apport -p%p -s%s -c%c -d%d -P%P -u%u -g%g -- %E" (or dumping to /home/dov/projects/NeighborhoodPIG/core.17162)
#
# If you would like to submit a bug report, please visit:
#   https://bugs.launchpad.net/ubuntu/+source/openjdk-21
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: -Dfile.encoding=UTF-8 --module-path=/home/dov/projects/NeighborhoodPIG/build/classes main.TestStuff

Host: AMD Ryzen 9 6900HS with Radeon Graphics, 16 cores, 30G, Ubuntu 24.04.1 LTS
Time: Tue Nov 26 20:46:23 2024 IST elapsed time: 0.483242 seconds (0d 0h 0m 0s)

---------------  T H R E A D  ---------------

Current thread (0x00007edcd001a0a0):  JavaThread "main"             [_thread_in_native, id=17166, stack(0x00007edcd7100000,0x00007edcd7200000) (1024K)]

Stack: [0x00007edcd7100000,0x00007edcd7200000],  sp=0x00007edcd71fdac0,  free space=1014k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [libcuda.so.1+0x2327ba]
C  [libcuda.so.1+0x4e22e7]
C  [libcuda.so.1+0x141496]
C  [libcuda.so.1+0x1419b0]
C  [libcuda.so.1+0x142707]
C  [libcuda.so.1+0x2ec0e1]
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
J 435  jcuda.runtime.JCuda.cudaMemcpyAsyncNative(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I (0 bytes) @ 0x00007edcc03c1bbc [0x00007edcc03c1b20+0x000000000000009c]
J 531 c2 JCudaWrapper.array.DArray.get(LJCudaWrapper/resourceManagement/Handle;[DIII)V (26 bytes) @ 0x00007edcc03d60c4 [0x00007edcc03d54c0+0x0000000000000c04]
j  JCudaWrapper.array.DArray.get(LJCudaWrapper/resourceManagement/Handle;[DIIIII)V+56
j  JCudaWrapper.algebra.Vector.toArray()[D+27
j  JCudaWrapper.algebra.VectorsStride.lambda$copyToCPURows$1(I)[D+5
j  JCudaWrapper.algebra.VectorsStride$$Lambda+0x00007edc5000c548.apply(I)Ljava/lang/Object;+5
j  java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V+17 java.base@21.0.5
j  JCudaWrapper.algebra.VectorsStride.copyToCPURows()[[D+15
j  JCudaWrapper.algebra.VectorsStride.toString()Ljava/lang/String;+1
j  JCudaWrapper.algebra.Matrix.toString()Ljava/lang/String;+4
j  java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;+11 java.base@21.0.5
j  java.io.PrintStream.println(Ljava/lang/Object;)V+1 java.base@21.0.5
j  main.TestStuff.main([Ljava/lang/String;)V+27
v  ~StubRoutines::call_stub 0x00007edcbfc5fcc6

siginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x00000000001fffe0

Registers:
RAX=0x0000000000000001, RBX=0x00007edcd71fe0f8, RCX=0x0000000000000001, RDX=0x0000000000000005
RSP=0x00007edcd71fdac0, RBP=0x00007edcd71fdae0, RSI=0x00000000001fff90, RDI=0x00007edcd1673c30
R8 =0x0000000000000002, R9 =0x0000000000000000, R10=0x0000000000000000, R11=0x0000000000000246
R12=0x00007edcd71fdf68, R13=0x00007edcd71fe0f8, R14=0x00007edcd71fdf68, R15=0x0000000000000001
RIP=0x00007edca5c327ba, EFLAGS=0x0000000000010202, CSGSFS=0x002b000000000033, ERR=0x0000000000000004
  TRAPNO=0x000000000000000e


Register to memory mapping:

RAX=0x0000000000000001 is an unknown value
RBX=0x00007edcd71fe0f8 is pointing into the stack for thread: 0x00007edcd001a0a0
RCX=0x0000000000000001 is an unknown value
RDX=0x0000000000000005 is an unknown value
RSP=0x00007edcd71fdac0 is pointing into the stack for thread: 0x00007edcd001a0a0
RBP=0x00007edcd71fdae0 is pointing into the stack for thread: 0x00007edcd001a0a0
RSI=0x00000000001fff90 is an unknown value
RDI=0x00007edcd1673c30 points into unknown readable memory: 0x00000007edcd1673 | 73 16 cd ed 07 00 00 00
R8 =0x0000000000000002 is an unknown value
R9 =0x0 is null
R10=0x0 is null
R11=0x0000000000000246 is an unknown value
R12=0x00007edcd71fdf68 is pointing into the stack for thread: 0x00007edcd001a0a0
R13=0x00007edcd71fe0f8 is pointing into the stack for thread: 0x00007edcd001a0a0
R14=0x00007edcd71fdf68 is pointing into the stack for thread: 0x00007edcd001a0a0
R15=0x0000000000000001 is an unknown value

Top of Stack: (sp=0x00007edcd71fdac0)
0x00007edcd71fdac0:   00007edcd081ec20 0000000000000000
0x00007edcd71fdad0:   00007edcd063e580 00007edcd081ec20
0x00007edcd71fdae0:   00007edcd71fdd10 00007edca5ee22e7
0x00007edcd71fdaf0:   00007edbe8e1e240 0000000000000000
0x00007edcd71fdb00:   0000000000000000 00007edcd71fdba0
0x00007edcd71fdb10:   00007edc00000000 0000000000000000
0x00007edcd71fdb20:   0000000200000000 00007edcd081ec20
0x00007edcd71fdb30:   00007edcd081ec20 00000005d081ec20
0x00007edcd71fdb40:   00007edcd081ec20 00007edcd063e580
0x00007edcd71fdb50:   00007edcd063e580 0000000000000000
0x00007edcd71fdb60:   0000000000000001 0000000000000000
0x00007edcd71fdb70:   00007edcd081ec20 00007edca5c3562d
0x00007edcd71fdb80:   00007edcd71fdd48 00017edcd71fdd30
0x00007edcd71fdb90:   00007edcd71fdbc0 0000000000000000
0x00007edcd71fdba0:   0000000000000001 0000000000000000
0x00007edcd71fdbb0:   0000000000000000 0000000000000000
0x00007edcd71fdbc0:   0000000000000000 00007edcd081ec20
0x00007edcd71fdbd0:   0000000000000000 00007edcd71fdf68
0x00007edcd71fdbe0:   0000000000000101 00007edcd081ec20
0x00007edcd71fdbf0:   00007edcd07b1680 0000000000000003
0x00007edcd71fdc00:   0000000000000000 00007edca5b40fd6
0x00007edcd71fdc10:   0000000000000001 00007edca5b41496
0x00007edcd71fdc20:   0000000095fa4ef8 00007edcd063e580
0x00007edcd71fdc30:   00007edcd71fde50 00007edcd063e580
0x00007edcd71fdc40:   00007edc00000001 0000000000000000
0x00007edcd71fdc50:   00007edcd081ec20 00007edcd081ec20
0x00007edcd71fdc60:   00007edcd081ec20 00007edcd063e580
0x00007edcd71fdc70:   00007edcd063e580 0000000000000000
0x00007edcd71fdc80:   0000000000000001 0000000000000000
0x00007edcd71fdc90:   00007edcd081ec20 00007edca5c3562d
0x00007edcd71fdca0:   00007edcd063e598 7625c30de918fd00
0x00007edcd71fdcb0:   00007edcd71fdd00 00007edcd063e580 

Instructions: (pc=0x00007edca5c327ba)
0x00007edca5c326ba:   00 02 00 00 00 48 83 c4 08 31 c0 5b 41 5c 41 5d
0x00007edca5c326ca:   5d c3 0f 1f 40 00 48 8b 42 48 0f b6 80 09 01 00
0x00007edca5c326da:   00 83 e0 7e 3c 1e 0f 94 c0 e9 ff fe ff ff 0f 1f
0x00007edca5c326ea:   84 00 00 00 00 00 4d 8b ad 68 01 00 00 e9 56 ff
0x00007edca5c326fa:   ff ff 0f 1f 40 00 48 89 df e8 78 fc ff ff 89 83
0x00007edca5c3270a:   a4 00 00 00 83 f8 ff 0f 85 10 ff ff ff eb 9c 31
0x00007edca5c3271a:   c0 e9 a8 fe ff ff 31 c0 48 83 3e 00 0f 84 14 01
0x00007edca5c3272a:   00 00 55 48 89 e5 41 54 53 48 89 f3 48 83 ec 10
0x00007edca5c3273a:   48 83 7e 08 00 0f 84 e8 00 00 00 48 83 7e 10 00
0x00007edca5c3274a:   0f 84 dd 00 00 00 8b 07 49 89 fc 89 c1 83 f8 02
0x00007edca5c3275a:   0f 84 98 00 00 00 85 c0 0f 84 18 02 00 00 83 f8
0x00007edca5c3276a:   01 0f 85 9f 01 00 00 48 8b 77 20 48 85 f6 0f 84
0x00007edca5c3277a:   ca 00 00 00 48 83 be 10 02 00 00 00 0f 85 c7 02
0x00007edca5c3278a:   00 00 48 8b 76 48 48 8b b6 88 02 00 00 48 8b 76
0x00007edca5c3279a:   08 85 c0 0f 85 05 02 00 00 49 8b 7c 24 18 48 85
0x00007edca5c327aa:   f6 0f 95 c0 48 85 ff 0f 95 c1 21 c8 84 c0 74 12
0x00007edca5c327ba:   48 8b 76 50 89 55 ec e8 7a d7 15 00 8b 55 ec 48
0x00007edca5c327ca:   89 c7 48 85 ff 74 70 48 8b 47 48 48 8b 80 08 01
0x00007edca5c327da:   00 00 48 c1 e8 28 83 e0 0e 3c 02 75 05 f6 c2 04
0x00007edca5c327ea:   74 3c 41 8b 0c 24 eb 58 66 0f 1f 44 00 00 48 8b
0x00007edca5c327fa:   47 60 48 85 c0 0f 84 73 01 00 00 48 8b 40 40 48
0x00007edca5c3280a:   8b 8f 90 00 00 00 8b 00 48 0f a3 c1 0f 82 5c 01
0x00007edca5c3281a:   00 00 83 e2 04 0f 85 53 01 00 00 0f 1f 00 b8 01
0x00007edca5c3282a:   00 00 00 48 83 c4 10 5b 41 5c 5d c3 66 2e 0f 1f
0x00007edca5c3283a:   84 00 00 00 00 00 c3 41 8b 04 24 0f 1f 00 89 c1
0x00007edca5c3284a:   83 f9 01 0f 84 6d 01 00 00 0f 87 b7 00 00 00 49
0x00007edca5c3285a:   8b 4c 24 08 49 8b 84 24 b0 00 00 00 8b 51 70 48
0x00007edca5c3286a:   39 d0 73 ba 48 8b 33 48 8d 3c 30 48 39 fa 72 ae
0x00007edca5c3287a:   44 0f b6 41 18 8b 79 10 41 8d 90 6f ff ff ff 83
0x00007edca5c3288a:   fa 0d 0f 87 ba 01 00 00 8b 51 6c 48 09 f0 83 ea
0x00007edca5c3289a:   01 48 85 c2 75 88 8b b1 98 00 00 00 31 d2 8d 44
0x00007edca5c328aa:   37 ff f7 f6 49 8b 94 24 b8 00 00 00 85 ff 0f 84 


Stack slot to memory mapping:

stack at sp + 0 slots: 0x00007edcd081ec20 points into unknown readable memory: 0x0000000000000001 | 01 00 00 00 00 00 00 00
stack at sp + 1 slots: 0x0 is null
stack at sp + 2 slots: 0x00007edcd063e580 points into unknown readable memory: 0x0000000100000000 | 00 00 00 00 01 00 00 00
stack at sp + 3 slots: 0x00007edcd081ec20 points into unknown readable memory: 0x0000000000000001 | 01 00 00 00 00 00 00 00
stack at sp + 4 slots: 0x00007edcd71fdd10 is pointing into the stack for thread: 0x00007edcd001a0a0
stack at sp + 5 slots: 0x00007edca5ee22e7: <offset 0x00000000004e22e7> in /lib/x86_64-linux-gnu/libcuda.so.1 at 0x00007edca5a00000
stack at sp + 6 slots: 0x00007edbe8e1e240: <offset 0x000000002161e240> in /usr/local/cuda/lib64/libcublasLt.so.12 at 0x00007edbc7800000
stack at sp + 7 slots: 0x0 is null


Compiled method (n/a) 490  435     n 0       jcuda.runtime.JCuda::cudaMemcpyAsyncNative (native)
 total in heap  [0x00007edcc03c1990,0x00007edcc03c1d50] = 960
 relocation     [0x00007edcc03c1ae8,0x00007edcc03c1b20] = 56
 main code      [0x00007edcc03c1b20,0x00007edcc03c1d48] = 552
 oops           [0x00007edcc03c1d48,0x00007edcc03c1d50] = 8

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x00007edc4445b598} 'cudaMemcpyAsyncNative' '(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I' in 'jcuda/runtime/JCuda'
  # parm0:    rsi:rsi   = 'jcuda/Pointer'
  # parm1:    rdx:rdx   = 'jcuda/Pointer'
  # parm2:    rcx:rcx   = long
  # parm3:    r8        = int
  # parm4:    r9:r9     = 'jcuda/runtime/cudaStream_t'
  #           [sp+0x60]  (sp of caller)
  0x00007edcc03c1b20: 448b 5608 | 49bb 0000 | 004f dc7e | 0000 4d03 | d349 3bc2 | 0f84 0600 

  0x00007edcc03c1b38: ;   {runtime_call ic_miss_stub}
  0x00007edcc03c1b38: 0000 e941 | b58e ff90 
[Verified Entry Point]
  0x00007edcc03c1b40: 8984 2400 | c0fe ff55 | 488b ec48 | 83ec 5090 | 4181 7f20 | 0100 0000 

  0x00007edcc03c1b58: ;   {runtime_call StubRoutines (final stubs)}
  0x00007edcc03c1b58: 7405 e841 | 198d ff4c | 894c 2428 | 4983 f900 | 488d 4424 | 2848 0f44 | 4424 2848 | 8904 244d 
  0x00007edcc03c1b78: 8bc8 4c8b | c148 8954 | 2410 4883 | fa00 488d | 4c24 1048 | 0f44 4c24 | 1048 8974 | 2408 4883 
  0x00007edcc03c1b98: fe00 488d | 5424 0848 | 0f44 5424 

  0x00007edcc03c1ba4: ;   {oop(a 'java/lang/Class'{0x0000000633812f70} = 'jcuda/runtime/JCuda')}
  0x00007edcc03c1ba4: 0849 be70 | 2f81 3306 | 0000 004c | 8974 2438 | 4c8d 7424 | 3849 8bf6 

  0x00007edcc03c1bbc: ;   {internal_word}
  0x00007edcc03c1bbc: c5f8 7749 | babc 1b3c | c0dc 7e00 | 004d 8997 | a003 0000 | 4989 a798 

  0x00007edcc03c1bd4: ;   {external_word}
  0x00007edcc03c1bd4: 0300 0080 | 3daf c433 | 1800 0f84 | 3c00 0000 | 5652 5141 

  0x00007edcc03c1be8: ;   {metadata({method} {0x00007edc4445b598} 'cudaMemcpyAsyncNative' '(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I' in 'jcuda/runtime/JCuda')}
  0x00007edcc03c1be8: 5041 5148 | be98 b545 | 44dc 7e00 | 0049 8bff | 40f6 c40f | 0f84 1200 | 0000 4883 

  0x00007edcc03c1c04: ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007edcc03c1c04: ec08 e885 | 84bf 1748 | 83c4 08e9 | 0500 0000 

  0x00007edcc03c1c14: ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007edcc03c1c14: e877 84bf | 1741 5941 | 5859 5a5e | 498d bfb8 | 0300 0041 | c787 4404 | 0000 0400 

  0x00007edcc03c1c30: ;   {runtime_call Java_jcuda_runtime_JCuda_cudaMemcpyAsyncNative}
  0x00007edcc03c1c30: 0000 e8d9 | e085 d8c5 | f877 41c7 | 8744 0400 | 0005 0000 | 00f0 8344 | 24c0 0049 | 3baf 4804 
  0x00007edcc03c1c50: 0000 0f87 | 0e00 0000 | 4183 bf40 | 0400 0000 | 0f84 2400 | 0000 c5f8 | 7748 8945 | f849 8bff 
  0x00007edcc03c1c70: 4c8b e448 | 83ec 0048 

  0x00007edcc03c1c78: ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007edcc03c1c78: 83e4 f0e8 | d027 7617 | 498b e44d | 33e4 488b | 45f8 41c7 | 8744 0400 | 0008 0000 | 0041 83bf 
  0x00007edcc03c1c98: c004 0000 | 020f 847f 

  0x00007edcc03c1ca0: ;   {external_word}
  0x00007edcc03c1ca0: 0000 0080 | 3de3 c333 | 1800 0f84 | 3600 0000 | 4889 45f8 

  0x00007edcc03c1cb4: ;   {metadata({method} {0x00007edc4445b598} 'cudaMemcpyAsyncNative' '(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I' in 'jcuda/runtime/JCuda')}
  0x00007edcc03c1cb4: 48be 98b5 | 4544 dc7e | 0000 498b | ff40 f6c4 | 0f0f 8412 | 0000 0048 

  0x00007edcc03c1ccc: ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007edcc03c1ccc: 83ec 08e8 | ac84 bf17 | 4883 c408 | e905 0000 

  0x00007edcc03c1cdc: ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007edcc03c1cdc: 00e8 9e84 | bf17 488b | 45f8 49c7 | 8798 0300 | 0000 0000 | 0049 c787 | a003 0000 | 0000 0000 
  0x00007edcc03c1cfc: c5f8 7749 | 8b8f 2804 | 0000 c781 | 0001 0000 | 0000 0000 | c949 837f | 0800 0f85 | 0100 0000 
  0x00007edcc03c1d1c: ;   {runtime_call StubRoutines (initial stubs)}
  0x00007edcc03c1d1c: c3e9 dede | 89ff c5f8 | 7748 8945 | f84c 8be4 | 4883 ec00 | 4883 e4f0 

  0x00007edcc03c1d34: ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007edcc03c1d34: e8b7 93bf | 1749 8be4 | 4d33 e448 | 8b45 f8e9 | 5bff ffff 
[/MachCode]


Compiled method (c2) 499  531       4       JCudaWrapper.array.DArray::get (26 bytes)
 total in heap  [0x00007edcc03d5190,0x00007edcc03d9bf0] = 19040
 relocation     [0x00007edcc03d52e8,0x00007edcc03d54b8] = 464
 main code      [0x00007edcc03d54c0,0x00007edcc03d7608] = 8520
 stub code      [0x00007edcc03d7608,0x00007edcc03d7630] = 40
 oops           [0x00007edcc03d7630,0x00007edcc03d7690] = 96
 metadata       [0x00007edcc03d7690,0x00007edcc03d7980] = 752
 scopes data    [0x00007edcc03d7980,0x00007edcc03d9570] = 7152
 scopes pcs     [0x00007edcc03d9570,0x00007edcc03d99f0] = 1152
 dependencies   [0x00007edcc03d99f0,0x00007edcc03d9a60] = 112
 handler table  [0x00007edcc03d9a60,0x00007edcc03d9b98] = 312
 nul chk table  [0x00007edcc03d9b98,0x00007edcc03d9bf0] = 88

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x00007edc44481890} 'get' '(LJCudaWrapper/resourceManagement/Handle;[DIII)V' in 'JCudaWrapper/array/DArray'
  # this:     rsi:rsi   = 'JCudaWrapper/array/DArray'
  # parm0:    rdx:rdx   = 'JCudaWrapper/resourceManagement/Handle'
  # parm1:    rcx:rcx   = '[D'
  # parm2:    r8        = int
  # parm3:    r9        = int
  # parm4:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x00007edcc03d54c0: 448b 5608 | 49bb 0000 | 004f dc7e | 0000 4d03 | d349 3bc2 

  0x00007edcc03d54d4: ;   {runtime_call ic_miss_stub}
  0x00007edcc03d54d4: 0f85 a67b | 8dff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x00007edcc03d54e0: 8984 2400 | c0fe ff55 | 4883 ec60 | 4181 7f20 | 0100 0000 | 0f85 0421 | 0000 897c | 241c 4489 
  0x00007edcc03d5500: 4c24 3044 | 8944 2418 | 4889 4c24 | 2848 8954 | 2410 4889 | 7424 204d | 8b87 b801 | 0000 4d8b 
  0x00007edcc03d5520: d049 83c2 | 184d 3b97 | c801 0000 | 0f83 7d0e | 0000 4d89 | 97b8 0100 | 0041 0f18 | 8200 0100 
  0x00007edcc03d5540: 0049 c700 | 0100 0000 | 410f 1882 | 4001 0000 

  0x00007edcc03d5550: ;   {metadata('java/lang/Object'[])}
  0x00007edcc03d5550: 41c7 4008 | 4012 0000 | 410f 1882 | 8001 0000 | 41c7 400c | 0100 0000 | 4589 6014 | 4c8b 5424 
  0x00007edcc03d5570: 284d 8bda | 49c1 eb03 | 4589 5810 | 498b afb8 | 0100 004c | 8bd5 4983 | c228 4d3b | 97c8 0100 
  0x00007edcc03d5590: 000f 8345 | 0e00 004d | 8997 b801 | 0000 410f | 1882 0001 | 0000 48c7 | 4500 0100 

  0x00007edcc03d55ac: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007edcc03d55ac: 0000 c745 | 08d0 a00e | 0044 8965 | 0c44 8965 | 2448 c745 | 10ff ffff | ff4d 8bd8 | 49c1 eb03 
  0x00007edcc03d55cc: 49ba 0100 | 0000 5044 | 0000 4c89 | 5518 4489 | 5d20 498b | 9fb8 0100 | 004c 8bd3 | 4983 c238 
  0x00007edcc03d55ec: 4d3b 97c8 | 0100 000f | 8314 0e00 | 004d 8997 | b801 0000 | 410f 1882 | 0001 0000 | 48c7 0301 
  0x00007edcc03d560c: ;   {metadata('java/util/stream/ReferencePipeline$Head')}
  0x00007edcc03d560c: 0000 00c7 | 4308 201b | 0e00 4489 | 630c 4c89 | 6310 4c89 | 6318 4c89 | 6320 4489 | 632c 4c89 
  0x00007edcc03d562c: 6330 4c8b | dd49 c1eb | 0344 895b | 284c 8bd5 | 488b eb48 | c1ed 034c | 8bdb 4d33 | d349 c1ea 
  0x00007edcc03d564c: 164d 85d2 | 741a 49c1 | eb09 48bf | 00c0 74b4 | dc7e 0000 | 4903 fb80 | 3f02 0f85 | da0b 0000 
  0x00007edcc03d566c: 4180 7f40 | 000f 858a | 0a00 0089 | 6b1c 4488 | 631a 0fb6 | 6b18 c743 | 0c50 0000 | 00c7 4314 
  0x00007edcc03d568c: 5f00 0000 | 4489 6310 | 85ed 0f85 | cc16 0000 | 448b 4b28 | c643 1801 

  0x00007edcc03d56a4: ; implicit exception: dispatches to 0x00007edcc03d7480
  0x00007edcc03d56a4: 478b 74cc | 0841 807f | 4000 0f85 | 840a 0000 | 4489 6328 | c743 146f 

  0x00007edcc03d56bc: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x0000000633812f20})}
  0x00007edcc03d56bc: 0000 0149 | ba20 2f81 | 3306 0000 | 0041 0fb6 | 6a19 85ed | 0f84 c216 

  0x00007edcc03d56d4: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x0000000633812f40})}
  0x00007edcc03d56d4: 0000 49ba | 402f 8133 | 0600 0000 | 458b 4224 | 458b 521c | 4181 e06f | 0000 0145 | 3bc2 0f85 
  0x00007edcc03d56f4: 1414 0000 | 4f8d 04cc 

  0x00007edcc03d56fc: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007edcc03d56fc: 4181 fef8 | 9204 010f | 848b 0000 

  0x00007edcc03d5708: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007edcc03d5708: 0041 81fe | d0a0 0e00 | 0f85 c618 | 0000 418b | 681c 83e5 | 4085 ed0f | 849f 1b00 | 004d 8b50 
  0x00007edcc03d5728: 104d 85d2 | 0f8c 7e00 | 0000 4533 | db4d 3bd3 | bdff ffff | ff7c 0840 | 0f95 c540 | 0fb6 edbe 
  0x00007edcc03d5748: 45ff ffff | 4c8b 5424 | 204c 8914 | 244c 8b54 | 2410 4c89 | 5424 0844 | 8b54 2418 | 4489 5424 
  0x00007edcc03d5768: 1044 8b5c | 2430 4489 | 5c24 1448 | ff74 2428 | 488f 4424 | 2048 895c | 2430 4c89 

  0x00007edcc03d5784: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d5784: 4424 38e8 

  0x00007edcc03d5788: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::estimateSize@6 (line 1042)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d5788: 74d7 8dff 

  0x00007edcc03d578c: ;   {other}
  0x00007edcc03d578c: 0f1f 8400 | fc05 0000 | 418b 681c | 83e5 4085 | ed0f 840d | 1900 004d | 8b50 104d | 85d2 0f8d 
  0x00007edcc03d57ac: 5019 0000 | 4f8d 14cc | 458b 4208 

  0x00007edcc03d57b8: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007edcc03d57b8: 4181 f8d0 | a00e 000f | 859f 1200 | 0049 8bda | 8b7b 2045 | 8b5c fc0c 

  0x00007edcc03d57d0: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x0000000633812f20})}
  0x00007edcc03d57d0: 49b8 202f | 8133 0600 | 0000 450f | b648 1845 | 85c9 0f84 | 6811 0000 | 8b73 184d | 8d14 fc48 
  0x00007edcc03d57f0: b900 c074 | b4dc 7e00 | 000f 1f80 | 0000 0000 | 448b 430c | 4585 c00f | 8c17 1200 | 0044 3bc6 
  0x00007edcc03d5810: 7c05 4533 | c0eb 2445 | 8d48 0144 | 894b 0c45 | 3bc3 0f83 | dc10 0000 | 438b 6c82 | 1085 ed0f 
  0x00007edcc03d5830: 84ff 1400 | 0041 b801 | 0000 004d | 8b8f 5004 

  0x00007edcc03d5840: ; ImmutableOopMap {r10=Oop rbx=Oop rdi=NarrowOop [16]=Oop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.ReferencePipeline::forEachWithCancel@18 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
                      ;   {poll}
  0x00007edcc03d5840: 0000 4185 | 0145 85c0 | 75b6 4c8b | 5424 2841 | 8b6a 0c4d | 8b9f b801 | 0000 4d8b | d349 83c2 
  0x00007edcc03d5860: 384d 3b97 | c801 0000 | 0f83 be0b | 0000 4d89 | 97b8 0100 | 0041 0f18 | 8200 0100 | 0049 c703 
  0x00007edcc03d5880: 0100 0000 

  0x00007edcc03d5884: ;   {metadata('java/nio/HeapDoubleBuffer')}
  0x00007edcc03d5884: 41c7 4308 | 80bc 0401 | 4d89 6310 | 4589 6318 | 4589 6324 | 4d89 6328 | 4d89 6330 | 41c7 430c 
  0x00007edcc03d58a4: ffff ffff | 4189 6b1c | 4189 6b20 | 4c8b 5424 | 2849 c1ea | 0345 8953 | 304c 8b54 | 2428 4d8b 
  0x00007edcc03d58c4: c34d 33d0 | 49c1 ea16 | 48bd 0300 | 0000 5044 | 0000 4d85 | d274 1a49 | c1e8 0948 | bf00 c074 
  0x00007edcc03d58e4: b4dc 7e00 | 0049 03f8 | 803f 020f | 859f 0900 | 0045 8963 | 284d 8b8f | b801 0000 | 49c7 4310 
  0x00007edcc03d5904: 1000 0000 | 4d8b d149 | 83c2 204d | 3b97 c801 | 0000 0f83 | 4e0b 0000 | 4d89 97b8 | 0100 0041 
  0x00007edcc03d5924: 0f18 8200 | 0100 0049 | c701 0100 | 0000 410f | 1882 4001 

  0x00007edcc03d5938: ;   {metadata({type array int})}
  0x00007edcc03d5938: 0000 41c7 | 4108 3826 | 0000 410f | 1882 8001 | 0000 41c7 | 410c 0300 | 0000 4589 | 611c 448b 
  0x00007edcc03d5958: 4424 1845 | 8941 1044 | 8b54 2430 | 4589 5114 | 8b5c 241c | 4189 5918 | 498b bfb8 | 0100 004c 
  0x00007edcc03d5978: 8bd7 4983 | c228 4d3b | 97c8 0100 | 000f 8316 | 0b00 004d | 8997 b801 | 0000 410f | 1882 0001 
  0x00007edcc03d5998: 0000 48c7 | 0701 0000 

  0x00007edcc03d59a0: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007edcc03d59a0: 00c7 4708 | f892 0401 | 4489 670c | 4489 6724 | 48c7 4710 | ffff ffff | 4889 6f18 | 49c1 e903 
  0x00007edcc03d59c0: 4489 4f20 | 4d8b 97b8 | 0100 004d | 8bca 4983 | c138 4d3b | 8fc8 0100 | 000f 8344 | 0b00 004d 
  0x00007edcc03d59e0: 898f b801 | 0000 410f | 1881 0001 | 0000 49c7 | 0201 0000 

  0x00007edcc03d59f4: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007edcc03d59f4: 0041 c742 | 08f0 9c04 | 0145 8962 | 0c4d 8962 | 104d 8962 | 184d 8962 | 2045 8962 | 2c4d 8962 
  0x00007edcc03d5a14: 3048 8bdf | 48c1 eb03 | 4189 5a28 | 4c8b cf49 | 8bea 48c1 | ed03 498b | da4c 33cb | 49c1 e916 
  0x00007edcc03d5a34: 4d85 c974 | 1a48 c1eb | 0948 bf00 | c074 b4dc | 7e00 0048 | 03fb 803f | 020f 859b | 0800 0041 
  0x00007edcc03d5a54: 807f 4000 | 0f85 1107 | 0000 4189 | 6a1c 410f | b66a 1841 | c742 0c50 | 0000 0045 | 8862 1a45 
  0x00007edcc03d5a74: 8962 1041 | c742 145f | 0000 0085 | ed0f 8561 | 1300 0041 | c642 1801 | 458b 4a28 

  0x00007edcc03d5a90: ; implicit exception: dispatches to 0x00007edcc03d74c8
  0x00007edcc03d5a90: 438b 5ccc | 0841 807f | 4000 0f85 | 0507 0000 | 4589 6228 

  0x00007edcc03d5aa4: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x0000000633812f20})}
  0x00007edcc03d5aa4: 48bf 202f | 8133 0600 | 0000 0fb6 | 6f19 41c7 | 4214 6f00 | 0001 85ed | 0f84 5613 

  0x00007edcc03d5ac0: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x0000000633812f40})}
  0x00007edcc03d5ac0: 0000 48bf | 402f 8133 | 0600 0000 

  0x00007edcc03d5acc: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x0000000633812f40})}
  0x00007edcc03d5acc: 8b7f 2448 | ba40 2f81 | 3306 0000 | 008b 521c | 81e7 6f00 | 0001 3bfa | 0f85 7210 | 0000 4b8d 
  0x00007edcc03d5aec: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007edcc03d5aec: 3ccc 81fb | f892 0401 | 0f84 8600 

  0x00007edcc03d5af8: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007edcc03d5af8: 0000 81fb | d0a0 0e00 | 0f85 1e15 | 0000 8b6f | 1c83 e540 | 85ed 0f84 | 0018 0000 | 488b 5f10 
  0x00007edcc03d5b18: 4885 db7c | 7e45 33c9 | 493b d9bd | ffff ffff | 7c08 400f | 95c5 400f | b6ed be45 | ffff ff4c 
  0x00007edcc03d5b38: 8b4c 2420 | 4c89 0c24 | 4c8b 4c24 | 104c 894c | 2408 4489 | 4424 1048 | 8944 24f8 | 8b44 2430 
  0x00007edcc03d5b58: 8944 2414 | 488b 4424 | f84c 895c | 2420 4c89 | 5424 3048 | 897c 2438 

  0x00007edcc03d5b70: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d5b70: 6666 90e8 

  0x00007edcc03d5b74: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::estimateSize@6 (line 1042)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d5b74: 88d3 8dff 

  0x00007edcc03d5b78: ;   {other}
  0x00007edcc03d5b78: 0f1f 8400 | e809 0002 | 8b6f 1c83 | e540 85ed | 0f84 d615 | 0000 488b | 5f10 4885 | db0f 8d15 
  0x00007edcc03d5b98: 1600 004b | 8d3c cc44 

  0x00007edcc03d5ba0: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007edcc03d5ba0: 8b4f 0841 | 81f9 f892 | 0401 0f85 | 0018 0000 | 8b47 2041 | 8b5c c40c 

  0x00007edcc03d5bb8: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x0000000633812f20})}
  0x00007edcc03d5bb8: 49ba 202f | 8133 0600 | 0000 450f | b64a 1845 | 85c9 0f84 | bc0d 0000 | 8b57 1849 | 8d34 c466 
  0x00007edcc03d5bd8: 0f1f 8400 | 0000 0000 | 448b 4f0c | 4585 c90f | 8c87 0c00 | 0044 3bca | 7c05 4533 | c9eb 2445 
  0x00007edcc03d5bf8: 8d51 0144 | 8957 0c44 | 3bcb 0f83 | d40b 0000 | 428b 6c8e | 1085 ed0f | 8c8b 0e00 | 0041 b901 
  0x00007edcc03d5c18: 0000 004d | 8b97 5004 

  0x00007edcc03d5c20: ; ImmutableOopMap {r11=Oop rdi=Oop rsi=Oop rax=NarrowOop [16]=Oop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@31 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
                      ;   {poll}
  0x00007edcc03d5c20: 0000 4185 | 0245 85c9 | 75b6 4c8b | 5424 2045 | 8b52 0c44 | 8b4c 2430 | 8b7c 241c | 418d 6c39 
  0x00007edcc03d5c40: ff41 3bea | 0f8d 1a12 | 0000 4c8b | 5424 2045 | 8b52 1c47 | 0faf 44d4 | 184d 8bb7 | b801 0000 
  0x00007edcc03d5c60: 4d8b d649 | 83c2 2849 | 63e8 4d3b | 97c8 0100 | 000f 8336 | 0900 004d | 8997 b801 | 0000 410f 
  0x00007edcc03d5c80: 1882 0001 | 0000 49c7 | 0601 0000 

  0x00007edcc03d5c8c: ;   {metadata('jcuda/Pointer')}
  0x00007edcc03d5c8c: 0041 c746 | 08f8 3900 | 0145 8966 | 0c4d 8966 | 104d 8966 | 184d 8966 | 2049 896e | 184d 8b8f 
  0x00007edcc03d5cac: b801 0000 | 4d8b d149 | 83c2 184d | 8bc3 49c1 | e803 4589 | 460c 4d3b | 97c8 0100 | 000f 8341 
  0x00007edcc03d5ccc: 0900 004d | 8997 b801 | 0000 410f | 1882 0001 | 0000 49c7 | 0101 0000 | 0041 0f18 | 8240 0100 
  0x00007edcc03d5cec: ;   {metadata({type array int})}
  0x00007edcc03d5cec: 0041 c741 | 0838 2600 | 0041 0f18 | 8280 0100 | 0041 c741 | 0c01 0000 | 0045 8961 | 1444 8b54 
  0x00007edcc03d5d0c: 2430 4589 | 5110 4d8b | 9fb8 0100 | 004d 8bd3 | 4983 c228 | 4d3b 97c8 | 0100 000f | 8347 0900 
  0x00007edcc03d5d2c: 004d 8997 | b801 0000 | 410f 1882 | 0001 0000 | 49c7 0301 

  0x00007edcc03d5d40: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007edcc03d5d40: 0000 0041 | c743 08f8 | 9204 0145 | 8963 0c45 | 8963 2449 | c743 10ff | ffff ff49 | ba01 0000 
  0x00007edcc03d5d60: 0050 4400 | 004d 8953 | 184d 8bd1 | 49c1 ea03 | 4589 5320 | 4d8b afb8 | 0100 004d | 8bd5 4983 
  0x00007edcc03d5d80: c238 4d3b | 97c8 0100 | 000f 836f | 0900 004d | 8997 b801 | 0000 410f | 1882 0001 | 0000 49c7 
  0x00007edcc03d5da0: 4500 0100 

  0x00007edcc03d5da4: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007edcc03d5da4: 0000 41c7 | 4508 f09c | 0401 4589 | 650c 4d89 | 6510 4d89 | 6518 4d89 | 6520 4589 | 652c 4d89 
  0x00007edcc03d5dc4: 6530 4d8b | d349 c1ea | 0345 8955 | 284d 8bd3 | 498b dd48 | c1eb 034d | 8bdd 4d33 | d349 c1ea 
  0x00007edcc03d5de4: 164d 85d2 | 7410 49c1 | eb09 4903 | cb80 3902 | 0f85 6405 | 0000 4180 | 7f40 000f | 85d3 0300 
  0x00007edcc03d5e04: 0041 895d | 1c41 0fb6 | 6d18 41c7 | 450c 5000 | 0000 4588 | 651a 4589 | 6510 41c7 | 4514 5f00 
  0x00007edcc03d5e24: 0000 85ed | 0f85 7e10 | 0000 41c6 | 4518 0145 | 8b5d 2843 | 8b5c dc08 | 4180 7f40 | 000f 85c8 
  0x00007edcc03d5e44: 0300 0045 

  0x00007edcc03d5e48: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x0000000633812f20})}
  0x00007edcc03d5e48: 8965 2849 | ba20 2f81 | 3306 0000 | 0041 0fb6 | 6a19 41c7 | 4514 6f00 | 0001 85ed | 0f84 7610 
  0x00007edcc03d5e68: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x0000000633812f40})}
  0x00007edcc03d5e68: 0000 49ba | 402f 8133 | 0600 0000 | 458b 4a24 | 458b 521c | 4181 e16f | 0000 0145 | 3bca 0f85 
  0x00007edcc03d5e88: 240d 0000 | 4f8d 04dc 

  0x00007edcc03d5e90: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007edcc03d5e90: 81fb f892 | 0401 0f84 | 8c00 0000 

  0x00007edcc03d5e9c: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007edcc03d5e9c: 81fb d0a0 | 0e00 0f85 | c411 0000 | 418b 681c | 83e5 4085 | ed0f 84a9 | 1400 004d | 8b50 104d 
  0x00007edcc03d5ebc: 85d2 0f8c | 8000 0000 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007edcc03d5edc: ffff 4c8b | 5424 104c | 8954 2408 | 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4c89 
  0x00007edcc03d5efc: 7424 1848 | 8944 24f8 | 8b44 2430 | 8944 2414 | 488b 4424 | f84c 896c | 2430 4c89 

  0x00007edcc03d5f18: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d5f18: 4424 38e8 

  0x00007edcc03d5f1c: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::estimateSize@6 (line 1042)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d5f1c: e0cf 8dff 

  0x00007edcc03d5f20: ;   {other}
  0x00007edcc03d5f20: 0f1f 8400 | 900d 0004 | 418b 681c | 83e5 4085 | ed0f 84d9 | 1200 004d | 8b50 104d | 85d2 0f8d 
  0x00007edcc03d5f40: 1c13 0000 | 4b8d 0cdc | 448b 5108 

  0x00007edcc03d5f4c: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007edcc03d5f4c: 4181 faf8 | 9204 010f | 859b 1400 | 008b 5920 

  0x00007edcc03d5f5c: ; implicit exception: dispatches to 0x00007edcc03d69d0
  0x00007edcc03d5f5c: 458b 54dc 

  0x00007edcc03d5f60: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x0000000633812f20})}
  0x00007edcc03d5f60: 0c49 bb20 | 2f81 3306 | 0000 0045 | 0fb6 5b18 | 4585 db0f | 8457 0a00 | 0044 8b59 | 1849 8d3c 
  0x00007edcc03d5f80: dc0f 1f84 | 0000 0000 | 000f 1f80 | 0000 0000 | 448b 410c | 4585 c00f | 8c23 0900 | 0045 3bc3 
  0x00007edcc03d5fa0: 7c05 4533 | c9eb 2341 | 8d50 0189 | 510c 453b | c20f 8375 | 0800 0042 | 8b6c 8710 | 85ed 0f8c 
  0x00007edcc03d5fc0: 100b 0000 | 41b9 0100 | 0000 498b | 9750 0400 | 004c 8b44 

  0x00007edcc03d5fd4: ; ImmutableOopMap {r8=Oop rcx=Oop rbx=NarrowOop rdi=Oop r14=Oop [16]=Oop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@31 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
                      ;   {poll}
  0x00007edcc03d5fd4: 2420 8502 | 4585 c975 | b341 8b68 | 0c44 8b5c | 2430 443b | dd0f 8d41 | 0f00 0045 | 8b50 1c47 
  0x00007edcc03d5ff4: 8b4c d418 | 8b4c 2430 | 410f afc9 | 458b 5818 | 4c63 c145 | 85db 0f84 | fc09 0000 | 498b 97b8 
  0x00007edcc03d6014: 0100 004c | 8bd2 4983 | c228 4d3b | 97c8 0100 | 000f 835b | 0700 004d | 8997 b801 | 0000 410f 
  0x00007edcc03d6034: 1882 0001 | 0000 48c7 | 0201 0000 

  0x00007edcc03d6040: ;   {metadata('jcuda/driver/CUdeviceptr')}
  0x00007edcc03d6040: 00c7 4208 | 90a7 0001 | 4489 620c | 4c89 6210 | 4c89 6218 | 4c89 6220 | 4f03 44dc | 184c 8942 
  0x00007edcc03d6060: 1847 8b44 | dc20 4489 | 4220 4f8b | 54dc 104c | 8952 1047 | 8b5c dc0c | 4489 5a0c | 4c8b 5c24 
  0x00007edcc03d6080: 1041 0fb6 | 6b0c 458b | d144 8b4c | 241c 450f | afca 4963 | c985 ed0f | 84c7 0e00 | 0041 8b6b 
  0x00007edcc03d60a0: 2085 ed0f | 85db 0e00 | 0045 8b53 | 1c4d 8bca | 49c1 e103 | 41b8 0200 | 0000 498b 

  0x00007edcc03d60bc: ;   {static_call}
  0x00007edcc03d60bc: f666 90e8 

  0x00007edcc03d60c0: ; ImmutableOopMap {}
                      ;*invokestatic cudaMemcpyAsyncNative {reexecute=0 rethrow=0 return_oop=0}
                      ; - jcuda.runtime.JCuda::cudaMemcpyAsync@7 (line 5696)
                      ; - JCudaWrapper.array.Array::get@73 (line 248)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d60c0: 7cba feff 

  0x00007edcc03d60c4: ;   {other}
  0x00007edcc03d60c4: 0f1f 8400 | 340f 0006 

  0x00007edcc03d60cc: ;   {oop(a 'java/lang/Class'{0x0000000633812f70} = 'jcuda/runtime/JCuda')}
  0x00007edcc03d60cc: 49ba 702f | 8133 0600 | 0000 410f | b6aa 7d01 | 0000 85ed | 0f85 c60e | 0000 85c0 | 0f85 d60e 
  0x00007edcc03d60ec: 0000 4883 

  0x00007edcc03d60f0: ;   {poll_return}
  0x00007edcc03d60f0: c460 5d49 | 3ba7 4804 | 0000 0f87 | e814 0000 | c344 8b5b | 1c45 85db | 0f84 69f5 | ffff 4d8b 
  0x00007edcc03d6110: 5728 498b | fb48 c1e7 | 034d 85d2 | 0f84 ee0a | 0000 4d8b | 5f38 4b89 | 7c13 f849 | 83c2 f84d 
  0x00007edcc03d6130: 8957 28e9 | 3ff5 ffff | 448b 5328 | 4585 d20f | 846f f5ff | ff4d 8b5f | 2849 8bfa | 48c1 e703 
  0x00007edcc03d6150: 4d85 db0f | 84d4 0a00 | 004d 8b57 | 384b 897c | 1af8 4983 | c3f8 4d89 | 5f28 e945 | f5ff ff41 
  0x00007edcc03d6170: 8b5a 1c85 | db0f 84e3 | f8ff ff4d | 8b4f 2848 | 8bfb 48c1 | e703 4d85 | c90f 84c7 | 0a00 0049 
  0x00007edcc03d6190: 8b5f 384a | 897c 0bf8 | 4983 c1f8 | 4d89 4f28 | e9b9 f8ff | ff41 8b7a | 2885 ff0f | 84ef f8ff 
  0x00007edcc03d61b0: ff49 8b57 | 2848 c1e7 | 0348 85d2 | 0f84 d30a | 0000 498b | 7738 4889 | 7c16 f848 | 83c2 f849 
  0x00007edcc03d61d0: 8957 28e9 | c8f8 ffff | 458b 551c | 4585 d20f | 8420 fcff | ff4d 8b5f | 2849 8bfa | 48c1 e703 
  0x00007edcc03d61f0: ;   {no_reloc}
  0x00007edcc03d61f0: 4d85 db0f | 84e5 0a00 | 004d 8b57 | 384b 897c | 1af8 4983 | c3f8 4d89 | 5f28 e9f6 | fbff ff45 
  0x00007edcc03d6210: 8b45 2845 | 85c0 0f84 | 2bfc ffff | 4d8b 5728 | 498b f848 | c1e7 034d | 85d2 0f84 | cb0a 0000 
  0x00007edcc03d6230: 4d8b 4738 | 4b89 7c10 | f849 83c2 | f84d 8957 | 28e9 01fc | ffff 4d8b | 5748 4d8b | 5f58 f083 
  0x00007edcc03d6250: 4424 c000 | 803f 000f | 840f f4ff | ff44 8827 | 4d85 d275 | 1d49 8bf7 | 49ba 70f6 | 9ad7 dc7e 
  0x00007edcc03d6270: 0000 41ff 

  0x00007edcc03d6274: ;   {other}
  0x00007edcc03d6274: d20f 1f84 | 0000 0000 | 00e9 eaf3 | ffff 4b89 | 7c13 f849 | 83c2 f84d | 8957 48e9 | d8f3 ffff 
  0x00007edcc03d6294: 4d8b 5758 | 4d8b 4748 | f083 4424 | c000 803f | 000f 844a | f6ff ff44 | 8827 4d85 | c075 294d 
  0x00007edcc03d62b4: 8beb 488b | d949 8bf7 | 49ba 70f6 | 9ad7 dc7e | 0000 41ff 

  0x00007edcc03d62c8: ;   {other}
  0x00007edcc03d62c8: d20f 1f84 | 0000 0000 | 0048 8bcb | 4d8b dde9 | 19f6 ffff | 4b89 7c02 | f849 83c0 | f84d 8947 
  0x00007edcc03d62e8: 48e9 07f6 | ffff 4d8b | 4f48 498b | 5f58 f083 | 4424 c000 | 803f 000f | 844e f7ff | ff44 8827 
  0x00007edcc03d6308: 4d85 c975 | 3f4c 8954 | 2428 4c89 | 5c24 0848 | 890c 2441 | 8bd8 498b | f749 ba70 | f69a d7dc 
  0x00007edcc03d6328: 7e00 0041 

  0x00007edcc03d632c: ;   {other}
  0x00007edcc03d632c: ffd2 0f1f | 8400 0000 | 0000 448b | c348 8b0c | 244c 8b5c | 2408 4c8b | 5424 28e9 | 07f7 ffff 
  0x00007edcc03d634c: 4a89 7c0b | f849 83c1 | f84d 894f | 48e9 f5f6 | ffff 4d8b | 5748 4d8b | 5f58 f083 | 4424 c000 
  0x00007edcc03d636c: 8039 000f | 8485 faff | ff44 8821 | 4d85 d275 | 2048 8bf9 | 498b f749 | ba70 f69a | d7dc 7e00 
  0x00007edcc03d638c: 0041 ffd2 

  0x00007edcc03d6390: ;   {other}
  0x00007edcc03d6390: 0f1f 8400 | 0000 0000 | e95d faff | ff4b 894c | 13f8 4983 | c2f8 4d89 | 5748 e94b 

  0x00007edcc03d63ac: ;   {metadata('java/lang/Object'[])}
  0x00007edcc03d63ac: faff ff48 | be40 1200 | 4fdc 7e00 | 00ba 0100 | 0000 4c8b | 5424 2049 

  0x00007edcc03d63c4: ;   {runtime_call _new_array_Java}
  0x00007edcc03d63c4: 8bea 90e8 

  0x00007edcc03d63c8: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - JCudaWrapper.array.DArray::get@1 (line 133)
  0x00007edcc03d63c8: b4f7 99ff 

  0x00007edcc03d63cc: ;   {other}
  0x00007edcc03d63cc: 0f1f 8400 | 3c12 0007 | 4c8b c0e9 | 90f1 ffff 

  0x00007edcc03d63dc: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007edcc03d63dc: 48be d0a0 | 0e4f dc7e | 0000 488b | 6c24 204c | 8944 2440 

  0x00007edcc03d63f0: ;   {runtime_call _new_instance_Java}
  0x00007edcc03d63f0: 6666 90e8 

  0x00007edcc03d63f4: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop [64]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.Spliterators::spliterator@13 (line 178)
                      ; - java.util.Arrays::spliterator@6 (line 5396)
                      ; - java.util.Arrays::stream@3 (line 5547)
                      ; - java.util.Arrays::stream@4 (line 5528)
                      ; - JCudaWrapper.array.Array::checkNull@1 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d63f4: 0832 9aff 

  0x00007edcc03d63f8: ;   {other}
  0x00007edcc03d63f8: 0f1f 8400 | 6812 0008 | 488b e84c | 8b44 2440 | e9b0 f1ff 

  0x00007edcc03d640c: ;   {metadata('java/util/stream/ReferencePipeline$Head')}
  0x00007edcc03d640c: ff48 be20 | 1b0e 4fdc 

  0x00007edcc03d6414: ;   {runtime_call _new_instance_Java}
  0x00007edcc03d6414: 7e00 00e8 

  0x00007edcc03d6418: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.StreamSupport::stream@5 (line 69)
                      ; - java.util.Arrays::stream@7 (line 5547)
                      ; - java.util.Arrays::stream@4 (line 5528)
                      ; - JCudaWrapper.array.Array::checkNull@1 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d6418: e431 9aff 

  0x00007edcc03d641c: ;   {other}
  0x00007edcc03d641c: 0f1f 8400 | 8c12 0009 | 488b d8e9 | 02f2 ffff | 4889 4c24 | 0848 ff74 | 2428 488f 

  0x00007edcc03d6438: ;   {metadata('java/nio/HeapDoubleBuffer')}
  0x00007edcc03d6438: 0424 48be | 80bc 0450 | dc7e 0000 

  0x00007edcc03d6444: ;   {runtime_call _new_instance_Java}
  0x00007edcc03d6444: 6666 90e8 

  0x00007edcc03d6448: ; ImmutableOopMap {[0]=Oop [16]=Oop [32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.nio.DoubleBuffer::wrap@0 (line 436)
                      ; - java.nio.DoubleBuffer::wrap@4 (line 465)
                      ; - jcuda.Pointer::to@5 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x00007edcc03d6448: b431 9aff 

  0x00007edcc03d644c: ;   {other}
  0x00007edcc03d644c: 0f1f 8400 | bc12 000a | 48ff 3424 | 488f 4424 | 2848 8b4c | 2408 4c8b | d8e9 36f4 | ffff 4c89 
  0x00007edcc03d646c: 5c24 0848 

  0x00007edcc03d6470: ;   {metadata({type array int})}
  0x00007edcc03d6470: 890c 2448 | be38 2600 | 4fdc 7e00 | 00ba 0300 

  0x00007edcc03d6480: ;   {runtime_call _new_array_Java}
  0x00007edcc03d6480: 0000 90e8 

  0x00007edcc03d6484: ; ImmutableOopMap {[8]=Oop [16]=Oop [32]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - JCudaWrapper.array.Array::get@1 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6484: f8f6 99ff 

  0x00007edcc03d6488: ;   {other}
  0x00007edcc03d6488: 0f1f 8400 | f812 000b | 488b 0c24 | 4c8b 5c24 | 084c 8bc8 | e9b5 f4ff | ff4c 894c | 2440 4c89 
  0x00007edcc03d64a8: 5c24 3848 | 894c 2428 | 895c 2408 | 4889 4424 | f88b 4424 | 3089 4424 | 0448 8b44 | 24f8 4489 
  0x00007edcc03d64c8: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007edcc03d64c8: 0424 48be | f892 0450 | dc7e 0000 

  0x00007edcc03d64d4: ;   {runtime_call _new_instance_Java}
  0x00007edcc03d64d4: 6666 90e8 

  0x00007edcc03d64d8: ; ImmutableOopMap {[16]=Oop [32]=Oop [56]=Oop [64]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.Spliterators::spliterator@13 (line 240)
                      ; - java.util.Arrays::spliterator@6 (line 5435)
                      ; - java.util.Arrays::stream@3 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d64d8: 2431 9aff 

  0x00007edcc03d64dc: ;   {other}
  0x00007edcc03d64dc: 0f1f 8400 | 4c13 000c | 448b 0424 | 4889 4424 | f88b 4424 | 0489 4424 | 3048 8b44 | 24f8 4889 
  0x00007edcc03d64fc: 4424 f88b | 4424 0889 | 4424 1c48 | 8b44 24f8 | 488b 4c24 | 284c 8b5c | 2438 4c8b | 4c24 4048 
  0x00007edcc03d651c: 8bf8 e98d | f4ff ff48 | 897c 2438 | 4c89 5c24 | 2848 894c | 2408 4889 | 4424 f88b | 4424 1c89 
  0x00007edcc03d653c: 4424 0448 | 8b44 24f8 | 4889 4424 | f88b 4424 | 3089 0424 | 488b 4424 | f841 8be8 

  0x00007edcc03d6558: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007edcc03d6558: 48be f09c | 0450 dc7e 

  0x00007edcc03d6560: ;   {runtime_call _new_instance_Java}
  0x00007edcc03d6560: 0000 90e8 

  0x00007edcc03d6564: ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.StreamSupport::intStream@0 (line 138)
                      ; - java.util.Arrays::stream@7 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6564: 9830 9aff 

  0x00007edcc03d6568: ;   {other}
  0x00007edcc03d6568: 0f1f 8400 | d813 000d | 448b c548 | 8944 24f8 | 8b04 2489 | 4424 3048 | 8b44 24f8 | 4889 4424 
  0x00007edcc03d6588: f88b 4424 | 0489 4424 | 1c48 8b44 | 24f8 488b | 4c24 084c | 8b5c 2428 | 488b 7c24 | 384c 8bd0 
  0x00007edcc03d65a8: e968 f4ff | ff4c 895c | 2438 4889 | 4c24 2848 | 8944 24f8 | 8b44 241c | 8944 240c | 488b 4424 
  0x00007edcc03d65c8: f848 ff74 | 2420 488f 

  0x00007edcc03d65d0: ;   {metadata('jcuda/Pointer')}
  0x00007edcc03d65d0: 0424 48be | f839 0050 | dc7e 0000 

  0x00007edcc03d65dc: ;   {runtime_call _new_instance_Java}
  0x00007edcc03d65dc: 6666 90e8 

  0x00007edcc03d65e0: ; ImmutableOopMap {[0]=Oop [16]=Oop [32]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jcuda.Pointer::withByteOffset@0 (line 516)
                      ; - JCudaWrapper.array.Array::get@48 (line 249)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d65e0: 1c30 9aff 

  0x00007edcc03d65e4: ;   {other}
  0x00007edcc03d65e4: 0f1f 8400 | 5414 000e | 4889 4424 | f88b 4424 | 0c89 4424 | 1c48 8b44 | 24f8 488b | 4c24 284c 
  0x00007edcc03d6604: 8b5c 2438 | 4c8b f0e9 | 95f6 ffff | 4c89 7424 | 2848 894c | 2408 4889 | 4424 f88b | 4424 1c89 
  0x00007edcc03d6624: 4424 0448 | 8b44 24f8 | 488b 6c24 

  0x00007edcc03d6630: ;   {metadata({type array int})}
  0x00007edcc03d6630: 2048 be38 | 2600 4fdc | 7e00 00ba | 0100 0000 

  0x00007edcc03d6640: ;   {runtime_call _new_array_Java}
  0x00007edcc03d6640: 6666 90e8 

  0x00007edcc03d6644: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - JCudaWrapper.array.Array::pointer@1 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6644: 38f5 99ff 

  0x00007edcc03d6648: ;   {other}
  0x00007edcc03d6648: 0f1f 8400 | b814 000f | 4889 4424 | f88b 4424 | 0489 4424 | 1c48 8b44 | 24f8 488b | 4c24 084c 
  0x00007edcc03d6668: 8b74 2428 | 4c8b c8e9 | 95f6 ffff | 4c89 4c24 | 384c 8974 | 2428 4889 | 4c24 0848 | 8944 24f8 
  0x00007edcc03d6688: 8b44 241c | 8944 2404 | 488b 4424 | f848 8944 | 24f8 8b44 | 2430 8904 | 2448 8b44 | 24f8 488b 
  0x00007edcc03d66a8: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007edcc03d66a8: 6c24 2048 | bef8 9204 | 50dc 7e00 

  0x00007edcc03d66b4: ;   {runtime_call _new_instance_Java}
  0x00007edcc03d66b4: 0066 90e8 

  0x00007edcc03d66b8: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.Spliterators::spliterator@13 (line 240)
                      ; - java.util.Arrays::spliterator@6 (line 5435)
                      ; - java.util.Arrays::stream@3 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d66b8: 442f 9aff 

  0x00007edcc03d66bc: ;   {other}
  0x00007edcc03d66bc: 0f1f 8400 | 2c15 0010 | 4889 4424 | f88b 0424 | 8944 2430 | 488b 4424 | f848 8944 | 24f8 8b44 
  0x00007edcc03d66dc: 2404 8944 | 241c 488b | 4424 f848 | 8b4c 2408 | 4c8b 7424 | 284c 8b4c | 2438 4c8b | d8e9 55f6 
  0x00007edcc03d66fc: ffff 4c89 | 5c24 384c | 8974 2428 | 4889 4c24 | 0848 8944 | 24f8 8b44 | 241c 8944 | 2404 488b 
  0x00007edcc03d671c: 4424 f848 | 8944 24f8 | 8b44 2430 | 8904 2448 | 8b44 24f8 | 488b 6c24 

  0x00007edcc03d6734: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007edcc03d6734: 2048 bef0 | 9c04 50dc 

  0x00007edcc03d673c: ;   {runtime_call _new_instance_Java}
  0x00007edcc03d673c: 7e00 00e8 

  0x00007edcc03d6740: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.StreamSupport::intStream@0 (line 138)
                      ; - java.util.Arrays::stream@7 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6740: bc2e 9aff 

  0x00007edcc03d6744: ;   {other}
  0x00007edcc03d6744: 0f1f 8400 | b415 0011 | 4889 4424 | f88b 0424 | 8944 2430 | 488b 4424 | f848 8944 | 24f8 8b44 
  0x00007edcc03d6764: 2404 8944 | 241c 488b | 4424 f848 | 8b4c 2408 | 4c8b 7424 | 284c 8b5c | 2438 4c8b | e8e9 40f6 
  0x00007edcc03d6784: ffff 4c89 | 4424 3044 | 894c 240c | 4c89 7424 | 284b 8d2c | dc44 895c 

  0x00007edcc03d679c: ;   {metadata('jcuda/driver/CUdeviceptr')}
  0x00007edcc03d679c: 2418 48be | 90a7 0050 | dc7e 0000 | 48ff 7424 | 2048 8f04 

  0x00007edcc03d67b0: ;   {runtime_call _new_instance_Java}
  0x00007edcc03d67b0: 2466 90e8 

  0x00007edcc03d67b4: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [24]=NarrowOop [40]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jcuda.driver.CUdeviceptr::withByteOffset@0 (line 69)
                      ; - JCudaWrapper.array.Array::pointer@35 (line 109)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d67b4: 482e 9aff 

  0x00007edcc03d67b8: ;   {other}
  0x00007edcc03d67b8: 0f1f 8400 | 2816 0012 | 4c8b 7424 | 2844 8b4c | 240c 448b | 5c24 184c | 8b44 2430 | 488b d0e9 
  0x00007edcc03d67d8: 7cf8 ffff | bee4 ffff | ff4c 8b54 | 2420 498b | ea4c 8b54 | 2410 4c89 | 1424 4489 | 4424 0848 
  0x00007edcc03d67f8: 8944 24f8 | 8b44 241c | 8944 2410 | 488b 4424 | f848 897c | 2418 4489 | 4c24 144c | 895c 2420 
  0x00007edcc03d6818: 8944 2428 

  0x00007edcc03d681c: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d681c: 6666 90e8 

  0x00007edcc03d6820: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@46 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6820: dcc6 8dff 

  0x00007edcc03d6824: ;   {other}
  0x00007edcc03d6824: 0f1f 8400 | 9416 0013 | bee4 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007edcc03d6844: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 | 4c24 2044 | 8944 2428 | 895c 242c 
  0x00007edcc03d6864: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6864: 6666 90e8 

  0x00007edcc03d6868: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [32]=Oop [44]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@46 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6868: 94c6 8dff 

  0x00007edcc03d686c: ;   {other}
  0x00007edcc03d686c: 0f1f 8400 | dc16 0014 | be45 ffff | ff4c 8b54 | 2420 498b | ea4c 8b54 | 2410 4c89 | 1424 4489 
  0x00007edcc03d688c: 4424 0848 | 8944 24f8 | 8b44 241c | 8944 2410 | 488b 4424 | f848 897c | 2418 4489 | 4c24 144c 
  0x00007edcc03d68ac: 895c 2420 

  0x00007edcc03d68b0: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d68b0: 6666 90e8 

  0x00007edcc03d68b4: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::tryAdvance@16 (line 1132)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d68b4: 48c6 8dff 

  0x00007edcc03d68b8: ;   {other}
  0x00007edcc03d68b8: 0f1f 8400 | 2817 0015 | be45 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007edcc03d68d8: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 | 4c24 2044 | 8944 2428 

  0x00007edcc03d68f4: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d68f4: 6666 90e8 

  0x00007edcc03d68f8: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [32]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::tryAdvance@16 (line 1132)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d68f8: 04c6 8dff 

  0x00007edcc03d68fc: ;   {other}
  0x00007edcc03d68fc: 0f1f 8400 | 6c17 0016 | bee4 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8b5c 2418 
  0x00007edcc03d691c: 4489 5c24 | 0844 8b5c | 241c 4489 | 5c24 1048 | 895c 2418 | 4489 4424 | 1448 ff74 | 2428 488f 
  0x00007edcc03d693c: 4424 2089 

  0x00007edcc03d6940: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6940: 7c24 28e8 

  0x00007edcc03d6944: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=NarrowOop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Spliterators$ArraySpliterator::tryAdvance@45 (line 1033)
                      ; - java.util.stream.ReferencePipeline::forEachWithCancel@13 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d6944: b8c5 8dff 

  0x00007edcc03d6948: ;   {other}
  0x00007edcc03d6948: 0f1f 8400 | b817 0017 | bebe ffff | ff48 8b6c | 2420 4c8b | 5c24 104c | 891c 2444 | 8b5c 2418 
  0x00007edcc03d6968: 4489 5c24 | 0844 8b5c | 241c 4489 | 5c24 104c | 8954 2420 

  0x00007edcc03d697c: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d697c: 6666 90e8 

  0x00007edcc03d6980: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.ReferencePipeline::forEachWithCancel@8 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d6980: 7cc5 8dff 

  0x00007edcc03d6984: ;   {other}
  0x00007edcc03d6984: 0f1f 8400 | f417 0018 | bebe ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8944 2408 
  0x00007edcc03d69a4: 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4889 | 7c24 184c | 895c 2420 

  0x00007edcc03d69c0: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d69c0: 6666 90e8 

  0x00007edcc03d69c4: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@20 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d69c4: 38c5 8dff 

  0x00007edcc03d69c8: ;   {other}
  0x00007edcc03d69c8: 0f1f 8400 | 3818 0019 | bebe ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007edcc03d69e8: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 

  0x00007edcc03d69fc: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d69fc: 4c24 20e8 

  0x00007edcc03d6a00: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@20 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6a00: fcc4 8dff 

  0x00007edcc03d6a04: ;   {other}
  0x00007edcc03d6a04: 0f1f 8400 | 7418 001a | bef6 ffff | ff49 8be8 

  0x00007edcc03d6a14: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6a14: 6666 90e8 

  0x00007edcc03d6a18: ; ImmutableOopMap {}
                      ;*invokevirtual withByteOffset {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::pointer@35 (line 109)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6a18: e4c4 8dff 

  0x00007edcc03d6a1c: ;   {other}
  0x00007edcc03d6a1c: 0f1f 8400 | 8c18 001b | be45 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8b5c 2418 
  0x00007edcc03d6a3c: 4489 5c24 | 0844 8b5c | 241c 4489 | 5c24 1048 | 895c 2418 | 4489 4424 

  0x00007edcc03d6a54: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6a54: 1466 90e8 

  0x00007edcc03d6a58: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [40]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::tryAdvance@16 (line 1032)
                      ; - java.util.stream.ReferencePipeline::forEachWithCancel@13 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d6a58: a4c4 8dff 

  0x00007edcc03d6a5c: ;   {other}
  0x00007edcc03d6a5c: 0f1f 8400 | cc18 001c | be76 ffff | ff48 8b6c | 2420 4c8b | 5c24 104c | 891c 2444 | 8b44 2418 
  0x00007edcc03d6a7c: 4489 4424 | 0844 8b44 | 241c 4489 | 4424 104c | 8954 2420 

  0x00007edcc03d6a90: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6a90: 6666 90e8 

  0x00007edcc03d6a94: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.ReferencePipeline::forEachWithCancel@8 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d6a94: 68c4 8dff 

  0x00007edcc03d6a98: ;   {other}
  0x00007edcc03d6a98: 0f1f 8400 | 0819 001d | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007edcc03d6ab8: 4489 4424 | 1048 897c | 2420 4c89 

  0x00007edcc03d6ac4: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6ac4: 5c24 28e8 

  0x00007edcc03d6ac8: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::lambda$checkLowerBound$1@2 (line 351)
                      ; - JCudaWrapper.array.Array$$Lambda/0x00007edc5000a9c8::test@5
                      ; - java.util.stream.MatchOps$2MatchSink::accept@12 (line 119)
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@47 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6ac8: 34c4 8dff 

  0x00007edcc03d6acc: ;   {other}
  0x00007edcc03d6acc: 0f1f 8400 | 3c19 001e | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007edcc03d6aec: 8944 2410 | 488b 4424 | f84c 8974 | 2418 4889 

  0x00007edcc03d6afc: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6afc: 4c24 28e8 

  0x00007edcc03d6b00: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [40]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::lambda$checkLowerBound$1@2 (line 351)
                      ; - JCudaWrapper.array.Array$$Lambda/0x00007edc5000a9c8::test@5
                      ; - java.util.stream.MatchOps$2MatchSink::accept@12 (line 119)
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@47 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6b00: fcc3 8dff 

  0x00007edcc03d6b04: ;   {other}
  0x00007edcc03d6b04: 0f1f 8400 | 7419 001f | be45 ffff | ff48 8b6c | 2420 4c8b | 5c24 104c | 891c 248b | 4c24 1889 
  0x00007edcc03d6b24: 4c24 088b | 4c24 1c89 | 4c24 1048 | ff74 2428 | 488f 4424 | 1848 895c | 2420 4489 | 4c24 1444 
  0x00007edcc03d6b44: 8944 2428 | 4489 5424 

  0x00007edcc03d6b4c: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6b4c: 2c66 90e8 

  0x00007edcc03d6b50: ; ImmutableOopMap {rbp=Oop [0]=Oop [20]=NarrowOop [24]=Oop [32]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.StreamOpFlag::isKnown@10 (line 503)
                      ; - java.util.stream.AbstractPipeline::copyInto@12 (line 507)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d6b50: acc3 8dff 

  0x00007edcc03d6b54: ;   {other}
  0x00007edcc03d6b54: 0f1f 8400 | c419 0020 | be45 ffff | ff48 8b4c | 2420 488b | e948 8b4c | 2410 4889 | 0c24 4489 
  0x00007edcc03d6b74: 4424 0848 | 8944 24f8 | 8b44 241c | 8944 2410 | 488b 4424 | f84c 895c | 2418 4c89 | 5424 2044 
  0x00007edcc03d6b94: 894c 2414 | 897c 2428 | 8954 242c 

  0x00007edcc03d6ba0: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6ba0: 6666 90e8 

  0x00007edcc03d6ba4: ; ImmutableOopMap {rbp=Oop [0]=Oop [20]=NarrowOop [24]=Oop [32]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.StreamOpFlag::isKnown@10 (line 503)
                      ; - java.util.stream.AbstractPipeline::copyInto@12 (line 507)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6ba4: 58c3 8dff 

  0x00007edcc03d6ba8: ;   {other}
  0x00007edcc03d6ba8: 0f1f 8400 | 181a 0021 | be45 ffff | ff48 8b6c | 2420 4c8b | 4424 104c | 8904 2448 | 8944 24f8 
  0x00007edcc03d6bc8: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 | 4424 f88b | 4424 3089 | 4424 0c48 
  0x00007edcc03d6be8: 8b44 24f8 | 4c89 6c24 | 2044 895c | 2428 4489 | 4c24 2c44 | 8954 2430 

  0x00007edcc03d6c00: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6c00: 6666 90e8 

  0x00007edcc03d6c04: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [32]=Oop [40]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.StreamOpFlag::isKnown@10 (line 503)
                      ; - java.util.stream.AbstractPipeline::copyInto@12 (line 507)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6c04: f8c2 8dff 

  0x00007edcc03d6c08: ;   {other}
  0x00007edcc03d6c08: 0f1f 8400 | 781a 0022 | 498b f749 | ba40 f69a | d7dc 7e00 | 0041 ffd2 

  0x00007edcc03d6c20: ;   {other}
  0x00007edcc03d6c20: 0f1f 8400 | 0000 0000 | e94a eaff | ff45 8be9 | 488b eb49 | 8bf7 49ba | 40f6 9ad7 | dc7e 0000 
  0x00007edcc03d6c40: ;   {other}
  0x00007edcc03d6c40: 41ff d20f | 1f84 0000 | 0000 0048 | 8bdd 458b | cde9 5eea | ffff 4c89 | 5424 284c | 895c 2408 
  0x00007edcc03d6c60: 4889 0c24 | 458b e849 | 8bf7 49ba | 40f6 9ad7 | dc7e 0000 

  0x00007edcc03d6c74: ;   {other}
  0x00007edcc03d6c74: 41ff d20f | 1f84 0000 | 0000 0045 | 8bc5 488b | 0c24 4c8b | 5c24 084c | 8b54 2428 | e9c9 edff 
  0x00007edcc03d6c94: ff44 894c | 2418 4c89 | 5424 284c | 895c 2408 | 4889 0c24 | 418b e849 | 8bf7 49ba | 40f6 9ad7 
  0x00007edcc03d6cb4: dc7e 0000 

  0x00007edcc03d6cb8: ;   {other}
  0x00007edcc03d6cb8: 41ff d20f | 1f84 0000 | 0000 0044 | 8bc5 488b | 0c24 4c8b | 5c24 084c | 8b54 2428 | 448b 4c24 
  0x00007edcc03d6cd8: 18e9 c2ed | ffff 498b | f749 ba40 | f69a d7dc | 7e00 0041 

  0x00007edcc03d6cec: ;   {other}
  0x00007edcc03d6cec: ffd2 0f1f | 8400 0000 | 0000 e90a | f1ff ff44 | 895c 2418 | 4c89 6c24 | 084c 8934 | 2449 8bf7 
  0x00007edcc03d6d0c: 49ba 40f6 | 9ad7 dc7e | 0000 41ff 

  0x00007edcc03d6d18: ;   {other}
  0x00007edcc03d6d18: d20f 1f84 | 0000 0000 | 004c 8b34 | 244c 8b6c | 2408 448b | 5c24 18e9 | 13f1 ffff | be45 ffff 
  0x00007edcc03d6d38: ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 | 448b 5424 | 1844 8954 | 2410 4889 
  0x00007edcc03d6d58: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6d58: 5c24 20e8 

  0x00007edcc03d6d5c: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [40]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::lambda$checkNull$2@1 (line 392)
                      ; - JCudaWrapper.array.Array$$Lambda/0x00007edc5000b220::test@1
                      ; - java.util.stream.MatchOps$1MatchSink::accept@12 (line 90)
                      ; - java.util.Spliterators$ArraySpliterator::tryAdvance@49 (line 1034)
                      ; - java.util.stream.ReferencePipeline::forEachWithCancel@13 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d6d5c: a0c1 8dff 

  0x00007edcc03d6d60: ;   {other}
  0x00007edcc03d6d60: 0f1f 8400 | d01b 0023 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007edcc03d6d80: 448b 5c24 | 1844 895c 

  0x00007edcc03d6d88: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6d88: 2410 90e8 

  0x00007edcc03d6d8c: ; ImmutableOopMap {[0]=Oop [8]=Oop [40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::evaluate@31 (line 228)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d6d8c: 70c1 8dff 

  0x00007edcc03d6d90: ;   {other}
  0x00007edcc03d6d90: 0f1f 8400 | 001c 0024 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007edcc03d6db0: 448b 5424 | 1844 8954 | 2410 448b | 5424 1c44 | 8954 2418 | 48ff 7424 | 2848 8f44 | 2420 4489 
  0x00007edcc03d6dd0: 4c24 1c48 | 895c 2428 

  0x00007edcc03d6dd8: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6dd8: 6666 90e8 

  0x00007edcc03d6ddc: ; ImmutableOopMap {[0]=Oop [8]=Oop [28]=NarrowOop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.MatchOps$BooleanTerminalSink::<init>@9 (line 257)
                      ; - java.util.stream.MatchOps$1MatchSink::<init>@12 (line 85)
                      ; - java.util.stream.MatchOps::lambda$makeRef$0@6 (line 97)
                      ; - java.util.stream.MatchOps$$Lambda/0x00007edc5004b5d0::get@8
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@5 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d6ddc: 20c1 8dff 

  0x00007edcc03d6de0: ;   {other}
  0x00007edcc03d6de0: 0f1f 8400 | 501c 0025 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007edcc03d6e00: 4489 4424 | 104c 895c 

  0x00007edcc03d6e08: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6e08: 2420 90e8 

  0x00007edcc03d6e0c: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::evaluate@31 (line 228)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6e0c: f0c0 8dff 

  0x00007edcc03d6e10: ;   {other}
  0x00007edcc03d6e10: 0f1f 8400 | 801c 0026 | be45 ffff | ff48 8b4c | 2420 4889 | 0c24 488b | 4c24 1048 | 894c 2408 
  0x00007edcc03d6e30: 4489 4424 | 1048 8944 | 24f8 8b44 | 241c 8944 | 2418 488b | 4424 f84c | 895c 2420 | 4489 4c24 
  0x00007edcc03d6e50: 1c4c 8954 

  0x00007edcc03d6e54: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6e54: 2428 90e8 

  0x00007edcc03d6e58: ; ImmutableOopMap {[0]=Oop [8]=Oop [28]=NarrowOop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.MatchOps$BooleanTerminalSink::<init>@9 (line 257)
                      ; - java.util.stream.MatchOps$2MatchSink::<init>@12 (line 114)
                      ; - java.util.stream.MatchOps::lambda$makeInt$1@6 (line 126)
                      ; - java.util.stream.MatchOps$$Lambda/0x00007edc5004aec0::get@8
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@5 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6e58: a4c0 8dff 

  0x00007edcc03d6e5c: ;   {other}
  0x00007edcc03d6e5c: 0f1f 8400 | cc1c 0027 | be45 ffff | ff48 ff74 | 2420 488f | 0424 4c8b | 4c24 104c | 894c 2408 
  0x00007edcc03d6e7c: 4489 4424 | 1048 8944 | 24f8 8b44 | 241c 8944 | 2418 488b | 4424 f84c | 895c 2420 | 4489 5424 
  0x00007edcc03d6e9c: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6e9c: 2866 90e8 

  0x00007edcc03d6ea0: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::checkUpperBound@25 (line 381)
                      ; - JCudaWrapper.array.Array::checkAgainstLength@6 (line 362)
                      ; - JCudaWrapper.array.Array::get@34 (line 246)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6ea0: 5cc0 8dff 

  0x00007edcc03d6ea4: ;   {other}
  0x00007edcc03d6ea4: 0f1f 8400 | 141d 0028 | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007edcc03d6ec4: 8944 2410 | 488b 4424 | f84c 8974 

  0x00007edcc03d6ed0: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6ed0: 2418 90e8 

  0x00007edcc03d6ed4: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::evaluate@31 (line 228)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6ed4: 28c0 8dff 

  0x00007edcc03d6ed8: ;   {other}
  0x00007edcc03d6ed8: 0f1f 8400 | 481d 0029 | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007edcc03d6ef8: 8944 2410 | 488b 4424 | f84c 8974 | 2418 4889 | 4424 f88b | 4424 3089 | 4424 1448 | 8b44 24f8 
  0x00007edcc03d6f18: 4489 5c24 | 284c 896c 

  0x00007edcc03d6f20: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6f20: 2430 90e8 

  0x00007edcc03d6f24: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [40]=NarrowOop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.MatchOps$BooleanTerminalSink::<init>@9 (line 257)
                      ; - java.util.stream.MatchOps$2MatchSink::<init>@12 (line 114)
                      ; - java.util.stream.MatchOps::lambda$makeInt$1@6 (line 126)
                      ; - java.util.stream.MatchOps$$Lambda/0x00007edc5004aec0::get@8
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@5 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6f24: d8bf 8dff 

  0x00007edcc03d6f28: ;   {other}
  0x00007edcc03d6f28: 0f1f 8400 | 981d 002a | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007edcc03d6f48: 8944 2410 | 488b 4424 | f84c 8974 

  0x00007edcc03d6f54: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6f54: 2418 90e8 

  0x00007edcc03d6f58: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::checkUpperBound@25 (line 381)
                      ; - JCudaWrapper.array.Array::checkAgainstLength@6 (line 362)
                      ; - JCudaWrapper.array.Array::pointer@18 (line 107)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6f58: a4bf 8dff 

  0x00007edcc03d6f5c: ;   {other}
  0x00007edcc03d6f5c: 0f1f 8400 | cc1d 002b | be45 ffff | ff4c 8934 | 2448 8954 | 2408 4889 

  0x00007edcc03d6f74: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6f74: 4c24 10e8 

  0x00007edcc03d6f78: ; ImmutableOopMap {[0]=Oop [8]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.resourceManagement.Handle::getStream@4 (line 109)
                      ; - JCudaWrapper.array.Array::get@70 (line 253)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6f78: 84bf 8dff 

  0x00007edcc03d6f7c: ;   {other}
  0x00007edcc03d6f7c: 0f1f 8400 | ec1d 002c | be45 ffff | ff4c 8934 | 244c 895c | 2408 4889 | 5424 1048 | 894c 2418 
  0x00007edcc03d6f9c: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6f9c: 6666 90e8 

  0x00007edcc03d6fa0: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.resourceManagement.Handle::getStream@21 (line 110)
                      ; - JCudaWrapper.array.Array::get@70 (line 253)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6fa0: 5cbf 8dff 

  0x00007edcc03d6fa4: ;   {other}
  0x00007edcc03d6fa4: 0f1f 8400 | 141e 002d | be45 ffff | ff89 0424 

  0x00007edcc03d6fb4: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6fb4: 6666 90e8 

  0x00007edcc03d6fb8: ; ImmutableOopMap {}
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jcuda.runtime.JCuda::checkResult@3 (line 514)
                      ; - jcuda.runtime.JCuda::cudaMemcpyAsync@10 (line 5696)
                      ; - JCudaWrapper.array.Array::get@73 (line 248)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6fb8: 44bf 8dff 

  0x00007edcc03d6fbc: ;   {other}
  0x00007edcc03d6fbc: 0f1f 8400 | 2c1e 002e | be45 ffff | ff89 0424 

  0x00007edcc03d6fcc: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d6fcc: 6666 90e8 

  0x00007edcc03d6fd0: ; ImmutableOopMap {}
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::get@80 (line 255)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d6fd0: 2cbf 8dff 

  0x00007edcc03d6fd4: ;   {other}
  0x00007edcc03d6fd4: 0f1f 8400 | 441e 002f | bec6 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8b54 2418 
  0x00007edcc03d6ff4: 4489 5424 | 0844 8b54 | 241c 4489 | 5424 1048 | ff74 2428 | 488f 4424 | 1848 895c | 2420 4489 
  0x00007edcc03d7014: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d7014: 4c24 28e8 

  0x00007edcc03d7018: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=NarrowOop }
                      ;*invokeinterface getExactSizeIfKnown {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d7018: e4be 8dff 

  0x00007edcc03d701c: ;   {other}
  0x00007edcc03d701c: 0f1f 8400 | 8c1e 0030 | bec6 ffff | ff48 8b6c | 2420 488b | 4c24 1048 | 890c 2444 | 8944 2408 
  0x00007edcc03d703c: 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4c89 | 5c24 184c | 8954 2420 | 4489 4c24 
  0x00007edcc03d705c: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d705c: 2866 90e8 

  0x00007edcc03d7060: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=NarrowOop }
                      ;*invokeinterface getExactSizeIfKnown {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d7060: 9cbe 8dff 

  0x00007edcc03d7064: ;   {other}
  0x00007edcc03d7064: 0f1f 8400 | d41e 0031 | bec6 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007edcc03d7084: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4c89 | 6c24 2844 | 895c 2424 

  0x00007edcc03d70a0: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d70a0: 6666 90e8 

  0x00007edcc03d70a4: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [36]=NarrowOop [40]=Oop }
                      ;*invokeinterface getExactSizeIfKnown {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d70a4: 58be 8dff 

  0x00007edcc03d70a8: ;   {other}
  0x00007edcc03d70a8: 0f1f 8400 | 181f 0032 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007edcc03d70c8: 448b 5c24 | 1844 895c | 2410 448b | 5424 3044 | 8954 2414 | 48ff 7424 | 2848 8f44 | 2420 4c89 
  0x00007edcc03d70e8: 4424 2848 | 895c 2430 

  0x00007edcc03d70f0: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d70f0: 6666 90e8 

  0x00007edcc03d70f4: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d70f4: 08be 8dff 

  0x00007edcc03d70f8: ;   {other}
  0x00007edcc03d70f8: 0f1f 8400 | 681f 0033 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007edcc03d7118: ffff 4c8b | 5424 204c | 8914 244c | 8b54 2410 | 4c89 5424 | 0844 8b54 | 2418 4489 | 5424 1044 
  0x00007edcc03d7138: 8b5c 2430 | 4489 5c24 | 1448 ff74 | 2428 488f | 4424 2048 | 895c 2430 | 4c89 4424 

  0x00007edcc03d7154: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d7154: 3866 90e8 

  0x00007edcc03d7158: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::estimateSize@6 (line 1141)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d7158: a4bd 8dff 

  0x00007edcc03d715c: ;   {other}
  0x00007edcc03d715c: 0f1f 8400 | cc1f 0034 | be45 ffff | ff4c 8b4c | 2420 4c89 | 0c24 4c8b | 4c24 104c | 894c 2408 
  0x00007edcc03d717c: 4489 4424 | 1048 8944 | 24f8 8b44 | 2430 8944 | 2414 488b | 4424 f84c | 895c 2420 | 4889 7c24 
  0x00007edcc03d719c: 284c 8954 

  0x00007edcc03d71a0: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d71a0: 2430 90e8 

  0x00007edcc03d71a4: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d71a4: 58bd 8dff 

  0x00007edcc03d71a8: ;   {other}
  0x00007edcc03d71a8: 0f1f 8400 | 1820 0035 | 4533 c949 | 3bd9 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007edcc03d71c8: ffff 4c8b | 4c24 204c | 890c 244c | 8b4c 2410 | 4c89 4c24 | 0844 8944 | 2410 4889 | 4424 f88b 
  0x00007edcc03d71e8: 4424 3089 | 4424 1448 | 8b44 24f8 | 4c89 5c24 | 204c 8954 | 2430 4889 

  0x00007edcc03d7200: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d7200: 7c24 38e8 

  0x00007edcc03d7204: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::estimateSize@6 (line 1141)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d7204: f8bc 8dff 

  0x00007edcc03d7208: ;   {other}
  0x00007edcc03d7208: 0f1f 8400 | 7820 0036 | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007edcc03d7228: 8944 2410 | 488b 4424 | f84c 8974 | 2418 4889 | 4424 f88b | 4424 3089 | 4424 1448 | 8b44 24f8 
  0x00007edcc03d7248: 4c89 4424 | 284c 896c 

  0x00007edcc03d7250: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d7250: 2430 90e8 

  0x00007edcc03d7254: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d7254: a8bc 8dff 

  0x00007edcc03d7258: ;   {other}
  0x00007edcc03d7258: 0f1f 8400 | c820 0037 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007edcc03d7278: ffff 4c8b | 5424 104c | 8954 2408 | 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4c89 
  0x00007edcc03d7298: 7424 1848 | 8944 24f8 | 8b44 2430 | 8944 2414 | 488b 4424 | f84c 896c | 2430 4c89 

  0x00007edcc03d72b4: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d72b4: 4424 38e8 

  0x00007edcc03d72b8: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::estimateSize@6 (line 1141)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d72b8: 44bc 8dff 

  0x00007edcc03d72bc: ;   {other}
  0x00007edcc03d72bc: 0f1f 8400 | 2c21 0038 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007edcc03d72dc: 448b 5c24 | 1844 895c | 2410 448b | 5424 3044 | 8954 2414 | 48ff 7424 | 2848 8f44 | 2420 4c89 
  0x00007edcc03d72fc: 4424 2848 | 895c 2430 

  0x00007edcc03d7304: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d7304: 6666 90e8 

  0x00007edcc03d7308: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d7308: f4bb 8dff 

  0x00007edcc03d730c: ;   {other}
  0x00007edcc03d730c: 0f1f 8400 | 7c21 0039 | be45 ffff | ff4c 8b4c | 2420 4c89 | 0c24 4c8b | 4c24 104c | 894c 2408 
  0x00007edcc03d732c: 4489 4424 | 1048 8944 | 24f8 8b44 | 2430 8944 | 2414 488b | 4424 f84c | 895c 2420 | 4889 7c24 
  0x00007edcc03d734c: 284c 8954 

  0x00007edcc03d7350: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d7350: 2430 90e8 

  0x00007edcc03d7354: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d7354: a8bb 8dff 

  0x00007edcc03d7358: ;   {other}
  0x00007edcc03d7358: 0f1f 8400 | c821 003a | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007edcc03d7378: 8944 2410 | 488b 4424 | f84c 8974 | 2418 4889 | 4424 f88b | 4424 3089 | 4424 1448 | 8b44 24f8 
  0x00007edcc03d7398: 4c89 4424 | 284c 896c 

  0x00007edcc03d73a0: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d73a0: 2430 90e8 

  0x00007edcc03d73a4: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d73a4: 58bb 8dff 

  0x00007edcc03d73a8: ;   {other}
  0x00007edcc03d73a8: 0f1f 8400 | 1822 003b | bede ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8944 2408 
  0x00007edcc03d73c8: 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4889 | 7c24 204c | 895c 2428 

  0x00007edcc03d73e4: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d73e4: 6666 90e8 

  0x00007edcc03d73e8: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.IntPipeline::adapt@1 (line 118)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@1 (line 160)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d73e8: 14bb 8dff 

  0x00007edcc03d73ec: ;   {other}
  0x00007edcc03d73ec: 0f1f 8400 | 5c22 003c | bede ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007edcc03d740c: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 

  0x00007edcc03d7420: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d7420: 4c24 28e8 

  0x00007edcc03d7424: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [40]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.IntPipeline::adapt@1 (line 118)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@1 (line 160)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d7424: d8ba 8dff 

  0x00007edcc03d7428: ;   {other}
  0x00007edcc03d7428: 0f1f 8400 | 9822 003d | be5e ffff 

  0x00007edcc03d7434: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d7434: ff66 90e8 

  0x00007edcc03d7438: ; ImmutableOopMap {}
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.nio.DoubleBuffer::wrap@3 (line 465)
                      ; - jcuda.Pointer::to@5 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x00007edcc03d7438: c4ba 8dff 

  0x00007edcc03d743c: ;   {other}
  0x00007edcc03d743c: 0f1f 8400 | ac22 003e | bef6 ffff 

  0x00007edcc03d7448: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d7448: ff66 90e8 

  0x00007edcc03d744c: ; ImmutableOopMap {}
                      ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::get@43 (line 248)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d744c: b0ba 8dff 

  0x00007edcc03d7450: ;   {other}
  0x00007edcc03d7450: 0f1f 8400 | c022 003f | bef6 ffff 

  0x00007edcc03d745c: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d745c: ff66 90e8 

  0x00007edcc03d7460: ; ImmutableOopMap {}
                      ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::pointer@30 (line 109)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d7460: 9cba 8dff 

  0x00007edcc03d7464: ;   {other}
  0x00007edcc03d7464: 0f1f 8400 | d422 0040 | bef6 ffff 

  0x00007edcc03d7470: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d7470: ff66 90e8 

  0x00007edcc03d7474: ; ImmutableOopMap {}
                      ;*invokevirtual getStream {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::get@70 (line 253)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d7474: 88ba 8dff 

  0x00007edcc03d7478: ;   {other}
  0x00007edcc03d7478: 0f1f 8400 | e822 0041 | be45 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8b5c 2418 
  0x00007edcc03d7498: 4489 5c24 | 0844 8b5c | 241c 4489 | 5c24 1048 | ff74 2428 | 488f 4424 | 1848 895c | 2428 4489 
  0x00007edcc03d74b8: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d74b8: 4c24 14e8 

  0x00007edcc03d74bc: ; ImmutableOopMap {rbp=Oop [0]=Oop [20]=NarrowOop [24]=Oop [40]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::sourceSpliterator@9 (line 400)
                      ; - java.util.stream.AbstractPipeline::evaluate@85 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007edcc03d74bc: 40ba 8dff 

  0x00007edcc03d74c0: ;   {other}
  0x00007edcc03d74c0: 0f1f 8400 | 3023 0042 | be45 ffff | ff48 8b6c | 2420 488b | 4c24 1048 | 890c 2444 | 8944 2408 
  0x00007edcc03d74e0: 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4c89 | 5c24 184c | 8954 2428 | 4489 4c24 
  0x00007edcc03d7500: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d7500: 1466 90e8 

  0x00007edcc03d7504: ; ImmutableOopMap {rbp=Oop [0]=Oop [20]=NarrowOop [24]=Oop [40]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::sourceSpliterator@9 (line 400)
                      ; - java.util.stream.AbstractPipeline::evaluate@85 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d7504: f8b9 8dff 

  0x00007edcc03d7508: ;   {other}
  0x00007edcc03d7508: 0f1f 8400 | 7823 0043 | be45 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007edcc03d7528: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 | 4424 f88b | 4424 3089 | 4424 0c48 
  0x00007edcc03d7548: 8b44 24f8 | 4c89 6c24 | 2844 895c 

  0x00007edcc03d7554: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d7554: 2430 90e8 

  0x00007edcc03d7558: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [40]=Oop [48]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::sourceSpliterator@9 (line 400)
                      ; - java.util.stream.AbstractPipeline::evaluate@85 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007edcc03d7558: a4b9 8dff 

  0x00007edcc03d755c: ;   {other}
  0x00007edcc03d755c: 0f1f 8400 | cc23 0044 | 488b f0eb | 5e48 8bf0 | eb59 488b | f0eb 5448 | 8bf0 eb4f | 488b f0eb 
  0x00007edcc03d757c: 4a44 8b50 

  0x00007edcc03d7580: ;   {metadata('java/lang/IllegalArgumentException')}
  0x00007edcc03d7580: 0849 bb20 | c506 4fdc | 7e00 0049 | b800 0000 | 4fdc 7e00 | 004d 03c2 | 4d8b 5050 | 4d3b d374 
  0x00007edcc03d75a0: 3048 8bf0 | eb21 488b | f0eb 1c48 | 8bf0 eb17 | 488b f0eb | 1248 8bf0 | eb0d 488b | f0eb 0848 
  0x00007edcc03d75c0: 8bf0 eb03 | 488b f048 | 83c4 605d 

  0x00007edcc03d75cc: ;   {runtime_call _rethrow_Java}
  0x00007edcc03d75cc: e9af 3d9a | ffbe 2500 | 0000 8b6c 

  0x00007edcc03d75d8: ;   {runtime_call UncommonTrapBlob}
  0x00007edcc03d75d8: 2418 90e8 

  0x00007edcc03d75dc: ; ImmutableOopMap {[16]=Oop [32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.nio.DoubleBuffer::wrap@13 (line 438)
                      ; - java.nio.DoubleBuffer::wrap@4 (line 465)
                      ; - jcuda.Pointer::to@5 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x00007edcc03d75dc: 20b9 8dff 

  0x00007edcc03d75e0: ;   {other}
  0x00007edcc03d75e0: 0f1f 8400 | 5024 0045 

  0x00007edcc03d75e8: ;   {internal_word}
  0x00007edcc03d75e8: 49ba f360 | 3dc0 dc7e | 0000 4d89 | 9760 0400 

  0x00007edcc03d75f8: ;   {runtime_call SafepointBlob}
  0x00007edcc03d75f8: 00e9 02ca 

  0x00007edcc03d75fc: ;   {runtime_call StubRoutines (final stubs)}
  0x00007edcc03d75fc: 8dff e89d | be8b ffe9 | f2de ffff 
[Stub Code]
  0x00007edcc03d7608: ;   {no_reloc}
  0x00007edcc03d7608: 48bb 0000 | 0000 0000 

  0x00007edcc03d7610: ;   {runtime_call nmethod}
  0x00007edcc03d7610: 0000 e9fb 

  0x00007edcc03d7614: ;   {runtime_call ExceptionBlob}
  0x00007edcc03d7614: ffff ffe9 | 64aa 99ff 
[Deopt Handler Code]
  0x00007edcc03d761c: e800 0000 | 0048 832c 

  0x00007edcc03d7624: ;   {runtime_call DeoptimizationBlob}
  0x00007edcc03d7624: 2405 e975 | bc8d fff4 | f4f4 f4f4 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x00007edb880490c0, length=14, elements={
0x00007edcd001a0a0, 0x00007edcd012cc90, 0x00007edcd012e200, 0x00007edcd012f9a0,
0x00007edcd0130fe0, 0x00007edcd0132580, 0x00007edcd0134140, 0x00007edcd0135800,
0x00007edcd0149370, 0x00007edc1405eba0, 0x00007edc1405fd20, 0x00007edcd017fa30,
0x00007edcd1667830, 0x00007edc0005e160
}

Java Threads: ( => current thread )
=>0x00007edcd001a0a0 JavaThread "main"                              [_thread_in_native, id=17166, stack(0x00007edcd7100000,0x00007edcd7200000) (1024K)]
  0x00007edcd012cc90 JavaThread "Reference Handler"          daemon [_thread_blocked, id=17175, stack(0x00007edcac900000,0x00007edcaca00000) (1024K)]
  0x00007edcd012e200 JavaThread "Finalizer"                  daemon [_thread_blocked, id=17176, stack(0x00007edcac800000,0x00007edcac900000) (1024K)]
  0x00007edcd012f9a0 JavaThread "Signal Dispatcher"          daemon [_thread_blocked, id=17177, stack(0x00007edcac700000,0x00007edcac800000) (1024K)]
  0x00007edcd0130fe0 JavaThread "Service Thread"             daemon [_thread_blocked, id=17178, stack(0x00007edcac600000,0x00007edcac700000) (1024K)]
  0x00007edcd0132580 JavaThread "Monitor Deflation Thread"   daemon [_thread_blocked, id=17179, stack(0x00007edcac500000,0x00007edcac600000) (1024K)]
  0x00007edcd0134140 JavaThread "C2 CompilerThread0"         daemon [_thread_blocked, id=17180, stack(0x00007edcac400000,0x00007edcac500000) (1024K)]
  0x00007edcd0135800 JavaThread "C1 CompilerThread0"         daemon [_thread_blocked, id=17181, stack(0x00007edcac300000,0x00007edcac400000) (1024K)]
  0x00007edcd0149370 JavaThread "Common-Cleaner"             daemon [_thread_blocked, id=17182, stack(0x00007edcac200000,0x00007edcac300000) (1024K)]
  0x00007edc1405eba0 JavaThread "C1 CompilerThread1"         daemon [_thread_blocked, id=17183, stack(0x00007edcac100000,0x00007edcac200000) (1024K)]
  0x00007edc1405fd20 JavaThread "C1 CompilerThread2"         daemon [_thread_blocked, id=17184, stack(0x00007edcac000000,0x00007edcac100000) (1024K)]
  0x00007edcd017fa30 JavaThread "Notification Thread"        daemon [_thread_blocked, id=17185, stack(0x00007edca7f00000,0x00007edca8000000) (1024K)]
  0x00007edcd1667830 JavaThread "pool-1-thread-1"            daemon [_thread_blocked, id=17191, stack(0x00007edca7e00000,0x00007edca7f00000) (1024K)]
  0x00007edc0005e160 JavaThread "C1 CompilerThread3"         daemon [_thread_blocked, id=17192, stack(0x00007edca7d00000,0x00007edca7e00000) (1024K)]
Total: 14

Other Threads:
  0x00007edcd0123890 VMThread "VM Thread"                           [id=17174, stack(0x00007edcad7fd000,0x00007edcad8fd000) (1024K)]
  0x00007edcd0111260 WatcherThread "VM Periodic Task Thread"        [id=17173, stack(0x00007edcad8fe000,0x00007edcad9fe000) (1024K)]
  0x00007edcd0045410 WorkerThread "GC Thread#0"                     [id=17167, stack(0x00007edcd5d65000,0x00007edcd5e65000) (1024K)]
  0x00007edc3c008d60 WorkerThread "GC Thread#1"                     [id=17195, stack(0x00007edca4100000,0x00007edca4200000) (1024K)]
  0x00007edc3c0094e0 WorkerThread "GC Thread#2"                     [id=17196, stack(0x00007edc9bf00000,0x00007edc9c000000) (1024K)]
  0x00007edc3c009c80 WorkerThread "GC Thread#3"                     [id=17197, stack(0x00007edc9ad00000,0x00007edc9ae00000) (1024K)]
  0x00007edc3c00a610 WorkerThread "GC Thread#4"                     [id=17198, stack(0x00007edc99b00000,0x00007edc99c00000) (1024K)]
  0x00007edc3c00afa0 WorkerThread "GC Thread#5"                     [id=17199, stack(0x00007edc99100000,0x00007edc99200000) (1024K)]
  0x00007edc3c00bb20 WorkerThread "GC Thread#6"                     [id=17200, stack(0x00007edc98fff000,0x00007edc990ff000) (1024K)]
  0x00007edc3c00c6a0 WorkerThread "GC Thread#7"                     [id=17201, stack(0x00007edc98efe000,0x00007edc98ffe000) (1024K)]
  0x00007edc3c00d220 WorkerThread "GC Thread#8"                     [id=17202, stack(0x00007edc98b00000,0x00007edc98c00000) (1024K)]
  0x00007edc3c00ddc0 WorkerThread "GC Thread#9"                     [id=17203, stack(0x00007edc989ff000,0x00007edc98aff000) (1024K)]
  0x00007edc3c00e960 WorkerThread "GC Thread#10"                    [id=17204, stack(0x00007edc988fe000,0x00007edc989fe000) (1024K)]
  0x00007edcd0055f10 ConcurrentGCThread "G1 Main Marker"            [id=17168, stack(0x00007edcd4d00000,0x00007edcd4e00000) (1024K)]
  0x00007edcd0056ec0 WorkerThread "G1 Conc#0"                       [id=17169, stack(0x00007edcd4bff000,0x00007edcd4cff000) (1024K)]
  0x00007edcd00fead0 ConcurrentGCThread "G1 Refine#0"               [id=17170, stack(0x00007edcadb00000,0x00007edcadc00000) (1024K)]
  0x00007edcd00ffa90 ConcurrentGCThread "G1 Service"                [id=17171, stack(0x00007edcad9ff000,0x00007edcadaff000) (1024K)]
Total: 17

Threads with active compile tasks:
Total: 0

VM state: not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap address: 0x0000000616800000, size: 7832 MB, Compressed Oops mode: Zero based, Oop shift amount: 3

CDS archive(s) mapped at: [0x00007edc4f000000-0x00007edc4fc97000-0x00007edc4fc97000), size 13201408, SharedBaseAddress: 0x00007edc4f000000, ArchiveRelocationMode: 1.
Compressed class space mapped at: 0x00007edc50000000-0x00007edc90000000, reserved size: 1073741824
Narrow klass base: 0x00007edc4f000000, Narrow klass shift: 0, Narrow klass range: 0x100000000

GC Precious Log:
 CardTable entry size: 512
 Card Set container configuration: InlinePtr #cards 4 size 8 Array Of Cards #cards 32 size 80 Howl #buckets 8 coarsen threshold 7372 Howl Bitmap #cards 1024 size 144 coarsen threshold 921 Card regions per heap region 1 cards per card region 8192
 CPUs: 16 total, 16 available
 Memory: 31322M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (Zero based)
 Heap Region Size: 4M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 492M
 Heap Max Capacity: 7832M
 Pre-touch: Disabled
 Parallel Workers: 13
 Concurrent Workers: 3
 Concurrent Refinement Workers: 13
 Periodic GC: Disabled

Heap:
 garbage-first heap   total 507904K, used 2952K [0x0000000616800000, 0x0000000800000000)
  region size 4096K, 2 young (8192K), 1 survivors (4096K)
 Metaspace       used 1491K, committed 1536K, reserved 1114112K
  class space    used 96K, committed 128K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, TAMS=top-at-mark-start, PB=parsable bottom
|   0|0x0000000616800000, 0x0000000616800000, 0x0000000616c00000|  0%| F|  |TAMS 0x0000000616800000| PB 0x0000000616800000| Untracked 
|   1|0x0000000616c00000, 0x0000000616c00000, 0x0000000617000000|  0%| F|  |TAMS 0x0000000616c00000| PB 0x0000000616c00000| Untracked 
|   2|0x0000000617000000, 0x0000000617000000, 0x0000000617400000|  0%| F|  |TAMS 0x0000000617000000| PB 0x0000000617000000| Untracked 
|   3|0x0000000617400000, 0x0000000617400000, 0x0000000617800000|  0%| F|  |TAMS 0x0000000617400000| PB 0x0000000617400000| Untracked 
|   4|0x0000000617800000, 0x0000000617800000, 0x0000000617c00000|  0%| F|  |TAMS 0x0000000617800000| PB 0x0000000617800000| Untracked 
|   5|0x0000000617c00000, 0x0000000617c00000, 0x0000000618000000|  0%| F|  |TAMS 0x0000000617c00000| PB 0x0000000617c00000| Untracked 
|   6|0x0000000618000000, 0x0000000618000000, 0x0000000618400000|  0%| F|  |TAMS 0x0000000618000000| PB 0x0000000618000000| Untracked 
|   7|0x0000000618400000, 0x0000000618400000, 0x0000000618800000|  0%| F|  |TAMS 0x0000000618400000| PB 0x0000000618400000| Untracked 
|   8|0x0000000618800000, 0x0000000618800000, 0x0000000618c00000|  0%| F|  |TAMS 0x0000000618800000| PB 0x0000000618800000| Untracked 
|   9|0x0000000618c00000, 0x0000000618c00000, 0x0000000619000000|  0%| F|  |TAMS 0x0000000618c00000| PB 0x0000000618c00000| Untracked 
|  10|0x0000000619000000, 0x0000000619000000, 0x0000000619400000|  0%| F|  |TAMS 0x0000000619000000| PB 0x0000000619000000| Untracked 
|  11|0x0000000619400000, 0x0000000619400000, 0x0000000619800000|  0%| F|  |TAMS 0x0000000619400000| PB 0x0000000619400000| Untracked 
|  12|0x0000000619800000, 0x0000000619800000, 0x0000000619c00000|  0%| F|  |TAMS 0x0000000619800000| PB 0x0000000619800000| Untracked 
|  13|0x0000000619c00000, 0x0000000619c00000, 0x000000061a000000|  0%| F|  |TAMS 0x0000000619c00000| PB 0x0000000619c00000| Untracked 
|  14|0x000000061a000000, 0x000000061a000000, 0x000000061a400000|  0%| F|  |TAMS 0x000000061a000000| PB 0x000000061a000000| Untracked 
|  15|0x000000061a400000, 0x000000061a400000, 0x000000061a800000|  0%| F|  |TAMS 0x000000061a400000| PB 0x000000061a400000| Untracked 
|  16|0x000000061a800000, 0x000000061a800000, 0x000000061ac00000|  0%| F|  |TAMS 0x000000061a800000| PB 0x000000061a800000| Untracked 
|  17|0x000000061ac00000, 0x000000061ac00000, 0x000000061b000000|  0%| F|  |TAMS 0x000000061ac00000| PB 0x000000061ac00000| Untracked 
|  18|0x000000061b000000, 0x000000061b000000, 0x000000061b400000|  0%| F|  |TAMS 0x000000061b000000| PB 0x000000061b000000| Untracked 
|  19|0x000000061b400000, 0x000000061b400000, 0x000000061b800000|  0%| F|  |TAMS 0x000000061b400000| PB 0x000000061b400000| Untracked 
|  20|0x000000061b800000, 0x000000061b800000, 0x000000061bc00000|  0%| F|  |TAMS 0x000000061b800000| PB 0x000000061b800000| Untracked 
|  21|0x000000061bc00000, 0x000000061bc00000, 0x000000061c000000|  0%| F|  |TAMS 0x000000061bc00000| PB 0x000000061bc00000| Untracked 
|  22|0x000000061c000000, 0x000000061c000000, 0x000000061c400000|  0%| F|  |TAMS 0x000000061c000000| PB 0x000000061c000000| Untracked 
|  23|0x000000061c400000, 0x000000061c400000, 0x000000061c800000|  0%| F|  |TAMS 0x000000061c400000| PB 0x000000061c400000| Untracked 
|  24|0x000000061c800000, 0x000000061c800000, 0x000000061cc00000|  0%| F|  |TAMS 0x000000061c800000| PB 0x000000061c800000| Untracked 
|  25|0x000000061cc00000, 0x000000061cc00000, 0x000000061d000000|  0%| F|  |TAMS 0x000000061cc00000| PB 0x000000061cc00000| Untracked 
|  26|0x000000061d000000, 0x000000061d000000, 0x000000061d400000|  0%| F|  |TAMS 0x000000061d000000| PB 0x000000061d000000| Untracked 
|  27|0x000000061d400000, 0x000000061d400000, 0x000000061d800000|  0%| F|  |TAMS 0x000000061d400000| PB 0x000000061d400000| Untracked 
|  28|0x000000061d800000, 0x000000061d800000, 0x000000061dc00000|  0%| F|  |TAMS 0x000000061d800000| PB 0x000000061d800000| Untracked 
|  29|0x000000061dc00000, 0x000000061dc00000, 0x000000061e000000|  0%| F|  |TAMS 0x000000061dc00000| PB 0x000000061dc00000| Untracked 
|  30|0x000000061e000000, 0x000000061e000000, 0x000000061e400000|  0%| F|  |TAMS 0x000000061e000000| PB 0x000000061e000000| Untracked 
|  31|0x000000061e400000, 0x000000061e400000, 0x000000061e800000|  0%| F|  |TAMS 0x000000061e400000| PB 0x000000061e400000| Untracked 
|  32|0x000000061e800000, 0x000000061e800000, 0x000000061ec00000|  0%| F|  |TAMS 0x000000061e800000| PB 0x000000061e800000| Untracked 
|  33|0x000000061ec00000, 0x000000061ec00000, 0x000000061f000000|  0%| F|  |TAMS 0x000000061ec00000| PB 0x000000061ec00000| Untracked 
|  34|0x000000061f000000, 0x000000061f000000, 0x000000061f400000|  0%| F|  |TAMS 0x000000061f000000| PB 0x000000061f000000| Untracked 
|  35|0x000000061f400000, 0x000000061f400000, 0x000000061f800000|  0%| F|  |TAMS 0x000000061f400000| PB 0x000000061f400000| Untracked 
|  36|0x000000061f800000, 0x000000061f800000, 0x000000061fc00000|  0%| F|  |TAMS 0x000000061f800000| PB 0x000000061f800000| Untracked 
|  37|0x000000061fc00000, 0x000000061fc00000, 0x0000000620000000|  0%| F|  |TAMS 0x000000061fc00000| PB 0x000000061fc00000| Untracked 
|  38|0x0000000620000000, 0x0000000620000000, 0x0000000620400000|  0%| F|  |TAMS 0x0000000620000000| PB 0x0000000620000000| Untracked 
|  39|0x0000000620400000, 0x0000000620400000, 0x0000000620800000|  0%| F|  |TAMS 0x0000000620400000| PB 0x0000000620400000| Untracked 
|  40|0x0000000620800000, 0x0000000620800000, 0x0000000620c00000|  0%| F|  |TAMS 0x0000000620800000| PB 0x0000000620800000| Untracked 
|  41|0x0000000620c00000, 0x0000000620c00000, 0x0000000621000000|  0%| F|  |TAMS 0x0000000620c00000| PB 0x0000000620c00000| Untracked 
|  42|0x0000000621000000, 0x0000000621000000, 0x0000000621400000|  0%| F|  |TAMS 0x0000000621000000| PB 0x0000000621000000| Untracked 
|  43|0x0000000621400000, 0x0000000621400000, 0x0000000621800000|  0%| F|  |TAMS 0x0000000621400000| PB 0x0000000621400000| Untracked 
|  44|0x0000000621800000, 0x0000000621800000, 0x0000000621c00000|  0%| F|  |TAMS 0x0000000621800000| PB 0x0000000621800000| Untracked 
|  45|0x0000000621c00000, 0x0000000621c00000, 0x0000000622000000|  0%| F|  |TAMS 0x0000000621c00000| PB 0x0000000621c00000| Untracked 
|  46|0x0000000622000000, 0x0000000622000000, 0x0000000622400000|  0%| F|  |TAMS 0x0000000622000000| PB 0x0000000622000000| Untracked 
|  47|0x0000000622400000, 0x0000000622400000, 0x0000000622800000|  0%| F|  |TAMS 0x0000000622400000| PB 0x0000000622400000| Untracked 
|  48|0x0000000622800000, 0x0000000622800000, 0x0000000622c00000|  0%| F|  |TAMS 0x0000000622800000| PB 0x0000000622800000| Untracked 
|  49|0x0000000622c00000, 0x0000000622c00000, 0x0000000623000000|  0%| F|  |TAMS 0x0000000622c00000| PB 0x0000000622c00000| Untracked 
|  50|0x0000000623000000, 0x0000000623000000, 0x0000000623400000|  0%| F|  |TAMS 0x0000000623000000| PB 0x0000000623000000| Untracked 
|  51|0x0000000623400000, 0x0000000623400000, 0x0000000623800000|  0%| F|  |TAMS 0x0000000623400000| PB 0x0000000623400000| Untracked 
|  52|0x0000000623800000, 0x0000000623800000, 0x0000000623c00000|  0%| F|  |TAMS 0x0000000623800000| PB 0x0000000623800000| Untracked 
|  53|0x0000000623c00000, 0x0000000623c00000, 0x0000000624000000|  0%| F|  |TAMS 0x0000000623c00000| PB 0x0000000623c00000| Untracked 
|  54|0x0000000624000000, 0x0000000624000000, 0x0000000624400000|  0%| F|  |TAMS 0x0000000624000000| PB 0x0000000624000000| Untracked 
|  55|0x0000000624400000, 0x0000000624400000, 0x0000000624800000|  0%| F|  |TAMS 0x0000000624400000| PB 0x0000000624400000| Untracked 
|  56|0x0000000624800000, 0x0000000624800000, 0x0000000624c00000|  0%| F|  |TAMS 0x0000000624800000| PB 0x0000000624800000| Untracked 
|  57|0x0000000624c00000, 0x0000000624c00000, 0x0000000625000000|  0%| F|  |TAMS 0x0000000624c00000| PB 0x0000000624c00000| Untracked 
|  58|0x0000000625000000, 0x0000000625000000, 0x0000000625400000|  0%| F|  |TAMS 0x0000000625000000| PB 0x0000000625000000| Untracked 
|  59|0x0000000625400000, 0x0000000625400000, 0x0000000625800000|  0%| F|  |TAMS 0x0000000625400000| PB 0x0000000625400000| Untracked 
|  60|0x0000000625800000, 0x0000000625800000, 0x0000000625c00000|  0%| F|  |TAMS 0x0000000625800000| PB 0x0000000625800000| Untracked 
|  61|0x0000000625c00000, 0x0000000625c00000, 0x0000000626000000|  0%| F|  |TAMS 0x0000000625c00000| PB 0x0000000625c00000| Untracked 
|  62|0x0000000626000000, 0x0000000626000000, 0x0000000626400000|  0%| F|  |TAMS 0x0000000626000000| PB 0x0000000626000000| Untracked 
|  63|0x0000000626400000, 0x0000000626400000, 0x0000000626800000|  0%| F|  |TAMS 0x0000000626400000| PB 0x0000000626400000| Untracked 
|  64|0x0000000626800000, 0x0000000626800000, 0x0000000626c00000|  0%| F|  |TAMS 0x0000000626800000| PB 0x0000000626800000| Untracked 
|  65|0x0000000626c00000, 0x0000000626c00000, 0x0000000627000000|  0%| F|  |TAMS 0x0000000626c00000| PB 0x0000000626c00000| Untracked 
|  66|0x0000000627000000, 0x0000000627000000, 0x0000000627400000|  0%| F|  |TAMS 0x0000000627000000| PB 0x0000000627000000| Untracked 
|  67|0x0000000627400000, 0x0000000627400000, 0x0000000627800000|  0%| F|  |TAMS 0x0000000627400000| PB 0x0000000627400000| Untracked 
|  68|0x0000000627800000, 0x0000000627800000, 0x0000000627c00000|  0%| F|  |TAMS 0x0000000627800000| PB 0x0000000627800000| Untracked 
|  69|0x0000000627c00000, 0x0000000627c00000, 0x0000000628000000|  0%| F|  |TAMS 0x0000000627c00000| PB 0x0000000627c00000| Untracked 
|  70|0x0000000628000000, 0x0000000628000000, 0x0000000628400000|  0%| F|  |TAMS 0x0000000628000000| PB 0x0000000628000000| Untracked 
|  71|0x0000000628400000, 0x0000000628400000, 0x0000000628800000|  0%| F|  |TAMS 0x0000000628400000| PB 0x0000000628400000| Untracked 
|  72|0x0000000628800000, 0x0000000628800000, 0x0000000628c00000|  0%| F|  |TAMS 0x0000000628800000| PB 0x0000000628800000| Untracked 
|  73|0x0000000628c00000, 0x0000000628c00000, 0x0000000629000000|  0%| F|  |TAMS 0x0000000628c00000| PB 0x0000000628c00000| Untracked 
|  74|0x0000000629000000, 0x0000000629000000, 0x0000000629400000|  0%| F|  |TAMS 0x0000000629000000| PB 0x0000000629000000| Untracked 
|  75|0x0000000629400000, 0x0000000629400000, 0x0000000629800000|  0%| F|  |TAMS 0x0000000629400000| PB 0x0000000629400000| Untracked 
|  76|0x0000000629800000, 0x0000000629800000, 0x0000000629c00000|  0%| F|  |TAMS 0x0000000629800000| PB 0x0000000629800000| Untracked 
|  77|0x0000000629c00000, 0x0000000629c00000, 0x000000062a000000|  0%| F|  |TAMS 0x0000000629c00000| PB 0x0000000629c00000| Untracked 
|  78|0x000000062a000000, 0x000000062a000000, 0x000000062a400000|  0%| F|  |TAMS 0x000000062a000000| PB 0x000000062a000000| Untracked 
|  79|0x000000062a400000, 0x000000062a400000, 0x000000062a800000|  0%| F|  |TAMS 0x000000062a400000| PB 0x000000062a400000| Untracked 
|  80|0x000000062a800000, 0x000000062a800000, 0x000000062ac00000|  0%| F|  |TAMS 0x000000062a800000| PB 0x000000062a800000| Untracked 
|  81|0x000000062ac00000, 0x000000062ac00000, 0x000000062b000000|  0%| F|  |TAMS 0x000000062ac00000| PB 0x000000062ac00000| Untracked 
|  82|0x000000062b000000, 0x000000062b000000, 0x000000062b400000|  0%| F|  |TAMS 0x000000062b000000| PB 0x000000062b000000| Untracked 
|  83|0x000000062b400000, 0x000000062b400000, 0x000000062b800000|  0%| F|  |TAMS 0x000000062b400000| PB 0x000000062b400000| Untracked 
|  84|0x000000062b800000, 0x000000062b800000, 0x000000062bc00000|  0%| F|  |TAMS 0x000000062b800000| PB 0x000000062b800000| Untracked 
|  85|0x000000062bc00000, 0x000000062bc00000, 0x000000062c000000|  0%| F|  |TAMS 0x000000062bc00000| PB 0x000000062bc00000| Untracked 
|  86|0x000000062c000000, 0x000000062c000000, 0x000000062c400000|  0%| F|  |TAMS 0x000000062c000000| PB 0x000000062c000000| Untracked 
|  87|0x000000062c400000, 0x000000062c400000, 0x000000062c800000|  0%| F|  |TAMS 0x000000062c400000| PB 0x000000062c400000| Untracked 
|  88|0x000000062c800000, 0x000000062c800000, 0x000000062cc00000|  0%| F|  |TAMS 0x000000062c800000| PB 0x000000062c800000| Untracked 
|  89|0x000000062cc00000, 0x000000062cc00000, 0x000000062d000000|  0%| F|  |TAMS 0x000000062cc00000| PB 0x000000062cc00000| Untracked 
|  90|0x000000062d000000, 0x000000062d000000, 0x000000062d400000|  0%| F|  |TAMS 0x000000062d000000| PB 0x000000062d000000| Untracked 
|  91|0x000000062d400000, 0x000000062d400000, 0x000000062d800000|  0%| F|  |TAMS 0x000000062d400000| PB 0x000000062d400000| Untracked 
|  92|0x000000062d800000, 0x000000062d800000, 0x000000062dc00000|  0%| F|  |TAMS 0x000000062d800000| PB 0x000000062d800000| Untracked 
|  93|0x000000062dc00000, 0x000000062dc00000, 0x000000062e000000|  0%| F|  |TAMS 0x000000062dc00000| PB 0x000000062dc00000| Untracked 
|  94|0x000000062e000000, 0x000000062e000000, 0x000000062e400000|  0%| F|  |TAMS 0x000000062e000000| PB 0x000000062e000000| Untracked 
|  95|0x000000062e400000, 0x000000062e400000, 0x000000062e800000|  0%| F|  |TAMS 0x000000062e400000| PB 0x000000062e400000| Untracked 
|  96|0x000000062e800000, 0x000000062e800000, 0x000000062ec00000|  0%| F|  |TAMS 0x000000062e800000| PB 0x000000062e800000| Untracked 
|  97|0x000000062ec00000, 0x000000062ec00000, 0x000000062f000000|  0%| F|  |TAMS 0x000000062ec00000| PB 0x000000062ec00000| Untracked 
|  98|0x000000062f000000, 0x000000062f000000, 0x000000062f400000|  0%| F|  |TAMS 0x000000062f000000| PB 0x000000062f000000| Untracked 
|  99|0x000000062f400000, 0x000000062f400000, 0x000000062f800000|  0%| F|  |TAMS 0x000000062f400000| PB 0x000000062f400000| Untracked 
| 100|0x000000062f800000, 0x000000062f800000, 0x000000062fc00000|  0%| F|  |TAMS 0x000000062f800000| PB 0x000000062f800000| Untracked 
| 101|0x000000062fc00000, 0x000000062fc00000, 0x0000000630000000|  0%| F|  |TAMS 0x000000062fc00000| PB 0x000000062fc00000| Untracked 
| 102|0x0000000630000000, 0x0000000630000000, 0x0000000630400000|  0%| F|  |TAMS 0x0000000630000000| PB 0x0000000630000000| Untracked 
| 103|0x0000000630400000, 0x0000000630400000, 0x0000000630800000|  0%| F|  |TAMS 0x0000000630400000| PB 0x0000000630400000| Untracked 
| 104|0x0000000630800000, 0x0000000630800000, 0x0000000630c00000|  0%| F|  |TAMS 0x0000000630800000| PB 0x0000000630800000| Untracked 
| 105|0x0000000630c00000, 0x0000000630c00000, 0x0000000631000000|  0%| F|  |TAMS 0x0000000630c00000| PB 0x0000000630c00000| Untracked 
| 106|0x0000000631000000, 0x0000000631000000, 0x0000000631400000|  0%| F|  |TAMS 0x0000000631000000| PB 0x0000000631000000| Untracked 
| 107|0x0000000631400000, 0x0000000631400000, 0x0000000631800000|  0%| F|  |TAMS 0x0000000631400000| PB 0x0000000631400000| Untracked 
| 108|0x0000000631800000, 0x0000000631800000, 0x0000000631c00000|  0%| F|  |TAMS 0x0000000631800000| PB 0x0000000631800000| Untracked 
| 109|0x0000000631c00000, 0x0000000631c00000, 0x0000000632000000|  0%| F|  |TAMS 0x0000000631c00000| PB 0x0000000631c00000| Untracked 
| 110|0x0000000632000000, 0x0000000632000000, 0x0000000632400000|  0%| F|  |TAMS 0x0000000632000000| PB 0x0000000632000000| Untracked 
| 111|0x0000000632400000, 0x0000000632400000, 0x0000000632800000|  0%| F|  |TAMS 0x0000000632400000| PB 0x0000000632400000| Untracked 
| 112|0x0000000632800000, 0x0000000632800000, 0x0000000632c00000|  0%| F|  |TAMS 0x0000000632800000| PB 0x0000000632800000| Untracked 
| 113|0x0000000632c00000, 0x0000000632c00000, 0x0000000633000000|  0%| F|  |TAMS 0x0000000632c00000| PB 0x0000000632c00000| Untracked 
| 114|0x0000000633000000, 0x0000000633000000, 0x0000000633400000|  0%| F|  |TAMS 0x0000000633000000| PB 0x0000000633000000| Untracked 
| 115|0x0000000633400000, 0x0000000633400000, 0x0000000633800000|  0%| F|  |TAMS 0x0000000633400000| PB 0x0000000633400000| Untracked 
| 116|0x0000000633800000, 0x00000006339d5c50, 0x0000000633c00000| 45%| S|CS|TAMS 0x0000000633800000| PB 0x0000000633800000| Complete 
| 117|0x0000000633c00000, 0x0000000633c00000, 0x0000000634000000|  0%| F|  |TAMS 0x0000000633c00000| PB 0x0000000633c00000| Untracked 
| 118|0x0000000634000000, 0x0000000634000000, 0x0000000634400000|  0%| F|  |TAMS 0x0000000634000000| PB 0x0000000634000000| Untracked 
| 119|0x0000000634400000, 0x0000000634400000, 0x0000000634800000|  0%| F|  |TAMS 0x0000000634400000| PB 0x0000000634400000| Untracked 
| 120|0x0000000634800000, 0x0000000634800000, 0x0000000634c00000|  0%| F|  |TAMS 0x0000000634800000| PB 0x0000000634800000| Untracked 
| 121|0x0000000634c00000, 0x0000000634c00000, 0x0000000635000000|  0%| F|  |TAMS 0x0000000634c00000| PB 0x0000000634c00000| Untracked 
| 122|0x0000000635000000, 0x0000000635114838, 0x0000000635400000| 27%| E|  |TAMS 0x0000000635000000| PB 0x0000000635000000| Complete 
|1957|0x00000007ffc00000, 0x00000007ffd0c710, 0x0000000800000000| 26%| O|  |TAMS 0x00000007ffc00000| PB 0x00000007ffc00000| Untracked 

Card table byte_map: [0x00007edcb7800000,0x00007edcb874c000] _byte_map_base: 0x00007edcb474c000

Marking Bits: (CMBitMap*) 0x00007edcd0045f40
 Bits: [0x00007edcafc00000, 0x00007edcb7660000)

Polling page: 0x00007edcd8b3e000

Metaspace:

Usage:
  Non-class:      1.36 MB used.
      Class:     96.54 KB used.
       Both:      1.46 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,       1.38 MB (  2%) committed,  1 nodes.
      Class space:        1.00 GB reserved,     128.00 KB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,       1.50 MB ( <1%) committed. 

Chunk freelists:
   Non-Class:  11.38 MB
       Class:  15.69 MB
        Both:  27.06 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 21.00 MB
CDS: on
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
 - use_allocation_guard: 0.


Internal statistics:

num_allocs_failed_limit: 0.
num_arena_births: 12.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 24.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 0.
num_chunks_taken_from_freelist: 47.
num_chunk_merges: 0.
num_chunk_splits: 29.
num_chunks_enlarged: 23.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=119168Kb used=236Kb max_used=236Kb free=118931Kb
 bounds [0x00007edcc03a0000, 0x00007edcc0610000, 0x00007edcc7800000]
CodeHeap 'profiled nmethods': size=119164Kb used=675Kb max_used=675Kb free=118488Kb
 bounds [0x00007edcb8800000, 0x00007edcb8a70000, 0x00007edcbfc5f000]
CodeHeap 'non-nmethods': size=7428Kb used=3130Kb max_used=3161Kb free=4297Kb
 bounds [0x00007edcbfc5f000, 0x00007edcbff7f000, 0x00007edcc03a0000]
 total_blobs=1089 nmethods=546 adapters=446
 compilation: enabled
              stopped_count=0, restarted_count=0
 full_count=0

Compilation events (20 events):
Event: 0.324 Thread 0x00007edc180a8ce0  535       4       jcuda.runtime.JCuda::cudaMemcpyAsync (14 bytes)
Event: 0.324 Thread 0x00007edc180a8ce0 nmethod 535 0x00007edcc03d1410 code [0x00007edcc03d15a0, 0x00007edcc03d1660]
Event: 0.324 Thread 0x00007edc180a8ce0  536       4       java.nio.DoubleBuffer::hasArray (20 bytes)
Event: 0.325 Thread 0x00007edc180a8ce0 nmethod 536 0x00007edcc03d1710 code [0x00007edcc03d18a0, 0x00007edcc03d1968]
Event: 0.325 Thread 0x00007edc180a8ce0  537       4       java.nio.DoubleBuffer::array (5 bytes)
Event: 0.325 Thread 0x00007edc180a8ce0 nmethod 537 0x00007edcc03d1a10 code [0x00007edcc03d1ba0, 0x00007edcc03d1c68]
Event: 0.341 Thread 0x00007edc180a9e40 nmethod 524 0x00007edcc03d1d10 code [0x00007edcc03d1fc0, 0x00007edcc03d3748]
Event: 0.359 Thread 0x00007edcd0135800  538       1       JCudaWrapper.algebra.Vector::inc (5 bytes)
Event: 0.360 Thread 0x00007edcd0135800 nmethod 538 0x00007edcc03d4e90 code [0x00007edcc03d5020, 0x00007edcc03d50e0]
Event: 0.383 Thread 0x00007edcd0134140 nmethod 531 0x00007edcc03d5190 code [0x00007edcc03d54c0, 0x00007edcc03d7630]
Event: 0.478 Thread 0x00007edc0005e160  539       3       java.lang.ref.PhantomReference::<init> (7 bytes)
Event: 0.478 Thread 0x00007edc0005e160 nmethod 539 0x00007edcb88a8790 code [0x00007edcb88a8940, 0x00007edcb88a8c18]
Event: 0.482 Thread 0x00007edc0005e160  540       1       java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
Event: 0.482 Thread 0x00007edc1405eba0  541       1       java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
Event: 0.482 Thread 0x00007edc0005e160 nmethod 540 0x00007edcc03d9c10 code [0x00007edcc03d9da0, 0x00007edcc03d9e68]
Event: 0.482 Thread 0x00007edcd0135800  542       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
Event: 0.482 Thread 0x00007edc1405eba0 nmethod 541 0x00007edcc03d9f10 code [0x00007edcc03da0a0, 0x00007edcc03da1b0]
Event: 0.482 Thread 0x00007edcd0135800 nmethod 542 0x00007edcc03da210 code [0x00007edcc03da3a0, 0x00007edcc03da460]
Event: 0.482 Thread 0x00007edc1405fd20  543       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
Event: 0.482 Thread 0x00007edc1405fd20 nmethod 543 0x00007edcc03da510 code [0x00007edcc03da6a0, 0x00007edcc03da768]

GC Heap History (2 events):
Event: 0.479 GC heap before
{Heap before GC invocations=0 (full 0):
 garbage-first heap   total 507904K, used 25649K [0x0000000616800000, 0x0000000800000000)
  region size 4096K, 6 young (24576K), 0 survivors (0K)
 Metaspace       used 1489K, committed 1536K, reserved 1114112K
  class space    used 96K, committed 128K, reserved 1048576K
}
Event: 0.482 GC heap after
{Heap after GC invocations=1 (full 0):
 garbage-first heap   total 507904K, used 2952K [0x0000000616800000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 1489K, committed 1536K, reserved 1114112K
  class space    used 96K, committed 128K, reserved 1048576K
}

Dll operation events (7 events):
Event: 0.002 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
Event: 0.022 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
Event: 0.024 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
Event: 0.060 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
Event: 0.080 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
Event: 0.134 Loaded shared library /tmp/libJCublas2-12.0.0-linux-x86_64.so
Event: 0.234 Loaded shared library /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so

Deoptimization events (20 events):
Event: 0.063 Thread 0x00007edcd001a0a0 DEOPT PACKING pc=0x00007edcb883754d sp=0x00007edcd71fcff0
Event: 0.063 Thread 0x00007edcd001a0a0 DEOPT UNPACKING pc=0x00007edcbfcb372f sp=0x00007edcd71fc480 mode 0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT PACKING pc=0x00007edcb883754d sp=0x00007edcd71fcff0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT UNPACKING pc=0x00007edcbfcb372f sp=0x00007edcd71fc480 mode 0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT PACKING pc=0x00007edcb883754d sp=0x00007edcd71fcff0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT UNPACKING pc=0x00007edcbfcb372f sp=0x00007edcd71fc480 mode 0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT PACKING pc=0x00007edcb883754d sp=0x00007edcd71fcff0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT UNPACKING pc=0x00007edcbfcb372f sp=0x00007edcd71fc480 mode 0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT PACKING pc=0x00007edcb883754d sp=0x00007edcd71fcff0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT UNPACKING pc=0x00007edcbfcb372f sp=0x00007edcd71fc480 mode 0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT PACKING pc=0x00007edcb883754d sp=0x00007edcd71fcff0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT UNPACKING pc=0x00007edcbfcb372f sp=0x00007edcd71fc480 mode 0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT PACKING pc=0x00007edcb883754d sp=0x00007edcd71fcff0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT UNPACKING pc=0x00007edcbfcb372f sp=0x00007edcd71fc480 mode 0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT PACKING pc=0x00007edcb883754d sp=0x00007edcd71fcff0
Event: 0.064 Thread 0x00007edcd001a0a0 DEOPT UNPACKING pc=0x00007edcbfcb372f sp=0x00007edcd71fc480 mode 0
Event: 0.065 Thread 0x00007edcd001a0a0 DEOPT PACKING pc=0x00007edcb883754d sp=0x00007edcd71fcff0
Event: 0.065 Thread 0x00007edcd001a0a0 DEOPT UNPACKING pc=0x00007edcbfcb372f sp=0x00007edcd71fc480 mode 0
Event: 0.065 Thread 0x00007edcd001a0a0 DEOPT PACKING pc=0x00007edcb883754d sp=0x00007edcd71fcff0
Event: 0.065 Thread 0x00007edcd001a0a0 DEOPT UNPACKING pc=0x00007edcbfcb372f sp=0x00007edcd71fc480 mode 0

Classes loaded (20 events):
Event: 0.246 Loading class java/util/function/IntPredicate
Event: 0.246 Loading class java/util/function/IntPredicate done
Event: 0.247 Loading class java/util/stream/MatchOps$MatchKind
Event: 0.247 Loading class java/util/stream/MatchOps$MatchKind done
Event: 0.247 Loading class java/util/stream/MatchOps
Event: 0.247 Loading class java/util/stream/MatchOps done
Event: 0.247 Loading class java/util/stream/MatchOps$MatchOp
Event: 0.247 Loading class java/util/stream/MatchOps$MatchOp done
Event: 0.247 Loading class java/util/stream/MatchOps$BooleanTerminalSink
Event: 0.247 Loading class java/util/stream/MatchOps$BooleanTerminalSink done
Event: 0.248 Loading class java/util/stream/MatchOps$2MatchSink
Event: 0.248 Loading class java/util/stream/Sink$OfInt
Event: 0.248 Loading class java/util/stream/Sink$OfInt done
Event: 0.248 Loading class java/util/stream/MatchOps$2MatchSink done
Event: 0.249 Loading class java/util/stream/MatchOps$1MatchSink
Event: 0.249 Loading class java/util/stream/MatchOps$1MatchSink done
Event: 0.252 Loading class java/nio/HeapDoubleBuffer
Event: 0.252 Loading class java/nio/HeapDoubleBuffer done
Event: 0.313 Loading class java/lang/foreign/MemorySegment
Event: 0.313 Loading class java/lang/foreign/MemorySegment done

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (8 events):
Event: 0.046 Thread 0x00007edcd001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635073bb0}> (0x0000000635073bb0) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x00007edcd001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635074320}> (0x0000000635074320) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x00007edcd001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635074b50}> (0x0000000635074b50) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x00007edcd001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635075148}> (0x0000000635075148) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x00007edcd001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635075718}> (0x0000000635075718) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x00007edcd001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635075cf8}> (0x0000000635075cf8) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x00007edcd001a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635076548}> (0x0000000635076548) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.240 Thread 0x00007edcd001a0a0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000634cc5540}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object)'> (0x0000000634cc5540) 
thrown [./src/hotspot/share/interpreter/linkResolver.cpp, line 772]

ZGC Phase Switch (0 events):
No events

VM Operations (4 events):
Event: 0.048 Executing VM operation: HandshakeAllThreads (Deoptimize)
Event: 0.048 Executing VM operation: HandshakeAllThreads (Deoptimize) done
Event: 0.479 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 0.482 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done

Memory protections (18 events):
Event: 0.001 Protecting memory [0x00007edcd7100000,0x00007edcd7104000] with protection modes 0
Event: 0.021 Protecting memory [0x00007edcac900000,0x00007edcac904000] with protection modes 0
Event: 0.021 Protecting memory [0x00007edcac800000,0x00007edcac804000] with protection modes 0
Event: 0.021 Protecting memory [0x00007edcac700000,0x00007edcac704000] with protection modes 0
Event: 0.021 Protecting memory [0x00007edcac600000,0x00007edcac604000] with protection modes 0
Event: 0.022 Protecting memory [0x00007edcac500000,0x00007edcac504000] with protection modes 0
Event: 0.022 Protecting memory [0x00007edcac400000,0x00007edcac404000] with protection modes 0
Event: 0.022 Protecting memory [0x00007edcac300000,0x00007edcac304000] with protection modes 0
Event: 0.038 Protecting memory [0x00007edcac200000,0x00007edcac204000] with protection modes 0
Event: 0.044 Protecting memory [0x00007edcac100000,0x00007edcac104000] with protection modes 0
Event: 0.044 Protecting memory [0x00007edcac000000,0x00007edcac004000] with protection modes 0
Event: 0.056 Protecting memory [0x00007edca7f00000,0x00007edca7f04000] with protection modes 0
Event: 0.058 Protecting memory [0x00007edca7e00000,0x00007edca7e04000] with protection modes 0
Event: 0.065 Protecting memory [0x00007edca7d00000,0x00007edca7d04000] with protection modes 0
Event: 0.241 Protecting memory [0x00007edca7e00000,0x00007edca7e04000] with protection modes 0
Event: 0.259 Protecting memory [0x00007edca7d00000,0x00007edca7d04000] with protection modes 0
Event: 0.278 Protecting memory [0x00007edca4f00000,0x00007edca4f04000] with protection modes 0
Event: 0.278 Protecting memory [0x00007edca4b00000,0x00007edca4b04000] with protection modes 0

Nmethod flushes (0 events):
No events

Events (20 events):
Event: 0.021 Thread 0x00007edcd001a0a0 Thread added: 0x00007edcd012e200
Event: 0.021 Thread 0x00007edcd001a0a0 Thread added: 0x00007edcd012f9a0
Event: 0.021 Thread 0x00007edcd001a0a0 Thread added: 0x00007edcd0130fe0
Event: 0.022 Thread 0x00007edcd001a0a0 Thread added: 0x00007edcd0132580
Event: 0.022 Thread 0x00007edcd001a0a0 Thread added: 0x00007edcd0134140
Event: 0.022 Thread 0x00007edcd001a0a0 Thread added: 0x00007edcd0135800
Event: 0.038 Thread 0x00007edcd001a0a0 Thread added: 0x00007edcd0149370
Event: 0.044 Thread 0x00007edcd0135800 Thread added: 0x00007edc1405eba0
Event: 0.044 Thread 0x00007edcd0135800 Thread added: 0x00007edc1405fd20
Event: 0.056 Thread 0x00007edcd001a0a0 Thread added: 0x00007edcd017fa30
Event: 0.058 Thread 0x00007edc1405fd20 Thread added: 0x00007edc00039cd0
Event: 0.065 Thread 0x00007edcd0135800 Thread added: 0x00007edc140b2f60
Event: 0.231 Thread 0x00007edc140b2f60 Thread exited: 0x00007edc140b2f60
Event: 0.232 Thread 0x00007edc00039cd0 Thread exited: 0x00007edc00039cd0
Event: 0.241 Thread 0x00007edcd001a0a0 Thread added: 0x00007edcd1667830
Event: 0.259 Thread 0x00007edc1405fd20 Thread added: 0x00007edc0005e160
Event: 0.278 Thread 0x00007edcd0134140 Thread added: 0x00007edc180a8ce0
Event: 0.278 Thread 0x00007edcd0134140 Thread added: 0x00007edc180a9e40
Event: 0.478 Thread 0x00007edc180a9e40 Thread exited: 0x00007edc180a9e40
Event: 0.478 Thread 0x00007edc180a8ce0 Thread exited: 0x00007edc180a8ce0


Dynamic libraries:
200000000-200200000 ---p 00000000 00:00 0 
200200000-200400000 rw-s 00000000 00:05 1108                             /dev/nvidia0
200400000-203400000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
203400000-204400000 ---p 00000000 00:00 0 
204400000-204600000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
204600000-204800000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
204800000-204a00000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
204a00000-204c00000 rw-s 204a00000 00:05 1109                            /dev/nvidia-uvm
204c00000-204e00000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
204e00000-205000000 ---p 00000000 00:00 0 
205000000-205200000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
205200000-300200000 ---p 00000000 00:00 0 
616800000-635400000 rw-p 00000000 00:00 0 
635400000-7ffc00000 ---p 00000000 00:00 0 
7ffc00000-7ffd0d000 rw-p 00cd6000 103:02 17173446                        /usr/lib/jvm/java-21-openjdk-amd64/lib/server/classes.jsa
7ffd0d000-800000000 rw-p 00000000 00:00 0 
10000000000-10004000000 ---p 00000000 00:00 0 
59d15374f000-59d153750000 r--p 00000000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
59d153750000-59d153751000 r-xp 00001000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
59d153751000-59d153752000 r--p 00002000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
59d153752000-59d153753000 r--p 00002000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
59d153753000-59d153754000 rw-p 00003000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
59d153a4f000-59d153a96000 rw-p 00000000 00:00 0                          [heap]
7edb50000000-7edb50021000 rw-p 00000000 00:00 0 
7edb50021000-7edb54000000 ---p 00000000 00:00 0 
7edb58000000-7edb58021000 rw-p 00000000 00:00 0 
7edb58021000-7edb5c000000 ---p 00000000 00:00 0 
7edb5c000000-7edb5c021000 rw-p 00000000 00:00 0 
7edb5c021000-7edb60000000 ---p 00000000 00:00 0 
7edb64000000-7edb64021000 rw-p 00000000 00:00 0 
7edb64021000-7edb68000000 ---p 00000000 00:00 0 
7edb68000000-7edb68021000 rw-p 00000000 00:00 0 
7edb68021000-7edb6c000000 ---p 00000000 00:00 0 
7edb70000000-7edb70021000 rw-p 00000000 00:00 0 
7edb70021000-7edb74000000 ---p 00000000 00:00 0 
7edb74000000-7edb74021000 rw-p 00000000 00:00 0 
7edb74021000-7edb78000000 ---p 00000000 00:00 0 
7edb7c000000-7edb7c021000 rw-p 00000000 00:00 0 
7edb7c021000-7edb80000000 ---p 00000000 00:00 0 
7edb80000000-7edb803f8000 rw-p 00000000 00:00 0 
7edb803f8000-7edb84000000 ---p 00000000 00:00 0 
7edb88000000-7edb8820b000 rw-p 00000000 00:00 0 
7edb8820b000-7edb8c000000 ---p 00000000 00:00 0 
7edb8e000000-7edb96000000 ---p 00000000 00:00 0 
7edb98000000-7edb9a000000 ---p 00000000 00:00 0 
7edb9c000000-7edb9c400000 ---p 00000000 00:00 0 
7edb9c400000-7edb9c600000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edb9c600000-7edb9c800000 rw-s 00000000 00:01 3188                       /dev/zero (deleted)
7edb9c800000-7edb9ca00000 rw-s 00000000 00:01 3189                       /dev/zero (deleted)
7edb9ca00000-7edb9d000000 ---p 00000000 00:00 0 
7edb9d000000-7edb9d200000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edb9d200000-7edb9d400000 ---p 00000000 00:00 0 
7edb9d400000-7edb9d600000 rw-s 00000000 00:01 3191                       /dev/zero (deleted)
7edb9d600000-7edb9db33000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edb9db33000-7edb9e000000 ---p 00000000 00:00 0 
7edba0000000-7edbb0000000 ---p 00000000 00:00 0 
7edbb4000000-7edbb4021000 rw-p 00000000 00:00 0 
7edbb4021000-7edbb8000000 ---p 00000000 00:00 0 
7edbba000000-7edbc0000000 ---p 00000000 00:00 0 
7edbc0000000-7edbc0021000 rw-p 00000000 00:00 0 
7edbc0021000-7edbc4000000 ---p 00000000 00:00 0 
7edbc7800000-7edbe1068000 r-xp 00000000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
7edbe1068000-7edbe1268000 ---p 19868000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
7edbe1268000-7edbe14a6000 r--p 19868000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
7edbe14a6000-7edbe4e5a000 rw-p 19aa6000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
7edbe4e5a000-7edbe902b000 rw-p 00000000 00:00 0 
7edbe9400000-7edbefb28000 r-xp 00000000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
7edbefb28000-7edbefd28000 ---p 06728000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
7edbefd28000-7edbefd34000 r--p 06728000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
7edbefd34000-7edbefd3b000 rw-p 06734000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
7edbefd3b000-7edbefd47000 rw-p 00000000 00:00 0 
7edbf0000000-7edbf002e000 rw-p 00000000 00:00 0 
7edbf002e000-7edbf4000000 ---p 00000000 00:00 0 
7edbf4000000-7edbf4040000 rw-p 00000000 00:00 0 
7edbf4040000-7edbf8000000 ---p 00000000 00:00 0 
7edbfc000000-7edbfc021000 rw-p 00000000 00:00 0 
7edbfc021000-7edc00000000 ---p 00000000 00:00 0 
7edc00000000-7edc00061000 rw-p 00000000 00:00 0 
7edc00061000-7edc04000000 ---p 00000000 00:00 0 
7edc08000000-7edc08071000 rw-p 00000000 00:00 0 
7edc08071000-7edc0c000000 ---p 00000000 00:00 0 
7edc0c000000-7edc0c021000 rw-p 00000000 00:00 0 
7edc0c021000-7edc10000000 ---p 00000000 00:00 0 
7edc14000000-7edc140b8000 rw-p 00000000 00:00 0 
7edc140b8000-7edc18000000 ---p 00000000 00:00 0 
7edc18000000-7edc1869d000 rw-p 00000000 00:00 0 
7edc1869d000-7edc1c000000 ---p 00000000 00:00 0 
7edc20000000-7edc20021000 rw-p 00000000 00:00 0 
7edc20021000-7edc24000000 ---p 00000000 00:00 0 
7edc24000000-7edc24021000 rw-p 00000000 00:00 0 
7edc24021000-7edc28000000 ---p 00000000 00:00 0 
7edc2c000000-7edc2c021000 rw-p 00000000 00:00 0 
7edc2c021000-7edc30000000 ---p 00000000 00:00 0 
7edc30000000-7edc30021000 rw-p 00000000 00:00 0 
7edc30021000-7edc34000000 ---p 00000000 00:00 0 
7edc38000000-7edc38021000 rw-p 00000000 00:00 0 
7edc38021000-7edc3c000000 ---p 00000000 00:00 0 
7edc3c000000-7edc3c021000 rw-p 00000000 00:00 0 
7edc3c021000-7edc40000000 ---p 00000000 00:00 0 
7edc44000000-7edc440c0000 rw-p 00000000 00:00 0 
7edc440c0000-7edc44400000 ---p 00000000 00:00 0 
7edc44400000-7edc444a0000 rw-p 00000000 00:00 0 
7edc444a0000-7edc48000000 ---p 00000000 00:00 0 
7edc48000000-7edc48021000 rw-p 00000000 00:00 0 
7edc48021000-7edc4c000000 ---p 00000000 00:00 0 
7edc4f000000-7edc4fc97000 rw-p 00001000 103:02 17173446                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/classes.jsa
7edc4fc97000-7edc50000000 ---p 00000000 00:00 0 
7edc50000000-7edc50010000 rw-p 00000000 00:00 0 
7edc50010000-7edc50040000 ---p 00000000 00:00 0 
7edc50040000-7edc50050000 rw-p 00000000 00:00 0 
7edc50050000-7edc90000000 ---p 00000000 00:00 0 
7edc90000000-7edc90021000 rw-p 00000000 00:00 0 
7edc90021000-7edc94000000 ---p 00000000 00:00 0 
7edc94000000-7edc94021000 rw-p 00000000 00:00 0 
7edc94021000-7edc98000000 ---p 00000000 00:00 0 
7edc98600000-7edc988dd000 rw-p 00000000 00:00 0 
7edc988fd000-7edc988fe000 ---p 00000000 00:00 0 
7edc988fe000-7edc989fe000 rw-p 00000000 00:00 0 
7edc989fe000-7edc989ff000 ---p 00000000 00:00 0 
7edc989ff000-7edc98aff000 rw-p 00000000 00:00 0 
7edc98aff000-7edc98b00000 ---p 00000000 00:00 0 
7edc98b00000-7edc98c00000 rw-p 00000000 00:00 0 
7edc98c00000-7edc98cc7000 r-xp 00000000 103:02 18219053                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
7edc98cc7000-7edc98ec7000 ---p 000c7000 103:02 18219053                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
7edc98ec7000-7edc98ecc000 r--p 000c7000 103:02 18219053                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
7edc98ecc000-7edc98ecd000 rw-p 000cc000 103:02 18219053                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
7edc98ecd000-7edc98ecf000 rw-p 00000000 00:00 0 
7edc98efd000-7edc98efe000 ---p 00000000 00:00 0 
7edc98efe000-7edc98ffe000 rw-p 00000000 00:00 0 
7edc98ffe000-7edc98fff000 ---p 00000000 00:00 0 
7edc98fff000-7edc990ff000 rw-p 00000000 00:00 0 
7edc990ff000-7edc99100000 ---p 00000000 00:00 0 
7edc99100000-7edc99200000 rw-p 00000000 00:00 0 
7edc99200000-7edc99201000 ---p 00000000 00:00 0 
7edc99201000-7edc99a01000 rw-p 00000000 00:00 0 
7edc99aff000-7edc99b00000 ---p 00000000 00:00 0 
7edc99b00000-7edc99c00000 rw-p 00000000 00:00 0 
7edc99c00000-7edc99c01000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c01000-7edc99c02000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c02000-7edc99c03000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c03000-7edc99c04000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c04000-7edc99c05000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c05000-7edc99c06000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c06000-7edc99c07000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c07000-7edc99c08000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c08000-7edc99c09000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c09000-7edc99c0a000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c0a000-7edc99c0b000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c0b000-7edc99c0c000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c0c000-7edc99c0d000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c0d000-7edc99c0e000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c0e000-7edc99c0f000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c0f000-7edc99c10000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7edc99c10000-7edc9ac21000 ---p 00000000 00:00 0 
7edc9acff000-7edc9ad00000 ---p 00000000 00:00 0 
7edc9ad00000-7edc9ae00000 rw-p 00000000 00:00 0 
7edc9ae00000-7edc9be21000 ---p 00000000 00:00 0 
7edc9beff000-7edc9bf00000 ---p 00000000 00:00 0 
7edc9bf00000-7edc9c000000 rw-p 00000000 00:00 0 
7edc9c000000-7edc9c021000 rw-p 00000000 00:00 0 
7edc9c021000-7edca0000000 ---p 00000000 00:00 0 
7edca0000000-7edca0021000 rw-p 00000000 00:00 0 
7edca0021000-7edca4000000 ---p 00000000 00:00 0 
7edca40ff000-7edca4100000 ---p 00000000 00:00 0 
7edca4100000-7edca4200000 rw-p 00000000 00:00 0 
7edca4200000-7edca4201000 ---p 00000000 00:00 0 
7edca4201000-7edca4a01000 rw-p 00000000 00:00 0 
7edca4b00000-7edca4b04000 ---p 00000000 00:00 0 
7edca4b04000-7edca4c00000 rw-p 00000000 00:00 0 
7edca4c00000-7edca4e5a000 rw-p 00000000 00:00 0 
7edca4f00000-7edca4f04000 ---p 00000000 00:00 0 
7edca4f04000-7edca5000000 rw-p 00000000 00:00 0 
7edca5000000-7edca5001000 ---p 00000000 00:00 0 
7edca5001000-7edca5801000 rw-p 00000000 00:00 0 
7edca58be000-7edca5a00000 rw-p 00000000 00:00 0 
7edca5a00000-7edca5ade000 r--p 00000000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
7edca5ade000-7edca5fb3000 r-xp 000de000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
7edca5fb3000-7edca744f000 r--p 005b3000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
7edca744f000-7edca7450000 ---p 01a4f000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
7edca7450000-7edca7468000 r--p 01a4f000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
7edca7468000-7edca7563000 rw-p 01a67000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
7edca7563000-7edca75cc000 rw-p 00000000 00:00 0 
7edca7600000-7edca7738000 r-xp 00000000 103:02 18219052                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
7edca7738000-7edca7938000 ---p 00138000 103:02 18219052                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
7edca7938000-7edca793d000 r--p 00138000 103:02 18219052                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
7edca793d000-7edca793f000 rw-p 0013d000 103:02 18219052                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
7edca793f000-7edca7941000 rw-p 00000000 00:00 0 
7edca794a000-7edca7b4a000 rw-s 00000000 00:01 3190                       /dev/zero (deleted)
7edca7b4a000-7edca7d00000 rw-p 00000000 00:00 0 
7edca7d00000-7edca7d04000 ---p 00000000 00:00 0 
7edca7d04000-7edca7e00000 rw-p 00000000 00:00 0 
7edca7e00000-7edca7e04000 ---p 00000000 00:00 0 
7edca7e04000-7edca7f00000 rw-p 00000000 00:00 0 
7edca7f00000-7edca7f04000 ---p 00000000 00:00 0 
7edca7f04000-7edca8000000 rw-p 00000000 00:00 0 
7edca8000000-7edca8021000 rw-p 00000000 00:00 0 
7edca8021000-7edcac004000 ---p 00000000 00:00 0 
7edcac004000-7edcac100000 rw-p 00000000 00:00 0 
7edcac100000-7edcac104000 ---p 00000000 00:00 0 
7edcac104000-7edcac200000 rw-p 00000000 00:00 0 
7edcac200000-7edcac204000 ---p 00000000 00:00 0 
7edcac204000-7edcac300000 rw-p 00000000 00:00 0 
7edcac300000-7edcac304000 ---p 00000000 00:00 0 
7edcac304000-7edcac400000 rw-p 00000000 00:00 0 
7edcac400000-7edcac404000 ---p 00000000 00:00 0 
7edcac404000-7edcac500000 rw-p 00000000 00:00 0 
7edcac500000-7edcac504000 ---p 00000000 00:00 0 
7edcac504000-7edcac600000 rw-p 00000000 00:00 0 
7edcac600000-7edcac604000 ---p 00000000 00:00 0 
7edcac604000-7edcac700000 rw-p 00000000 00:00 0 
7edcac700000-7edcac704000 ---p 00000000 00:00 0 
7edcac704000-7edcac800000 rw-p 00000000 00:00 0 
7edcac800000-7edcac804000 ---p 00000000 00:00 0 
7edcac804000-7edcac900000 rw-p 00000000 00:00 0 
7edcac900000-7edcac904000 ---p 00000000 00:00 0 
7edcac904000-7edcaca00000 rw-p 00000000 00:00 0 
7edcaca00000-7edcad7ec000 r--p 00000000 103:02 16521112                  /usr/lib/locale/locale-archive
7edcad7fc000-7edcad7fd000 ---p 00000000 00:00 0 
7edcad7fd000-7edcad8fd000 rw-p 00000000 00:00 0 
7edcad8fd000-7edcad8fe000 ---p 00000000 00:00 0 
7edcad8fe000-7edcad9fe000 rw-p 00000000 00:00 0 
7edcad9fe000-7edcad9ff000 ---p 00000000 00:00 0 
7edcad9ff000-7edcadaff000 rw-p 00000000 00:00 0 
7edcadaff000-7edcadb00000 ---p 00000000 00:00 0 
7edcadb00000-7edcadc00000 rw-p 00000000 00:00 0 
7edcadc00000-7edcb03b0000 rw-p 00000000 00:00 0 
7edcb03b0000-7edcb7650000 ---p 00000000 00:00 0 
7edcb7650000-7edcb7660000 rw-p 00000000 00:00 0 
7edcb767b000-7edcb78f6000 rw-p 00000000 00:00 0 
7edcb78f6000-7edcb874a000 ---p 00000000 00:00 0 
7edcb874a000-7edcb874c000 rw-p 00000000 00:00 0 
7edcb875f000-7edcb8800000 rw-p 00000000 00:00 0 
7edcb8800000-7edcb8a70000 rwxp 00000000 00:00 0 
7edcb8a70000-7edcbfc5f000 ---p 00000000 00:00 0 
7edcbfc5f000-7edcbff7f000 rwxp 00000000 00:00 0 
7edcbff7f000-7edcc03a0000 ---p 00000000 00:00 0 
7edcc03a0000-7edcc0610000 rwxp 00000000 00:00 0 
7edcc0610000-7edcc7800000 ---p 00000000 00:00 0 
7edcc7800000-7edccfe0c000 r--s 00000000 103:02 17173445                  /usr/lib/jvm/java-21-openjdk-amd64/lib/modules
7edccfe17000-7edccfe1e000 r--s 00000000 103:02 16532226                  /usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache
7edccfe1e000-7edccfe2e000 -w-s 00000000 00:05 1108                       /dev/nvidia0
7edccfe2e000-7edccfe33000 r--p 00000000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7edccfe33000-7edccfe74000 r-xp 00005000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7edccfe74000-7edccfefd000 r--p 00046000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7edccfefd000-7edccfefe000 r--p 000ce000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7edccfefe000-7edccfeff000 rw-p 000cf000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7edccfeff000-7edcd1816000 rw-p 00000000 00:00 0 
7edcd1816000-7edcd4000000 ---p 00000000 00:00 0 
7edcd4002000-7edcd4003000 r--p 00000000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
7edcd4003000-7edcd4004000 r-xp 00001000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
7edcd4004000-7edcd4005000 r--p 00002000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
7edcd4005000-7edcd4006000 r--p 00002000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
7edcd4006000-7edcd4007000 rw-p 00003000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
7edcd4007000-7edcd4008000 r--p 00000000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
7edcd4008000-7edcd4009000 r-xp 00001000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
7edcd4009000-7edcd400a000 r--p 00002000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
7edcd400a000-7edcd400b000 r--p 00002000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
7edcd400b000-7edcd400c000 rw-p 00003000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
7edcd400c000-7edcd400e000 r--p 00000000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
7edcd400e000-7edcd4013000 r-xp 00002000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
7edcd4013000-7edcd4015000 r--p 00007000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
7edcd4015000-7edcd4016000 r--p 00008000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
7edcd4016000-7edcd4017000 rw-p 00009000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
7edcd4017000-7edcd4bfe000 rw-p 00000000 00:00 0 
7edcd4bfe000-7edcd4bff000 ---p 00000000 00:00 0 
7edcd4bff000-7edcd4cff000 rw-p 00000000 00:00 0 
7edcd4cff000-7edcd4d00000 ---p 00000000 00:00 0 
7edcd4d00000-7edcd4e00000 rw-p 00000000 00:00 0 
7edcd4e00000-7edcd4ef6000 rw-p 00000000 00:00 0 
7edcd4ef6000-7edcd5d4a000 ---p 00000000 00:00 0 
7edcd5d4a000-7edcd5d4c000 rw-p 00000000 00:00 0 
7edcd5d4e000-7edcd5d55000 r--p 00000000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7edcd5d55000-7edcd5d5e000 r-xp 00007000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7edcd5d5e000-7edcd5d62000 r--p 00010000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7edcd5d62000-7edcd5d63000 r--p 00014000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7edcd5d63000-7edcd5d64000 rw-p 00015000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7edcd5d64000-7edcd5d65000 ---p 00000000 00:00 0 
7edcd5d65000-7edcd5e65000 rw-p 00000000 00:00 0 
7edcd5e65000-7edcd6c33000 rw-p 00000000 00:00 0 
7edcd6c33000-7edcd6d17000 ---p 00000000 00:00 0 
7edcd6d17000-7edcd6d1c000 rw-p 00000000 00:00 0 
7edcd6d1c000-7edcd6e00000 ---p 00000000 00:00 0 
7edcd6e00000-7edcd6e9d000 r--p 00000000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
7edcd6e9d000-7edcd6fe5000 r-xp 0009d000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
7edcd6fe5000-7edcd706c000 r--p 001e5000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
7edcd706c000-7edcd7077000 r--p 0026b000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
7edcd7077000-7edcd707a000 rw-p 00276000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
7edcd707a000-7edcd707e000 rw-p 00000000 00:00 0 
7edcd7081000-7edcd7100000 rw-p 00000000 00:00 0 
7edcd7100000-7edcd7104000 ---p 00000000 00:00 0 
7edcd7104000-7edcd7200000 rw-p 00000000 00:00 0 
7edcd7200000-7edcd74a1000 r--p 00000000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
7edcd74a1000-7edcd8311000 r-xp 002a1000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
7edcd8311000-7edcd85e5000 r--p 01111000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
7edcd85e5000-7edcd86b8000 r--p 013e4000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
7edcd86b8000-7edcd86e8000 rw-p 014b7000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
7edcd86e8000-7edcd874e000 rw-p 00000000 00:00 0 
7edcd8752000-7edcd8755000 r--p 00000000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
7edcd8755000-7edcd875d000 r-xp 00003000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
7edcd875d000-7edcd875f000 r--p 0000b000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
7edcd875f000-7edcd8760000 r--p 0000c000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
7edcd8760000-7edcd8761000 rw-p 0000d000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
7edcd8761000-7edcd87a6000 rw-p 00000000 00:00 0 
7edcd87a6000-7edcd87ae000 ---p 00000000 00:00 0 
7edcd87ae000-7edcd87bb000 r--p 00000000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
7edcd87bb000-7edcd87ca000 r-xp 0000d000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
7edcd87ca000-7edcd87cf000 r--p 0001c000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
7edcd87cf000-7edcd87d0000 r--p 00021000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
7edcd87d0000-7edcd87d1000 rw-p 00022000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
7edcd87d1000-7edcd87d2000 rw-p 00000000 00:00 0 
7edcd87d2000-7edcd87d6000 r--p 00000000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
7edcd87d6000-7edcd87fa000 r-xp 00004000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
7edcd87fa000-7edcd87fe000 r--p 00028000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
7edcd87fe000-7edcd87ff000 r--p 0002b000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
7edcd87ff000-7edcd8800000 rw-p 0002c000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
7edcd8800000-7edcd8828000 r--p 00000000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
7edcd8828000-7edcd89b0000 r-xp 00028000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
7edcd89b0000-7edcd89ff000 r--p 001b0000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
7edcd89ff000-7edcd8a03000 r--p 001fe000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
7edcd8a03000-7edcd8a05000 rw-p 00202000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
7edcd8a05000-7edcd8a12000 rw-p 00000000 00:00 0 
7edcd8a16000-7edcd8a17000 r--p 00000000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
7edcd8a17000-7edcd8a18000 r-xp 00001000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
7edcd8a18000-7edcd8a19000 r--p 00002000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
7edcd8a19000-7edcd8a1a000 r--p 00002000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
7edcd8a1a000-7edcd8a1b000 rw-p 00003000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
7edcd8a1b000-7edcd8a2b000 r--p 00000000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
7edcd8a2b000-7edcd8aaa000 r-xp 00010000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
7edcd8aaa000-7edcd8b02000 r--p 0008f000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
7edcd8b02000-7edcd8b03000 r--p 000e7000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
7edcd8b03000-7edcd8b04000 rw-p 000e8000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
7edcd8b04000-7edcd8b06000 rw-p 00000000 00:00 0 
7edcd8b06000-7edcd8b08000 r--p 00000000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
7edcd8b08000-7edcd8b12000 r-xp 00002000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
7edcd8b12000-7edcd8b15000 r--p 0000c000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
7edcd8b15000-7edcd8b16000 r--p 0000f000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
7edcd8b16000-7edcd8b17000 rw-p 00010000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
7edcd8b17000-7edcd8b19000 r--p 00000000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
7edcd8b19000-7edcd8b2b000 r-xp 00002000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
7edcd8b2b000-7edcd8b31000 r--p 00014000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
7edcd8b31000-7edcd8b32000 r--p 0001a000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
7edcd8b32000-7edcd8b33000 rw-p 0001b000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
7edcd8b36000-7edcd8b3e000 rw-s 00000000 103:02 18221683                  /tmp/hsperfdata_dov/17162
7edcd8b3e000-7edcd8b3f000 ---p 00000000 00:00 0 
7edcd8b3f000-7edcd8b40000 r--p 00000000 00:00 0 
7edcd8b40000-7edcd8b41000 ---p 00000000 00:00 0 
7edcd8b41000-7edcd8b43000 r--p 00000000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
7edcd8b43000-7edcd8b46000 r-xp 00002000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
7edcd8b46000-7edcd8b47000 r--p 00005000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
7edcd8b47000-7edcd8b48000 r--p 00006000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
7edcd8b48000-7edcd8b49000 rw-p 00007000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
7edcd8b49000-7edcd8b4b000 rw-p 00000000 00:00 0 
7edcd8b4b000-7edcd8b4c000 r--p 00000000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7edcd8b4c000-7edcd8b77000 r-xp 00001000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7edcd8b77000-7edcd8b81000 r--p 0002c000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7edcd8b81000-7edcd8b83000 r--p 00036000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7edcd8b83000-7edcd8b85000 rw-p 00038000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7ffce9d9e000-7ffce9dbf000 rw-p 00000000 00:00 0                          [stack]
7ffce9dc0000-7ffce9dc4000 r--p 00000000 00:00 0                          [vvar]
7ffce9dc4000-7ffce9dc6000 r-xp 00000000 00:00 0                          [vdso]
ffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]
Total number of mappings: 361


VM Arguments:
jvm_args: -Dfile.encoding=UTF-8 --module-path=/home/dov/projects/NeighborhoodPIG/build/classes 
java_command: main.TestStuff
java_class_path (initial): /home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-javadoc.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-sources.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-test-sources.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-tests.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-tools.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcublas-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcublas-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcuda-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcuda-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcudnn-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcudnn-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcufft-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcufft-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcurand-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcurand-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusolver-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusolver-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusparse-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusparse-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/NeighborhoodPIG/build/classes
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 12                                        {product} {ergonomic}
     uint ConcGCThreads                            = 3                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 13                                        {product} {ergonomic}
   size_t G1HeapRegionSize                         = 4194304                                   {product} {ergonomic}
    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}
   size_t InitialHeapSize                          = 515899392                                 {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MaxHeapSize                              = 8212447232                                {product} {ergonomic}
   size_t MaxNewSize                               = 4924112896                                {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 4194304                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 7602480                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122027880                              {pd product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122027880                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
   size_t SoftMaxHeapSize                          = 8212447232                             {manageable} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags foldmultilines=false
 #1: stderr all=off uptime,level,tags foldmultilines=false

Environment Variables:
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin
USERNAME=dov
SHELL=/bin/bash
DISPLAY=:1
LANG=en_US.UTF-8

Active Locale:
LC_ALL=en_US.UTF-8
LC_COLLATE=en_US.UTF-8
LC_CTYPE=en_US.UTF-8
LC_MESSAGES=en_US.UTF-8
LC_MONETARY=en_US.UTF-8
LC_NUMERIC=en_US.UTF-8
LC_TIME=en_US.UTF-8

Signal Handlers:
   SIGSEGV: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
    SIGBUS: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
    SIGFPE: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
   SIGPIPE: javaSignalHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGXFSZ: javaSignalHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGILL: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
   SIGUSR2: SR_handler in libjvm.so, mask=00000000000000000000000000000000, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGHUP: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGINT: SIG_IGN, mask=00000000000000000000000000000000, flags=none, blocked
   SIGTERM: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGQUIT: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGTRAP: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked


Periodic native trim disabled

---------------  S Y S T E M  ---------------

OS:
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=24.04
DISTRIB_CODENAME=noble
DISTRIB_DESCRIPTION="Ubuntu 24.04.1 LTS"
uname: Linux 6.8.0-49-generic #49-Ubuntu SMP PREEMPT_DYNAMIC Mon Nov  4 02:06:24 UTC 2024 x86_64
OS uptime: 0 days 6:06 hours
libc: glibc 2.39 NPTL 2.39 
rlimit (soft/hard): STACK 8192k/infinity , CORE 0k/infinity , NPROC 125013/125013 , NOFILE 1048576/1048576 , AS infinity/infinity , CPU infinity/infinity , DATA infinity/infinity , FSIZE infinity/infinity , MEMLOCK 4009332k/4009332k
load average: 0.14 0.14 0.16

/proc/meminfo:
MemTotal:       32074664 kB
MemFree:        21870320 kB
MemAvailable:   24714568 kB
Buffers:          290204 kB
Cached:          2983120 kB
SwapCached:            0 kB
Active:          6445232 kB
Inactive:        1880216 kB
Active(anon):    5182696 kB
Inactive(anon):        0 kB
Active(file):    1262536 kB
Inactive(file):  1880216 kB
Unevictable:          32 kB
Mlocked:              32 kB
SwapTotal:       8388604 kB
SwapFree:        8388604 kB
Zswap:                 0 kB
Zswapped:              0 kB
Dirty:               480 kB
Writeback:             0 kB
AnonPages:       5052576 kB
Mapped:          1143992 kB
Shmem:            130528 kB
KReclaimable:     132544 kB
Slab:             435544 kB
SReclaimable:     132544 kB
SUnreclaim:       303000 kB
KernelStack:       24160 kB
PageTables:        60132 kB
SecPageTables:         0 kB
NFS_Unstable:          0 kB
Bounce:                0 kB
WritebackTmp:          0 kB
CommitLimit:    24425936 kB
Committed_AS:   27883628 kB
VmallocTotal:   34359738367 kB
VmallocUsed:      166288 kB
VmallocChunk:          0 kB
Percpu:            18688 kB
HardwareCorrupted:     0 kB
AnonHugePages:         0 kB
ShmemHugePages:        0 kB
ShmemPmdMapped:        0 kB
FileHugePages:         0 kB
FilePmdMapped:         0 kB
Unaccepted:            0 kB
HugePages_Total:       0
HugePages_Free:        0
HugePages_Rsvd:        0
HugePages_Surp:        0
Hugepagesize:       2048 kB
Hugetlb:               0 kB
DirectMap4k:     1604072 kB
DirectMap2M:    16474112 kB
DirectMap1G:    15728640 kB

/sys/kernel/mm/transparent_hugepage/enabled: always [madvise] never
/sys/kernel/mm/transparent_hugepage/hpage_pmd_size: 2097152
/sys/kernel/mm/transparent_hugepage/defrag (defrag/compaction efforts parameter): always defer defer+madvise [madvise] never

Process Memory:
Virtual Size: 17574308K (peak: 17636884K)
Resident Set Size: 319644K (peak: 319644K) (anon: 152284K, file: 159168K, shmem: 8192K)
Swapped out: 0K
C-Heap outstanding allocations: 72559K, retained: 8432K
glibc malloc tunables: (default)

/proc/sys/kernel/threads-max (system-wide limit on the number of threads): 250026
/proc/sys/vm/max_map_count (maximum number of memory map areas a process may have): 1048576
/proc/sys/vm/swappiness (control to define how aggressively the kernel swaps out anonymous memory): 60
/proc/sys/kernel/pid_max (system-wide limit on number of process identifiers): 4194304

container (cgroup) information:
container_type: cgroupv2
cpu_cpuset_cpus: not supported
cpu_memory_nodes: not supported
active_processor_count: 16
cpu_quota: not supported
cpu_period: not supported
cpu_shares: not supported
memory_limit_in_bytes: unlimited
memory_and_swap_limit_in_bytes: unlimited
memory_soft_limit_in_bytes: unlimited
memory_usage_in_bytes: 2740844 k
memory_max_usage_in_bytes: not supported
memory_swap_current_in_bytes: unlimited
memory_swap_max_limit_in_bytes: unlimited
maximum number of tasks: 37503
current number of tasks: 221

Steal ticks since vm start: 0
Steal ticks percentage since vm start:  0.000

CPU: total 16 (initial active 16) (16 cores per cpu, 2 threads per core) family 25 model 68 stepping 1 microcode 0xa404101, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4a, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, clmul, bmi1, bmi2, adx, sha, fma, vzeroupper, clflush, clflushopt, rdtscp, rdpid, f16c, pku, ospke, cet_ss
CPU Model and flags from /proc/cpuinfo:
model name	: AMD Ryzen 9 6900HS with Radeon Graphics
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf rapl pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 invpcid cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local user_shstk clzero irperf xsaveerptr rdpru wbnoinvd cppc arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip pku ospke vaes vpclmulqdq rdpid overflow_recov succor smca debug_swap

Online cpus: 0-15
Offline cpus: 
BIOS frequency limitation: <Not Available>
Frequency switch latency (ns): 0
Available cpu frequencies: <Not Available>
Current governor: powersave
Core performance/turbo boost: <Not Available>

Memory: 4k page, physical 32074664k(24714568k free), swap 8388604k(8388604k free)
Page Sizes: 4k

vm_info: OpenJDK 64-Bit Server VM (21.0.5+11-Ubuntu-1ubuntu124.04) for linux-amd64 JRE (21.0.5+11-Ubuntu-1ubuntu124.04), built on 2024-10-22T07:47:02Z by "buildd" with gcc 13.2.0

END.
