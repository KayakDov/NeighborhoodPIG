#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x000077738e6327ba, pid=16920, tid=16925
#
# JRE version: OpenJDK Runtime Environment (21.0.5+11) (build 21.0.5+11-Ubuntu-1ubuntu124.04)
# Java VM: OpenJDK 64-Bit Server VM (21.0.5+11-Ubuntu-1ubuntu124.04, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)
# Problematic frame:
# C  [libcuda.so.1+0x2327ba]
#
# Core dump will be written. Default location: Core dumps may be processed with "/usr/share/apport/apport -p%p -s%s -c%c -d%d -P%P -u%u -g%g -- %E" (or dumping to /home/dov/projects/NeighborhoodPIG/core.16920)
#
# If you would like to submit a bug report, please visit:
#   https://bugs.launchpad.net/ubuntu/+source/openjdk-21
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: -Dfile.encoding=UTF-8 --module-path=/home/dov/projects/NeighborhoodPIG/build/classes main.TestStuff

Host: AMD Ryzen 9 6900HS with Radeon Graphics, 16 cores, 30G, Ubuntu 24.04.1 LTS
Time: Tue Nov 26 20:44:43 2024 IST elapsed time: 0.494305 seconds (0d 0h 0m 0s)

---------------  T H R E A D  ---------------

Current thread (0x00007773c401a0a0):  JavaThread "main"             [_thread_in_native, id=16925, stack(0x00007773c9300000,0x00007773c9400000) (1024K)]

Stack: [0x00007773c9300000,0x00007773c9400000],  sp=0x00007773c93fdac0,  free space=1014k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [libcuda.so.1+0x2327ba]
C  [libcuda.so.1+0x4e22e7]
C  [libcuda.so.1+0x141496]
C  [libcuda.so.1+0x1419b0]
C  [libcuda.so.1+0x142707]
C  [libcuda.so.1+0x2ec0e1]
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
J 437  jcuda.runtime.JCuda.cudaMemcpyAsyncNative(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I (0 bytes) @ 0x00007773b43c293c [0x00007773b43c28a0+0x000000000000009c]
J 519 c2 JCudaWrapper.array.DArray.get(LJCudaWrapper/resourceManagement/Handle;[DIII)V (26 bytes) @ 0x00007773b43d6b44 [0x00007773b43d5f40+0x0000000000000c04]
j  JCudaWrapper.array.DArray.get(LJCudaWrapper/resourceManagement/Handle;[DIIIII)V+56
j  JCudaWrapper.algebra.Vector.toArray()[D+27
j  JCudaWrapper.algebra.VectorsStride.lambda$copyToCPURows$1(I)[D+5
j  JCudaWrapper.algebra.VectorsStride$$Lambda+0x000077734400c548.apply(I)Ljava/lang/Object;+5
j  java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V+17 java.base@21.0.5
j  JCudaWrapper.algebra.VectorsStride.copyToCPURows()[[D+15
j  JCudaWrapper.algebra.VectorsStride.toString()Ljava/lang/String;+1
j  JCudaWrapper.algebra.Matrix.toString()Ljava/lang/String;+4
j  java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;+11 java.base@21.0.5
j  java.io.PrintStream.println(Ljava/lang/Object;)V+1 java.base@21.0.5
j  main.TestStuff.main([Ljava/lang/String;)V+27
v  ~StubRoutines::call_stub 0x00007773b3c5fcc6

siginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x00000000001fffe0

Registers:
RAX=0x0000000000000001, RBX=0x00007773c93fe0f8, RCX=0x0000000000000001, RDX=0x0000000000000005
RSP=0x00007773c93fdac0, RBP=0x00007773c93fdae0, RSI=0x00000000001fff90, RDI=0x00007773c56743c0
R8 =0x0000000000000002, R9 =0x0000000000000000, R10=0x0000000000000000, R11=0x0000000000000246
R12=0x00007773c93fdf68, R13=0x00007773c93fe0f8, R14=0x00007773c93fdf68, R15=0x0000000000000001
RIP=0x000077738e6327ba, EFLAGS=0x0000000000010202, CSGSFS=0x002b000000000033, ERR=0x0000000000000004
  TRAPNO=0x000000000000000e


Register to memory mapping:

RAX=0x0000000000000001 is an unknown value
RBX=0x00007773c93fe0f8 is pointing into the stack for thread: 0x00007773c401a0a0
RCX=0x0000000000000001 is an unknown value
RDX=0x0000000000000005 is an unknown value
RSP=0x00007773c93fdac0 is pointing into the stack for thread: 0x00007773c401a0a0
RBP=0x00007773c93fdae0 is pointing into the stack for thread: 0x00007773c401a0a0
RSI=0x00000000001fff90 is an unknown value
RDI=0x00007773c56743c0 points into unknown readable memory: 0x00000007773c5674 | 74 56 3c 77 07 00 00 00
R8 =0x0000000000000002 is an unknown value
R9 =0x0 is null
R10=0x0 is null
R11=0x0000000000000246 is an unknown value
R12=0x00007773c93fdf68 is pointing into the stack for thread: 0x00007773c401a0a0
R13=0x00007773c93fe0f8 is pointing into the stack for thread: 0x00007773c401a0a0
R14=0x00007773c93fdf68 is pointing into the stack for thread: 0x00007773c401a0a0
R15=0x0000000000000001 is an unknown value

Top of Stack: (sp=0x00007773c93fdac0)
0x00007773c93fdac0:   00007773c481f510 0000000000000000
0x00007773c93fdad0:   00007773c463eef0 00007773c481f510
0x00007773c93fdae0:   00007773c93fdd10 000077738e8e22e7
0x00007773c93fdaf0:   00007772dce1e240 0000000000000000
0x00007773c93fdb00:   0000000000000000 00007773c93fdba0
0x00007773c93fdb10:   0000777300000000 0000000000000000
0x00007773c93fdb20:   0000000200000000 00007773c481f510
0x00007773c93fdb30:   00007773c481f510 00000005c481f510
0x00007773c93fdb40:   00007773c481f510 00007773c463eef0
0x00007773c93fdb50:   00007773c463eef0 0000000000000000
0x00007773c93fdb60:   0000000000000001 0000000000000000
0x00007773c93fdb70:   00007773c481f510 000077738e63562d
0x00007773c93fdb80:   00007773c93fdd48 00017773c93fdd30
0x00007773c93fdb90:   00007773c93fdbc0 0000000000000000
0x00007773c93fdba0:   0000000000000001 0000000000000000
0x00007773c93fdbb0:   0000000000000000 0000000000000000
0x00007773c93fdbc0:   0000000000000000 00007773c481f510
0x00007773c93fdbd0:   0000000000000000 00007773c93fdf68
0x00007773c93fdbe0:   0000000000000101 00007773c481f510
0x00007773c93fdbf0:   00007773c47b1fe0 0000000000000003
0x00007773c93fdc00:   0000000000000000 000077738e540fd6
0x00007773c93fdc10:   0000000000000001 000077738e541496
0x00007773c93fdc20:   0000000089e92878 00007773c463eef0
0x00007773c93fdc30:   00007773c93fde50 00007773c463eef0
0x00007773c93fdc40:   0000777300000001 0000000000000000
0x00007773c93fdc50:   00007773c481f510 00007773c481f510
0x00007773c93fdc60:   00007773c481f510 00007773c463eef0
0x00007773c93fdc70:   00007773c463eef0 0000000000000000
0x00007773c93fdc80:   0000000000000001 0000000000000000
0x00007773c93fdc90:   00007773c481f510 000077738e63562d
0x00007773c93fdca0:   00007773c463ef08 05843a79fa14de00
0x00007773c93fdcb0:   00007773c93fdd00 00007773c463eef0 

Instructions: (pc=0x000077738e6327ba)
0x000077738e6326ba:   00 02 00 00 00 48 83 c4 08 31 c0 5b 41 5c 41 5d
0x000077738e6326ca:   5d c3 0f 1f 40 00 48 8b 42 48 0f b6 80 09 01 00
0x000077738e6326da:   00 83 e0 7e 3c 1e 0f 94 c0 e9 ff fe ff ff 0f 1f
0x000077738e6326ea:   84 00 00 00 00 00 4d 8b ad 68 01 00 00 e9 56 ff
0x000077738e6326fa:   ff ff 0f 1f 40 00 48 89 df e8 78 fc ff ff 89 83
0x000077738e63270a:   a4 00 00 00 83 f8 ff 0f 85 10 ff ff ff eb 9c 31
0x000077738e63271a:   c0 e9 a8 fe ff ff 31 c0 48 83 3e 00 0f 84 14 01
0x000077738e63272a:   00 00 55 48 89 e5 41 54 53 48 89 f3 48 83 ec 10
0x000077738e63273a:   48 83 7e 08 00 0f 84 e8 00 00 00 48 83 7e 10 00
0x000077738e63274a:   0f 84 dd 00 00 00 8b 07 49 89 fc 89 c1 83 f8 02
0x000077738e63275a:   0f 84 98 00 00 00 85 c0 0f 84 18 02 00 00 83 f8
0x000077738e63276a:   01 0f 85 9f 01 00 00 48 8b 77 20 48 85 f6 0f 84
0x000077738e63277a:   ca 00 00 00 48 83 be 10 02 00 00 00 0f 85 c7 02
0x000077738e63278a:   00 00 48 8b 76 48 48 8b b6 88 02 00 00 48 8b 76
0x000077738e63279a:   08 85 c0 0f 85 05 02 00 00 49 8b 7c 24 18 48 85
0x000077738e6327aa:   f6 0f 95 c0 48 85 ff 0f 95 c1 21 c8 84 c0 74 12
0x000077738e6327ba:   48 8b 76 50 89 55 ec e8 7a d7 15 00 8b 55 ec 48
0x000077738e6327ca:   89 c7 48 85 ff 74 70 48 8b 47 48 48 8b 80 08 01
0x000077738e6327da:   00 00 48 c1 e8 28 83 e0 0e 3c 02 75 05 f6 c2 04
0x000077738e6327ea:   74 3c 41 8b 0c 24 eb 58 66 0f 1f 44 00 00 48 8b
0x000077738e6327fa:   47 60 48 85 c0 0f 84 73 01 00 00 48 8b 40 40 48
0x000077738e63280a:   8b 8f 90 00 00 00 8b 00 48 0f a3 c1 0f 82 5c 01
0x000077738e63281a:   00 00 83 e2 04 0f 85 53 01 00 00 0f 1f 00 b8 01
0x000077738e63282a:   00 00 00 48 83 c4 10 5b 41 5c 5d c3 66 2e 0f 1f
0x000077738e63283a:   84 00 00 00 00 00 c3 41 8b 04 24 0f 1f 00 89 c1
0x000077738e63284a:   83 f9 01 0f 84 6d 01 00 00 0f 87 b7 00 00 00 49
0x000077738e63285a:   8b 4c 24 08 49 8b 84 24 b0 00 00 00 8b 51 70 48
0x000077738e63286a:   39 d0 73 ba 48 8b 33 48 8d 3c 30 48 39 fa 72 ae
0x000077738e63287a:   44 0f b6 41 18 8b 79 10 41 8d 90 6f ff ff ff 83
0x000077738e63288a:   fa 0d 0f 87 ba 01 00 00 8b 51 6c 48 09 f0 83 ea
0x000077738e63289a:   01 48 85 c2 75 88 8b b1 98 00 00 00 31 d2 8d 44
0x000077738e6328aa:   37 ff f7 f6 49 8b 94 24 b8 00 00 00 85 ff 0f 84 


Stack slot to memory mapping:

stack at sp + 0 slots: 0x00007773c481f510 points into unknown readable memory: 0x0000000000000001 | 01 00 00 00 00 00 00 00
stack at sp + 1 slots: 0x0 is null
stack at sp + 2 slots: 0x00007773c463eef0 points into unknown readable memory: 0x0000000100000000 | 00 00 00 00 01 00 00 00
stack at sp + 3 slots: 0x00007773c481f510 points into unknown readable memory: 0x0000000000000001 | 01 00 00 00 00 00 00 00
stack at sp + 4 slots: 0x00007773c93fdd10 is pointing into the stack for thread: 0x00007773c401a0a0
stack at sp + 5 slots: 0x000077738e8e22e7: <offset 0x00000000004e22e7> in /lib/x86_64-linux-gnu/libcuda.so.1 at 0x000077738e400000
stack at sp + 6 slots: 0x00007772dce1e240: <offset 0x000000002161e240> in /usr/local/cuda/lib64/libcublasLt.so.12 at 0x00007772bb800000
stack at sp + 7 slots: 0x0 is null


Compiled method (n/a) 501  437     n 0       jcuda.runtime.JCuda::cudaMemcpyAsyncNative (native)
 total in heap  [0x00007773b43c2710,0x00007773b43c2ad0] = 960
 relocation     [0x00007773b43c2868,0x00007773b43c28a0] = 56
 main code      [0x00007773b43c28a0,0x00007773b43c2ac8] = 552
 oops           [0x00007773b43c2ac8,0x00007773b43c2ad0] = 8

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x000077733845b598} 'cudaMemcpyAsyncNative' '(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I' in 'jcuda/runtime/JCuda'
  # parm0:    rsi:rsi   = 'jcuda/Pointer'
  # parm1:    rdx:rdx   = 'jcuda/Pointer'
  # parm2:    rcx:rcx   = long
  # parm3:    r8        = int
  # parm4:    r9:r9     = 'jcuda/runtime/cudaStream_t'
  #           [sp+0x60]  (sp of caller)
  0x00007773b43c28a0: 448b 5608 | 49bb 0000 | 0043 7377 | 0000 4d03 | d349 3bc2 | 0f84 0600 

  0x00007773b43c28b8: ;   {runtime_call ic_miss_stub}
  0x00007773b43c28b8: 0000 e9c1 | a78e ff90 
[Verified Entry Point]
  0x00007773b43c28c0: 8984 2400 | c0fe ff55 | 488b ec48 | 83ec 5090 | 4181 7f20 | 0100 0000 

  0x00007773b43c28d8: ;   {runtime_call StubRoutines (final stubs)}
  0x00007773b43c28d8: 7405 e8c1 | 0b8d ff4c | 894c 2428 | 4983 f900 | 488d 4424 | 2848 0f44 | 4424 2848 | 8904 244d 
  0x00007773b43c28f8: 8bc8 4c8b | c148 8954 | 2410 4883 | fa00 488d | 4c24 1048 | 0f44 4c24 | 1048 8974 | 2408 4883 
  0x00007773b43c2918: fe00 488d | 5424 0848 | 0f44 5424 

  0x00007773b43c2924: ;   {oop(a 'java/lang/Class'{0x0000000633843310} = 'jcuda/runtime/JCuda')}
  0x00007773b43c2924: 0849 be10 | 3384 3306 | 0000 004c | 8974 2438 | 4c8d 7424 | 3849 8bf6 

  0x00007773b43c293c: ;   {internal_word}
  0x00007773b43c293c: c5f8 7749 | ba3c 293c | b473 7700 | 004d 8997 | a003 0000 | 4989 a798 

  0x00007773b43c2954: ;   {external_word}
  0x00007773b43c2954: 0300 0080 | 3d2f b793 | 1600 0f84 | 3c00 0000 | 5652 5141 

  0x00007773b43c2968: ;   {metadata({method} {0x000077733845b598} 'cudaMemcpyAsyncNative' '(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I' in 'jcuda/runtime/JCuda')}
  0x00007773b43c2968: 5041 5148 | be98 b545 | 3873 7700 | 0049 8bff | 40f6 c40f | 0f84 1200 | 0000 4883 

  0x00007773b43c2984: ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007773b43c2984: ec08 e805 | 771f 1648 | 83c4 08e9 | 0500 0000 

  0x00007773b43c2994: ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x00007773b43c2994: e8f7 761f | 1641 5941 | 5859 5a5e | 498d bfb8 | 0300 0041 | c787 4404 | 0000 0400 

  0x00007773b43c29b0: ;   {runtime_call Java_jcuda_runtime_JCuda_cudaMemcpyAsyncNative}
  0x00007773b43c29b0: 0000 e859 | d3e5 d7c5 | f877 41c7 | 8744 0400 | 0005 0000 | 00f0 8344 | 24c0 0049 | 3baf 4804 
  0x00007773b43c29d0: 0000 0f87 | 0e00 0000 | 4183 bf40 | 0400 0000 | 0f84 2400 | 0000 c5f8 | 7748 8945 | f849 8bff 
  0x00007773b43c29f0: 4c8b e448 | 83ec 0048 

  0x00007773b43c29f8: ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x00007773b43c29f8: 83e4 f0e8 | 501a d615 | 498b e44d | 33e4 488b | 45f8 41c7 | 8744 0400 | 0008 0000 | 0041 83bf 
  0x00007773b43c2a18: c004 0000 | 020f 847f 

  0x00007773b43c2a20: ;   {external_word}
  0x00007773b43c2a20: 0000 0080 | 3d63 b693 | 1600 0f84 | 3600 0000 | 4889 45f8 

  0x00007773b43c2a34: ;   {metadata({method} {0x000077733845b598} 'cudaMemcpyAsyncNative' '(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I' in 'jcuda/runtime/JCuda')}
  0x00007773b43c2a34: 48be 98b5 | 4538 7377 | 0000 498b | ff40 f6c4 | 0f0f 8412 | 0000 0048 

  0x00007773b43c2a4c: ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007773b43c2a4c: 83ec 08e8 | 2c77 1f16 | 4883 c408 | e905 0000 

  0x00007773b43c2a5c: ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x00007773b43c2a5c: 00e8 1e77 | 1f16 488b | 45f8 49c7 | 8798 0300 | 0000 0000 | 0049 c787 | a003 0000 | 0000 0000 
  0x00007773b43c2a7c: c5f8 7749 | 8b8f 2804 | 0000 c781 | 0001 0000 | 0000 0000 | c949 837f | 0800 0f85 | 0100 0000 
  0x00007773b43c2a9c: ;   {runtime_call StubRoutines (initial stubs)}
  0x00007773b43c2a9c: c3e9 5ed1 | 89ff c5f8 | 7748 8945 | f84c 8be4 | 4883 ec00 | 4883 e4f0 

  0x00007773b43c2ab4: ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x00007773b43c2ab4: e837 861f | 1649 8be4 | 4d33 e448 | 8b45 f8e9 | 5bff ffff 
[/MachCode]


Compiled method (c2) 512  519       4       JCudaWrapper.array.DArray::get (26 bytes)
 total in heap  [0x00007773b43d5c10,0x00007773b43da670] = 19040
 relocation     [0x00007773b43d5d68,0x00007773b43d5f38] = 464
 main code      [0x00007773b43d5f40,0x00007773b43d8088] = 8520
 stub code      [0x00007773b43d8088,0x00007773b43d80b0] = 40
 oops           [0x00007773b43d80b0,0x00007773b43d8110] = 96
 metadata       [0x00007773b43d8110,0x00007773b43d8400] = 752
 scopes data    [0x00007773b43d8400,0x00007773b43d9ff0] = 7152
 scopes pcs     [0x00007773b43d9ff0,0x00007773b43da470] = 1152
 dependencies   [0x00007773b43da470,0x00007773b43da4e0] = 112
 handler table  [0x00007773b43da4e0,0x00007773b43da618] = 312
 nul chk table  [0x00007773b43da618,0x00007773b43da670] = 88

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x0000777338481890} 'get' '(LJCudaWrapper/resourceManagement/Handle;[DIII)V' in 'JCudaWrapper/array/DArray'
  # this:     rsi:rsi   = 'JCudaWrapper/array/DArray'
  # parm0:    rdx:rdx   = 'JCudaWrapper/resourceManagement/Handle'
  # parm1:    rcx:rcx   = '[D'
  # parm2:    r8        = int
  # parm3:    r9        = int
  # parm4:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x00007773b43d5f40: 448b 5608 | 49bb 0000 | 0043 7377 | 0000 4d03 | d349 3bc2 

  0x00007773b43d5f54: ;   {runtime_call ic_miss_stub}
  0x00007773b43d5f54: 0f85 2671 | 8dff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x00007773b43d5f60: 8984 2400 | c0fe ff55 | 4883 ec60 | 4181 7f20 | 0100 0000 | 0f85 0421 | 0000 897c | 241c 4489 
  0x00007773b43d5f80: 4c24 3044 | 8944 2418 | 4889 4c24 | 2848 8954 | 2410 4889 | 7424 204d | 8b87 b801 | 0000 4d8b 
  0x00007773b43d5fa0: d049 83c2 | 184d 3b97 | c801 0000 | 0f83 7d0e | 0000 4d89 | 97b8 0100 | 0041 0f18 | 8200 0100 
  0x00007773b43d5fc0: 0049 c700 | 0100 0000 | 410f 1882 | 4001 0000 

  0x00007773b43d5fd0: ;   {metadata('java/lang/Object'[])}
  0x00007773b43d5fd0: 41c7 4008 | 4012 0000 | 410f 1882 | 8001 0000 | 41c7 400c | 0100 0000 | 4589 6014 | 4c8b 5424 
  0x00007773b43d5ff0: 284d 8bda | 49c1 eb03 | 4589 5810 | 498b afb8 | 0100 004c | 8bd5 4983 | c228 4d3b | 97c8 0100 
  0x00007773b43d6010: 000f 8345 | 0e00 004d | 8997 b801 | 0000 410f | 1882 0001 | 0000 48c7 | 4500 0100 

  0x00007773b43d602c: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007773b43d602c: 0000 c745 | 08d0 a00e | 0044 8965 | 0c44 8965 | 2448 c745 | 10ff ffff | ff4d 8bd8 | 49c1 eb03 
  0x00007773b43d604c: 49ba 0100 | 0000 5044 | 0000 4c89 | 5518 4489 | 5d20 498b | 9fb8 0100 | 004c 8bd3 | 4983 c238 
  0x00007773b43d606c: 4d3b 97c8 | 0100 000f | 8314 0e00 | 004d 8997 | b801 0000 | 410f 1882 | 0001 0000 | 48c7 0301 
  0x00007773b43d608c: ;   {metadata('java/util/stream/ReferencePipeline$Head')}
  0x00007773b43d608c: 0000 00c7 | 4308 201b | 0e00 4489 | 630c 4c89 | 6310 4c89 | 6318 4c89 | 6320 4489 | 632c 4c89 
  0x00007773b43d60ac: 6330 4c8b | dd49 c1eb | 0344 895b | 284c 8bd5 | 488b eb48 | c1ed 034c | 8bdb 4d33 | d349 c1ea 
  0x00007773b43d60cc: 164d 85d2 | 741a 49c1 | eb09 48bf | 00c0 74a7 | 7377 0000 | 4903 fb80 | 3f02 0f85 | da0b 0000 
  0x00007773b43d60ec: 4180 7f40 | 000f 858a | 0a00 0089 | 6b1c 4488 | 631a 0fb6 | 6b18 c743 | 0c50 0000 | 00c7 4314 
  0x00007773b43d610c: 5f00 0000 | 4489 6310 | 85ed 0f85 | cc16 0000 | 448b 4b28 | c643 1801 

  0x00007773b43d6124: ; implicit exception: dispatches to 0x00007773b43d7f00
  0x00007773b43d6124: 478b 74cc | 0841 807f | 4000 0f85 | 840a 0000 | 4489 6328 | c743 146f 

  0x00007773b43d613c: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x00000006338432c0})}
  0x00007773b43d613c: 0000 0149 | bac0 3284 | 3306 0000 | 0041 0fb6 | 6a19 85ed | 0f84 c216 

  0x00007773b43d6154: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x00000006338432e0})}
  0x00007773b43d6154: 0000 49ba | e032 8433 | 0600 0000 | 458b 4224 | 458b 521c | 4181 e06f | 0000 0145 | 3bc2 0f85 
  0x00007773b43d6174: 1414 0000 | 4f8d 04cc 

  0x00007773b43d617c: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007773b43d617c: 4181 fef8 | 9204 010f | 848b 0000 

  0x00007773b43d6188: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007773b43d6188: 0041 81fe | d0a0 0e00 | 0f85 c618 | 0000 418b | 681c 83e5 | 4085 ed0f | 849f 1b00 | 004d 8b50 
  0x00007773b43d61a8: 104d 85d2 | 0f8c 7e00 | 0000 4533 | db4d 3bd3 | bdff ffff | ff7c 0840 | 0f95 c540 | 0fb6 edbe 
  0x00007773b43d61c8: 45ff ffff | 4c8b 5424 | 204c 8914 | 244c 8b54 | 2410 4c89 | 5424 0844 | 8b54 2418 | 4489 5424 
  0x00007773b43d61e8: 1044 8b5c | 2430 4489 | 5c24 1448 | ff74 2428 | 488f 4424 | 2048 895c | 2430 4c89 

  0x00007773b43d6204: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d6204: 4424 38e8 

  0x00007773b43d6208: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::estimateSize@6 (line 1042)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d6208: f4cc 8dff 

  0x00007773b43d620c: ;   {other}
  0x00007773b43d620c: 0f1f 8400 | fc05 0000 | 418b 681c | 83e5 4085 | ed0f 840d | 1900 004d | 8b50 104d | 85d2 0f8d 
  0x00007773b43d622c: 5019 0000 | 4f8d 14cc | 458b 4208 

  0x00007773b43d6238: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007773b43d6238: 4181 f8d0 | a00e 000f | 859f 1200 | 0049 8bda | 8b7b 2045 | 8b5c fc0c 

  0x00007773b43d6250: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x00000006338432c0})}
  0x00007773b43d6250: 49b8 c032 | 8433 0600 | 0000 450f | b648 1845 | 85c9 0f84 | 6811 0000 | 8b73 184d | 8d14 fc48 
  0x00007773b43d6270: b900 c074 | a773 7700 | 000f 1f80 | 0000 0000 | 448b 430c | 4585 c00f | 8c17 1200 | 0044 3bc6 
  0x00007773b43d6290: 7c05 4533 | c0eb 2445 | 8d48 0144 | 894b 0c45 | 3bc3 0f83 | dc10 0000 | 438b 6c82 | 1085 ed0f 
  0x00007773b43d62b0: 84ff 1400 | 0041 b801 | 0000 004d | 8b8f 5004 

  0x00007773b43d62c0: ; ImmutableOopMap {r10=Oop rbx=Oop rdi=NarrowOop [16]=Oop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.ReferencePipeline::forEachWithCancel@18 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
                      ;   {poll}
  0x00007773b43d62c0: 0000 4185 | 0145 85c0 | 75b6 4c8b | 5424 2841 | 8b6a 0c4d | 8b9f b801 | 0000 4d8b | d349 83c2 
  0x00007773b43d62e0: 384d 3b97 | c801 0000 | 0f83 be0b | 0000 4d89 | 97b8 0100 | 0041 0f18 | 8200 0100 | 0049 c703 
  0x00007773b43d6300: 0100 0000 

  0x00007773b43d6304: ;   {metadata('java/nio/HeapDoubleBuffer')}
  0x00007773b43d6304: 41c7 4308 | 80bc 0401 | 4d89 6310 | 4589 6318 | 4589 6324 | 4d89 6328 | 4d89 6330 | 41c7 430c 
  0x00007773b43d6324: ffff ffff | 4189 6b1c | 4189 6b20 | 4c8b 5424 | 2849 c1ea | 0345 8953 | 304c 8b54 | 2428 4d8b 
  0x00007773b43d6344: c34d 33d0 | 49c1 ea16 | 48bd 0300 | 0000 5044 | 0000 4d85 | d274 1a49 | c1e8 0948 | bf00 c074 
  0x00007773b43d6364: a773 7700 | 0049 03f8 | 803f 020f | 859f 0900 | 0045 8963 | 284d 8b8f | b801 0000 | 49c7 4310 
  0x00007773b43d6384: 1000 0000 | 4d8b d149 | 83c2 204d | 3b97 c801 | 0000 0f83 | 4e0b 0000 | 4d89 97b8 | 0100 0041 
  0x00007773b43d63a4: 0f18 8200 | 0100 0049 | c701 0100 | 0000 410f | 1882 4001 

  0x00007773b43d63b8: ;   {metadata({type array int})}
  0x00007773b43d63b8: 0000 41c7 | 4108 3826 | 0000 410f | 1882 8001 | 0000 41c7 | 410c 0300 | 0000 4589 | 611c 448b 
  0x00007773b43d63d8: 4424 1845 | 8941 1044 | 8b54 2430 | 4589 5114 | 8b5c 241c | 4189 5918 | 498b bfb8 | 0100 004c 
  0x00007773b43d63f8: 8bd7 4983 | c228 4d3b | 97c8 0100 | 000f 8316 | 0b00 004d | 8997 b801 | 0000 410f | 1882 0001 
  0x00007773b43d6418: 0000 48c7 | 0701 0000 

  0x00007773b43d6420: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007773b43d6420: 00c7 4708 | f892 0401 | 4489 670c | 4489 6724 | 48c7 4710 | ffff ffff | 4889 6f18 | 49c1 e903 
  0x00007773b43d6440: 4489 4f20 | 4d8b 97b8 | 0100 004d | 8bca 4983 | c138 4d3b | 8fc8 0100 | 000f 8344 | 0b00 004d 
  0x00007773b43d6460: 898f b801 | 0000 410f | 1881 0001 | 0000 49c7 | 0201 0000 

  0x00007773b43d6474: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007773b43d6474: 0041 c742 | 08f0 9c04 | 0145 8962 | 0c4d 8962 | 104d 8962 | 184d 8962 | 2045 8962 | 2c4d 8962 
  0x00007773b43d6494: 3048 8bdf | 48c1 eb03 | 4189 5a28 | 4c8b cf49 | 8bea 48c1 | ed03 498b | da4c 33cb | 49c1 e916 
  0x00007773b43d64b4: 4d85 c974 | 1a48 c1eb | 0948 bf00 | c074 a773 | 7700 0048 | 03fb 803f | 020f 859b | 0800 0041 
  0x00007773b43d64d4: 807f 4000 | 0f85 1107 | 0000 4189 | 6a1c 410f | b66a 1841 | c742 0c50 | 0000 0045 | 8862 1a45 
  0x00007773b43d64f4: 8962 1041 | c742 145f | 0000 0085 | ed0f 8561 | 1300 0041 | c642 1801 | 458b 4a28 

  0x00007773b43d6510: ; implicit exception: dispatches to 0x00007773b43d7f48
  0x00007773b43d6510: 438b 5ccc | 0841 807f | 4000 0f85 | 0507 0000 | 4589 6228 

  0x00007773b43d6524: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x00000006338432c0})}
  0x00007773b43d6524: 48bf c032 | 8433 0600 | 0000 0fb6 | 6f19 41c7 | 4214 6f00 | 0001 85ed | 0f84 5613 

  0x00007773b43d6540: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x00000006338432e0})}
  0x00007773b43d6540: 0000 48bf | e032 8433 | 0600 0000 

  0x00007773b43d654c: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x00000006338432e0})}
  0x00007773b43d654c: 8b7f 2448 | bae0 3284 | 3306 0000 | 008b 521c | 81e7 6f00 | 0001 3bfa | 0f85 7210 | 0000 4b8d 
  0x00007773b43d656c: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007773b43d656c: 3ccc 81fb | f892 0401 | 0f84 8600 

  0x00007773b43d6578: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007773b43d6578: 0000 81fb | d0a0 0e00 | 0f85 1e15 | 0000 8b6f | 1c83 e540 | 85ed 0f84 | 0018 0000 | 488b 5f10 
  0x00007773b43d6598: 4885 db7c | 7e45 33c9 | 493b d9bd | ffff ffff | 7c08 400f | 95c5 400f | b6ed be45 | ffff ff4c 
  0x00007773b43d65b8: 8b4c 2420 | 4c89 0c24 | 4c8b 4c24 | 104c 894c | 2408 4489 | 4424 1048 | 8944 24f8 | 8b44 2430 
  0x00007773b43d65d8: 8944 2414 | 488b 4424 | f84c 895c | 2420 4c89 | 5424 3048 | 897c 2438 

  0x00007773b43d65f0: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d65f0: 6666 90e8 

  0x00007773b43d65f4: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::estimateSize@6 (line 1042)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d65f4: 08c9 8dff 

  0x00007773b43d65f8: ;   {other}
  0x00007773b43d65f8: 0f1f 8400 | e809 0002 | 8b6f 1c83 | e540 85ed | 0f84 d615 | 0000 488b | 5f10 4885 | db0f 8d15 
  0x00007773b43d6618: 1600 004b | 8d3c cc44 

  0x00007773b43d6620: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007773b43d6620: 8b4f 0841 | 81f9 f892 | 0401 0f85 | 0018 0000 | 8b47 2041 | 8b5c c40c 

  0x00007773b43d6638: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x00000006338432c0})}
  0x00007773b43d6638: 49ba c032 | 8433 0600 | 0000 450f | b64a 1845 | 85c9 0f84 | bc0d 0000 | 8b57 1849 | 8d34 c466 
  0x00007773b43d6658: 0f1f 8400 | 0000 0000 | 448b 4f0c | 4585 c90f | 8c87 0c00 | 0044 3bca | 7c05 4533 | c9eb 2445 
  0x00007773b43d6678: 8d51 0144 | 8957 0c44 | 3bcb 0f83 | d40b 0000 | 428b 6c8e | 1085 ed0f | 8c8b 0e00 | 0041 b901 
  0x00007773b43d6698: 0000 004d | 8b97 5004 

  0x00007773b43d66a0: ; ImmutableOopMap {r11=Oop rdi=Oop rsi=Oop rax=NarrowOop [16]=Oop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@31 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
                      ;   {poll}
  0x00007773b43d66a0: 0000 4185 | 0245 85c9 | 75b6 4c8b | 5424 2045 | 8b52 0c44 | 8b4c 2430 | 8b7c 241c | 418d 6c39 
  0x00007773b43d66c0: ff41 3bea | 0f8d 1a12 | 0000 4c8b | 5424 2045 | 8b52 1c47 | 0faf 44d4 | 184d 8bb7 | b801 0000 
  0x00007773b43d66e0: 4d8b d649 | 83c2 2849 | 63e8 4d3b | 97c8 0100 | 000f 8336 | 0900 004d | 8997 b801 | 0000 410f 
  0x00007773b43d6700: 1882 0001 | 0000 49c7 | 0601 0000 

  0x00007773b43d670c: ;   {metadata('jcuda/Pointer')}
  0x00007773b43d670c: 0041 c746 | 08f8 3900 | 0145 8966 | 0c4d 8966 | 104d 8966 | 184d 8966 | 2049 896e | 184d 8b8f 
  0x00007773b43d672c: b801 0000 | 4d8b d149 | 83c2 184d | 8bc3 49c1 | e803 4589 | 460c 4d3b | 97c8 0100 | 000f 8341 
  0x00007773b43d674c: 0900 004d | 8997 b801 | 0000 410f | 1882 0001 | 0000 49c7 | 0101 0000 | 0041 0f18 | 8240 0100 
  0x00007773b43d676c: ;   {metadata({type array int})}
  0x00007773b43d676c: 0041 c741 | 0838 2600 | 0041 0f18 | 8280 0100 | 0041 c741 | 0c01 0000 | 0045 8961 | 1444 8b54 
  0x00007773b43d678c: 2430 4589 | 5110 4d8b | 9fb8 0100 | 004d 8bd3 | 4983 c228 | 4d3b 97c8 | 0100 000f | 8347 0900 
  0x00007773b43d67ac: 004d 8997 | b801 0000 | 410f 1882 | 0001 0000 | 49c7 0301 

  0x00007773b43d67c0: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007773b43d67c0: 0000 0041 | c743 08f8 | 9204 0145 | 8963 0c45 | 8963 2449 | c743 10ff | ffff ff49 | ba01 0000 
  0x00007773b43d67e0: 0050 4400 | 004d 8953 | 184d 8bd1 | 49c1 ea03 | 4589 5320 | 4d8b afb8 | 0100 004d | 8bd5 4983 
  0x00007773b43d6800: c238 4d3b | 97c8 0100 | 000f 836f | 0900 004d | 8997 b801 | 0000 410f | 1882 0001 | 0000 49c7 
  0x00007773b43d6820: 4500 0100 

  0x00007773b43d6824: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007773b43d6824: 0000 41c7 | 4508 f09c | 0401 4589 | 650c 4d89 | 6510 4d89 | 6518 4d89 | 6520 4589 | 652c 4d89 
  0x00007773b43d6844: 6530 4d8b | d349 c1ea | 0345 8955 | 284d 8bd3 | 498b dd48 | c1eb 034d | 8bdd 4d33 | d349 c1ea 
  0x00007773b43d6864: 164d 85d2 | 7410 49c1 | eb09 4903 | cb80 3902 | 0f85 6405 | 0000 4180 | 7f40 000f | 85d3 0300 
  0x00007773b43d6884: 0041 895d | 1c41 0fb6 | 6d18 41c7 | 450c 5000 | 0000 4588 | 651a 4589 | 6510 41c7 | 4514 5f00 
  0x00007773b43d68a4: 0000 85ed | 0f85 7e10 | 0000 41c6 | 4518 0145 | 8b5d 2843 | 8b5c dc08 | 4180 7f40 | 000f 85c8 
  0x00007773b43d68c4: 0300 0045 

  0x00007773b43d68c8: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x00000006338432c0})}
  0x00007773b43d68c8: 8965 2849 | bac0 3284 | 3306 0000 | 0041 0fb6 | 6a19 41c7 | 4514 6f00 | 0001 85ed | 0f84 7610 
  0x00007773b43d68e8: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x00000006338432e0})}
  0x00007773b43d68e8: 0000 49ba | e032 8433 | 0600 0000 | 458b 4a24 | 458b 521c | 4181 e16f | 0000 0145 | 3bca 0f85 
  0x00007773b43d6908: 240d 0000 | 4f8d 04dc 

  0x00007773b43d6910: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007773b43d6910: 81fb f892 | 0401 0f84 | 8c00 0000 

  0x00007773b43d691c: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007773b43d691c: 81fb d0a0 | 0e00 0f85 | c411 0000 | 418b 681c | 83e5 4085 | ed0f 84a9 | 1400 004d | 8b50 104d 
  0x00007773b43d693c: 85d2 0f8c | 8000 0000 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007773b43d695c: ffff 4c8b | 5424 104c | 8954 2408 | 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4c89 
  0x00007773b43d697c: 7424 1848 | 8944 24f8 | 8b44 2430 | 8944 2414 | 488b 4424 | f84c 896c | 2430 4c89 

  0x00007773b43d6998: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d6998: 4424 38e8 

  0x00007773b43d699c: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::estimateSize@6 (line 1042)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d699c: 60c5 8dff 

  0x00007773b43d69a0: ;   {other}
  0x00007773b43d69a0: 0f1f 8400 | 900d 0004 | 418b 681c | 83e5 4085 | ed0f 84d9 | 1200 004d | 8b50 104d | 85d2 0f8d 
  0x00007773b43d69c0: 1c13 0000 | 4b8d 0cdc | 448b 5108 

  0x00007773b43d69cc: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007773b43d69cc: 4181 faf8 | 9204 010f | 859b 1400 | 008b 5920 

  0x00007773b43d69dc: ; implicit exception: dispatches to 0x00007773b43d7450
  0x00007773b43d69dc: 458b 54dc 

  0x00007773b43d69e0: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x00000006338432c0})}
  0x00007773b43d69e0: 0c49 bbc0 | 3284 3306 | 0000 0045 | 0fb6 5b18 | 4585 db0f | 8457 0a00 | 0044 8b59 | 1849 8d3c 
  0x00007773b43d6a00: dc0f 1f84 | 0000 0000 | 000f 1f80 | 0000 0000 | 448b 410c | 4585 c00f | 8c23 0900 | 0045 3bc3 
  0x00007773b43d6a20: 7c05 4533 | c9eb 2341 | 8d50 0189 | 510c 453b | c20f 8375 | 0800 0042 | 8b6c 8710 | 85ed 0f8c 
  0x00007773b43d6a40: 100b 0000 | 41b9 0100 | 0000 498b | 9750 0400 | 004c 8b44 

  0x00007773b43d6a54: ; ImmutableOopMap {r8=Oop rcx=Oop rbx=NarrowOop rdi=Oop r14=Oop [16]=Oop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@31 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
                      ;   {poll}
  0x00007773b43d6a54: 2420 8502 | 4585 c975 | b341 8b68 | 0c44 8b5c | 2430 443b | dd0f 8d41 | 0f00 0045 | 8b50 1c47 
  0x00007773b43d6a74: 8b4c d418 | 8b4c 2430 | 410f afc9 | 458b 5818 | 4c63 c145 | 85db 0f84 | fc09 0000 | 498b 97b8 
  0x00007773b43d6a94: 0100 004c | 8bd2 4983 | c228 4d3b | 97c8 0100 | 000f 835b | 0700 004d | 8997 b801 | 0000 410f 
  0x00007773b43d6ab4: 1882 0001 | 0000 48c7 | 0201 0000 

  0x00007773b43d6ac0: ;   {metadata('jcuda/driver/CUdeviceptr')}
  0x00007773b43d6ac0: 00c7 4208 | 90a7 0001 | 4489 620c | 4c89 6210 | 4c89 6218 | 4c89 6220 | 4f03 44dc | 184c 8942 
  0x00007773b43d6ae0: 1847 8b44 | dc20 4489 | 4220 4f8b | 54dc 104c | 8952 1047 | 8b5c dc0c | 4489 5a0c | 4c8b 5c24 
  0x00007773b43d6b00: 1041 0fb6 | 6b0c 458b | d144 8b4c | 241c 450f | afca 4963 | c985 ed0f | 84c7 0e00 | 0041 8b6b 
  0x00007773b43d6b20: 2085 ed0f | 85db 0e00 | 0045 8b53 | 1c4d 8bca | 49c1 e103 | 41b8 0200 | 0000 498b 

  0x00007773b43d6b3c: ;   {static_call}
  0x00007773b43d6b3c: f666 90e8 

  0x00007773b43d6b40: ; ImmutableOopMap {}
                      ;*invokestatic cudaMemcpyAsyncNative {reexecute=0 rethrow=0 return_oop=0}
                      ; - jcuda.runtime.JCuda::cudaMemcpyAsync@7 (line 5696)
                      ; - JCudaWrapper.array.Array::get@73 (line 248)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d6b40: 7cbd feff 

  0x00007773b43d6b44: ;   {other}
  0x00007773b43d6b44: 0f1f 8400 | 340f 0006 

  0x00007773b43d6b4c: ;   {oop(a 'java/lang/Class'{0x0000000633843310} = 'jcuda/runtime/JCuda')}
  0x00007773b43d6b4c: 49ba 1033 | 8433 0600 | 0000 410f | b6aa 7d01 | 0000 85ed | 0f85 c60e | 0000 85c0 | 0f85 d60e 
  0x00007773b43d6b6c: 0000 4883 

  0x00007773b43d6b70: ;   {poll_return}
  0x00007773b43d6b70: c460 5d49 | 3ba7 4804 | 0000 0f87 | e814 0000 | c344 8b5b | 1c45 85db | 0f84 69f5 | ffff 4d8b 
  0x00007773b43d6b90: 5728 498b | fb48 c1e7 | 034d 85d2 | 0f84 ee0a | 0000 4d8b | 5f38 4b89 | 7c13 f849 | 83c2 f84d 
  0x00007773b43d6bb0: 8957 28e9 | 3ff5 ffff | 448b 5328 | 4585 d20f | 846f f5ff | ff4d 8b5f | 2849 8bfa | 48c1 e703 
  0x00007773b43d6bd0: 4d85 db0f | 84d4 0a00 | 004d 8b57 | 384b 897c | 1af8 4983 | c3f8 4d89 | 5f28 e945 | f5ff ff41 
  0x00007773b43d6bf0: 8b5a 1c85 | db0f 84e3 | f8ff ff4d | 8b4f 2848 | 8bfb 48c1 | e703 4d85 | c90f 84c7 | 0a00 0049 
  0x00007773b43d6c10: 8b5f 384a | 897c 0bf8 | 4983 c1f8 | 4d89 4f28 | e9b9 f8ff | ff41 8b7a | 2885 ff0f | 84ef f8ff 
  0x00007773b43d6c30: ff49 8b57 | 2848 c1e7 | 0348 85d2 | 0f84 d30a | 0000 498b | 7738 4889 | 7c16 f848 | 83c2 f849 
  0x00007773b43d6c50: 8957 28e9 | c8f8 ffff | 458b 551c | 4585 d20f | 8420 fcff | ff4d 8b5f | 2849 8bfa | 48c1 e703 
  0x00007773b43d6c70: ;   {no_reloc}
  0x00007773b43d6c70: 4d85 db0f | 84e5 0a00 | 004d 8b57 | 384b 897c | 1af8 4983 | c3f8 4d89 | 5f28 e9f6 | fbff ff45 
  0x00007773b43d6c90: 8b45 2845 | 85c0 0f84 | 2bfc ffff | 4d8b 5728 | 498b f848 | c1e7 034d | 85d2 0f84 | cb0a 0000 
  0x00007773b43d6cb0: 4d8b 4738 | 4b89 7c10 | f849 83c2 | f84d 8957 | 28e9 01fc | ffff 4d8b | 5748 4d8b | 5f58 f083 
  0x00007773b43d6cd0: 4424 c000 | 803f 000f | 840f f4ff | ff44 8827 | 4d85 d275 | 1d49 8bf7 | 49ba 70f6 | fac9 7377 
  0x00007773b43d6cf0: 0000 41ff 

  0x00007773b43d6cf4: ;   {other}
  0x00007773b43d6cf4: d20f 1f84 | 0000 0000 | 00e9 eaf3 | ffff 4b89 | 7c13 f849 | 83c2 f84d | 8957 48e9 | d8f3 ffff 
  0x00007773b43d6d14: 4d8b 5758 | 4d8b 4748 | f083 4424 | c000 803f | 000f 844a | f6ff ff44 | 8827 4d85 | c075 294d 
  0x00007773b43d6d34: 8beb 488b | d949 8bf7 | 49ba 70f6 | fac9 7377 | 0000 41ff 

  0x00007773b43d6d48: ;   {other}
  0x00007773b43d6d48: d20f 1f84 | 0000 0000 | 0048 8bcb | 4d8b dde9 | 19f6 ffff | 4b89 7c02 | f849 83c0 | f84d 8947 
  0x00007773b43d6d68: 48e9 07f6 | ffff 4d8b | 4f48 498b | 5f58 f083 | 4424 c000 | 803f 000f | 844e f7ff | ff44 8827 
  0x00007773b43d6d88: 4d85 c975 | 3f4c 8954 | 2428 4c89 | 5c24 0848 | 890c 2441 | 8bd8 498b | f749 ba70 | f6fa c973 
  0x00007773b43d6da8: 7700 0041 

  0x00007773b43d6dac: ;   {other}
  0x00007773b43d6dac: ffd2 0f1f | 8400 0000 | 0000 448b | c348 8b0c | 244c 8b5c | 2408 4c8b | 5424 28e9 | 07f7 ffff 
  0x00007773b43d6dcc: 4a89 7c0b | f849 83c1 | f84d 894f | 48e9 f5f6 | ffff 4d8b | 5748 4d8b | 5f58 f083 | 4424 c000 
  0x00007773b43d6dec: 8039 000f | 8485 faff | ff44 8821 | 4d85 d275 | 2048 8bf9 | 498b f749 | ba70 f6fa | c973 7700 
  0x00007773b43d6e0c: 0041 ffd2 

  0x00007773b43d6e10: ;   {other}
  0x00007773b43d6e10: 0f1f 8400 | 0000 0000 | e95d faff | ff4b 894c | 13f8 4983 | c2f8 4d89 | 5748 e94b 

  0x00007773b43d6e2c: ;   {metadata('java/lang/Object'[])}
  0x00007773b43d6e2c: faff ff48 | be40 1200 | 4373 7700 | 00ba 0100 | 0000 4c8b | 5424 2049 

  0x00007773b43d6e44: ;   {runtime_call _new_array_Java}
  0x00007773b43d6e44: 8bea 90e8 

  0x00007773b43d6e48: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - JCudaWrapper.array.DArray::get@1 (line 133)
  0x00007773b43d6e48: 345d 9aff 

  0x00007773b43d6e4c: ;   {other}
  0x00007773b43d6e4c: 0f1f 8400 | 3c12 0007 | 4c8b c0e9 | 90f1 ffff 

  0x00007773b43d6e5c: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x00007773b43d6e5c: 48be d0a0 | 0e43 7377 | 0000 488b | 6c24 204c | 8944 2440 

  0x00007773b43d6e70: ;   {runtime_call _new_instance_Java}
  0x00007773b43d6e70: 6666 90e8 

  0x00007773b43d6e74: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop [64]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.Spliterators::spliterator@13 (line 178)
                      ; - java.util.Arrays::spliterator@6 (line 5396)
                      ; - java.util.Arrays::stream@3 (line 5547)
                      ; - java.util.Arrays::stream@4 (line 5528)
                      ; - JCudaWrapper.array.Array::checkNull@1 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d6e74: 085a 9aff 

  0x00007773b43d6e78: ;   {other}
  0x00007773b43d6e78: 0f1f 8400 | 6812 0008 | 488b e84c | 8b44 2440 | e9b0 f1ff 

  0x00007773b43d6e8c: ;   {metadata('java/util/stream/ReferencePipeline$Head')}
  0x00007773b43d6e8c: ff48 be20 | 1b0e 4373 

  0x00007773b43d6e94: ;   {runtime_call _new_instance_Java}
  0x00007773b43d6e94: 7700 00e8 

  0x00007773b43d6e98: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.StreamSupport::stream@5 (line 69)
                      ; - java.util.Arrays::stream@7 (line 5547)
                      ; - java.util.Arrays::stream@4 (line 5528)
                      ; - JCudaWrapper.array.Array::checkNull@1 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d6e98: e459 9aff 

  0x00007773b43d6e9c: ;   {other}
  0x00007773b43d6e9c: 0f1f 8400 | 8c12 0009 | 488b d8e9 | 02f2 ffff | 4889 4c24 | 0848 ff74 | 2428 488f 

  0x00007773b43d6eb8: ;   {metadata('java/nio/HeapDoubleBuffer')}
  0x00007773b43d6eb8: 0424 48be | 80bc 0444 | 7377 0000 

  0x00007773b43d6ec4: ;   {runtime_call _new_instance_Java}
  0x00007773b43d6ec4: 6666 90e8 

  0x00007773b43d6ec8: ; ImmutableOopMap {[0]=Oop [16]=Oop [32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.nio.DoubleBuffer::wrap@0 (line 436)
                      ; - java.nio.DoubleBuffer::wrap@4 (line 465)
                      ; - jcuda.Pointer::to@5 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x00007773b43d6ec8: b459 9aff 

  0x00007773b43d6ecc: ;   {other}
  0x00007773b43d6ecc: 0f1f 8400 | bc12 000a | 48ff 3424 | 488f 4424 | 2848 8b4c | 2408 4c8b | d8e9 36f4 | ffff 4c89 
  0x00007773b43d6eec: 5c24 0848 

  0x00007773b43d6ef0: ;   {metadata({type array int})}
  0x00007773b43d6ef0: 890c 2448 | be38 2600 | 4373 7700 | 00ba 0300 

  0x00007773b43d6f00: ;   {runtime_call _new_array_Java}
  0x00007773b43d6f00: 0000 90e8 

  0x00007773b43d6f04: ; ImmutableOopMap {[8]=Oop [16]=Oop [32]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - JCudaWrapper.array.Array::get@1 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d6f04: 785c 9aff 

  0x00007773b43d6f08: ;   {other}
  0x00007773b43d6f08: 0f1f 8400 | f812 000b | 488b 0c24 | 4c8b 5c24 | 084c 8bc8 | e9b5 f4ff | ff4c 894c | 2440 4c89 
  0x00007773b43d6f28: 5c24 3848 | 894c 2428 | 895c 2408 | 4889 4424 | f88b 4424 | 3089 4424 | 0448 8b44 | 24f8 4489 
  0x00007773b43d6f48: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007773b43d6f48: 0424 48be | f892 0444 | 7377 0000 

  0x00007773b43d6f54: ;   {runtime_call _new_instance_Java}
  0x00007773b43d6f54: 6666 90e8 

  0x00007773b43d6f58: ; ImmutableOopMap {[16]=Oop [32]=Oop [56]=Oop [64]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.Spliterators::spliterator@13 (line 240)
                      ; - java.util.Arrays::spliterator@6 (line 5435)
                      ; - java.util.Arrays::stream@3 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d6f58: 2459 9aff 

  0x00007773b43d6f5c: ;   {other}
  0x00007773b43d6f5c: 0f1f 8400 | 4c13 000c | 448b 0424 | 4889 4424 | f88b 4424 | 0489 4424 | 3048 8b44 | 24f8 4889 
  0x00007773b43d6f7c: 4424 f88b | 4424 0889 | 4424 1c48 | 8b44 24f8 | 488b 4c24 | 284c 8b5c | 2438 4c8b | 4c24 4048 
  0x00007773b43d6f9c: 8bf8 e98d | f4ff ff48 | 897c 2438 | 4c89 5c24 | 2848 894c | 2408 4889 | 4424 f88b | 4424 1c89 
  0x00007773b43d6fbc: 4424 0448 | 8b44 24f8 | 4889 4424 | f88b 4424 | 3089 0424 | 488b 4424 | f841 8be8 

  0x00007773b43d6fd8: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007773b43d6fd8: 48be f09c | 0444 7377 

  0x00007773b43d6fe0: ;   {runtime_call _new_instance_Java}
  0x00007773b43d6fe0: 0000 90e8 

  0x00007773b43d6fe4: ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.StreamSupport::intStream@0 (line 138)
                      ; - java.util.Arrays::stream@7 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d6fe4: 9858 9aff 

  0x00007773b43d6fe8: ;   {other}
  0x00007773b43d6fe8: 0f1f 8400 | d813 000d | 448b c548 | 8944 24f8 | 8b04 2489 | 4424 3048 | 8b44 24f8 | 4889 4424 
  0x00007773b43d7008: f88b 4424 | 0489 4424 | 1c48 8b44 | 24f8 488b | 4c24 084c | 8b5c 2428 | 488b 7c24 | 384c 8bd0 
  0x00007773b43d7028: e968 f4ff | ff4c 895c | 2438 4889 | 4c24 2848 | 8944 24f8 | 8b44 241c | 8944 240c | 488b 4424 
  0x00007773b43d7048: f848 ff74 | 2420 488f 

  0x00007773b43d7050: ;   {metadata('jcuda/Pointer')}
  0x00007773b43d7050: 0424 48be | f839 0044 | 7377 0000 

  0x00007773b43d705c: ;   {runtime_call _new_instance_Java}
  0x00007773b43d705c: 6666 90e8 

  0x00007773b43d7060: ; ImmutableOopMap {[0]=Oop [16]=Oop [32]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jcuda.Pointer::withByteOffset@0 (line 516)
                      ; - JCudaWrapper.array.Array::get@48 (line 249)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7060: 1c58 9aff 

  0x00007773b43d7064: ;   {other}
  0x00007773b43d7064: 0f1f 8400 | 5414 000e | 4889 4424 | f88b 4424 | 0c89 4424 | 1c48 8b44 | 24f8 488b | 4c24 284c 
  0x00007773b43d7084: 8b5c 2438 | 4c8b f0e9 | 95f6 ffff | 4c89 7424 | 2848 894c | 2408 4889 | 4424 f88b | 4424 1c89 
  0x00007773b43d70a4: 4424 0448 | 8b44 24f8 | 488b 6c24 

  0x00007773b43d70b0: ;   {metadata({type array int})}
  0x00007773b43d70b0: 2048 be38 | 2600 4373 | 7700 00ba | 0100 0000 

  0x00007773b43d70c0: ;   {runtime_call _new_array_Java}
  0x00007773b43d70c0: 6666 90e8 

  0x00007773b43d70c4: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - JCudaWrapper.array.Array::pointer@1 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d70c4: b85a 9aff 

  0x00007773b43d70c8: ;   {other}
  0x00007773b43d70c8: 0f1f 8400 | b814 000f | 4889 4424 | f88b 4424 | 0489 4424 | 1c48 8b44 | 24f8 488b | 4c24 084c 
  0x00007773b43d70e8: 8b74 2428 | 4c8b c8e9 | 95f6 ffff | 4c89 4c24 | 384c 8974 | 2428 4889 | 4c24 0848 | 8944 24f8 
  0x00007773b43d7108: 8b44 241c | 8944 2404 | 488b 4424 | f848 8944 | 24f8 8b44 | 2430 8904 | 2448 8b44 | 24f8 488b 
  0x00007773b43d7128: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x00007773b43d7128: 6c24 2048 | bef8 9204 | 4473 7700 

  0x00007773b43d7134: ;   {runtime_call _new_instance_Java}
  0x00007773b43d7134: 0066 90e8 

  0x00007773b43d7138: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.Spliterators::spliterator@13 (line 240)
                      ; - java.util.Arrays::spliterator@6 (line 5435)
                      ; - java.util.Arrays::stream@3 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7138: 4457 9aff 

  0x00007773b43d713c: ;   {other}
  0x00007773b43d713c: 0f1f 8400 | 2c15 0010 | 4889 4424 | f88b 0424 | 8944 2430 | 488b 4424 | f848 8944 | 24f8 8b44 
  0x00007773b43d715c: 2404 8944 | 241c 488b | 4424 f848 | 8b4c 2408 | 4c8b 7424 | 284c 8b4c | 2438 4c8b | d8e9 55f6 
  0x00007773b43d717c: ffff 4c89 | 5c24 384c | 8974 2428 | 4889 4c24 | 0848 8944 | 24f8 8b44 | 241c 8944 | 2404 488b 
  0x00007773b43d719c: 4424 f848 | 8944 24f8 | 8b44 2430 | 8904 2448 | 8b44 24f8 | 488b 6c24 

  0x00007773b43d71b4: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x00007773b43d71b4: 2048 bef0 | 9c04 4473 

  0x00007773b43d71bc: ;   {runtime_call _new_instance_Java}
  0x00007773b43d71bc: 7700 00e8 

  0x00007773b43d71c0: ; ImmutableOopMap {rbp=Oop [16]=Oop [32]=Oop [40]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.StreamSupport::intStream@0 (line 138)
                      ; - java.util.Arrays::stream@7 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d71c0: bc56 9aff 

  0x00007773b43d71c4: ;   {other}
  0x00007773b43d71c4: 0f1f 8400 | b415 0011 | 4889 4424 | f88b 0424 | 8944 2430 | 488b 4424 | f848 8944 | 24f8 8b44 
  0x00007773b43d71e4: 2404 8944 | 241c 488b | 4424 f848 | 8b4c 2408 | 4c8b 7424 | 284c 8b5c | 2438 4c8b | e8e9 40f6 
  0x00007773b43d7204: ffff 4c89 | 4424 3044 | 894c 240c | 4c89 7424 | 284b 8d2c | dc44 895c 

  0x00007773b43d721c: ;   {metadata('jcuda/driver/CUdeviceptr')}
  0x00007773b43d721c: 2418 48be | 90a7 0044 | 7377 0000 | 48ff 7424 | 2048 8f04 

  0x00007773b43d7230: ;   {runtime_call _new_instance_Java}
  0x00007773b43d7230: 2466 90e8 

  0x00007773b43d7234: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [24]=NarrowOop [40]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jcuda.driver.CUdeviceptr::withByteOffset@0 (line 69)
                      ; - JCudaWrapper.array.Array::pointer@35 (line 109)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7234: 4856 9aff 

  0x00007773b43d7238: ;   {other}
  0x00007773b43d7238: 0f1f 8400 | 2816 0012 | 4c8b 7424 | 2844 8b4c | 240c 448b | 5c24 184c | 8b44 2430 | 488b d0e9 
  0x00007773b43d7258: 7cf8 ffff | bee4 ffff | ff4c 8b54 | 2420 498b | ea4c 8b54 | 2410 4c89 | 1424 4489 | 4424 0848 
  0x00007773b43d7278: 8944 24f8 | 8b44 241c | 8944 2410 | 488b 4424 | f848 897c | 2418 4489 | 4c24 144c | 895c 2420 
  0x00007773b43d7298: 8944 2428 

  0x00007773b43d729c: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d729c: 6666 90e8 

  0x00007773b43d72a0: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@46 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d72a0: 5cbc 8dff 

  0x00007773b43d72a4: ;   {other}
  0x00007773b43d72a4: 0f1f 8400 | 9416 0013 | bee4 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007773b43d72c4: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 | 4c24 2044 | 8944 2428 | 895c 242c 
  0x00007773b43d72e4: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d72e4: 6666 90e8 

  0x00007773b43d72e8: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [32]=Oop [44]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@46 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d72e8: 14bc 8dff 

  0x00007773b43d72ec: ;   {other}
  0x00007773b43d72ec: 0f1f 8400 | dc16 0014 | be45 ffff | ff4c 8b54 | 2420 498b | ea4c 8b54 | 2410 4c89 | 1424 4489 
  0x00007773b43d730c: 4424 0848 | 8944 24f8 | 8b44 241c | 8944 2410 | 488b 4424 | f848 897c | 2418 4489 | 4c24 144c 
  0x00007773b43d732c: 895c 2420 

  0x00007773b43d7330: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7330: 6666 90e8 

  0x00007773b43d7334: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::tryAdvance@16 (line 1132)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7334: c8bb 8dff 

  0x00007773b43d7338: ;   {other}
  0x00007773b43d7338: 0f1f 8400 | 2817 0015 | be45 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007773b43d7358: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 | 4c24 2044 | 8944 2428 

  0x00007773b43d7374: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7374: 6666 90e8 

  0x00007773b43d7378: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [32]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::tryAdvance@16 (line 1132)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7378: 84bb 8dff 

  0x00007773b43d737c: ;   {other}
  0x00007773b43d737c: 0f1f 8400 | 6c17 0016 | bee4 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8b5c 2418 
  0x00007773b43d739c: 4489 5c24 | 0844 8b5c | 241c 4489 | 5c24 1048 | 895c 2418 | 4489 4424 | 1448 ff74 | 2428 488f 
  0x00007773b43d73bc: 4424 2089 

  0x00007773b43d73c0: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d73c0: 7c24 28e8 

  0x00007773b43d73c4: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=NarrowOop }
                      ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Spliterators$ArraySpliterator::tryAdvance@45 (line 1033)
                      ; - java.util.stream.ReferencePipeline::forEachWithCancel@13 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d73c4: 38bb 8dff 

  0x00007773b43d73c8: ;   {other}
  0x00007773b43d73c8: 0f1f 8400 | b817 0017 | bebe ffff | ff48 8b6c | 2420 4c8b | 5c24 104c | 891c 2444 | 8b5c 2418 
  0x00007773b43d73e8: 4489 5c24 | 0844 8b5c | 241c 4489 | 5c24 104c | 8954 2420 

  0x00007773b43d73fc: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d73fc: 6666 90e8 

  0x00007773b43d7400: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.ReferencePipeline::forEachWithCancel@8 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d7400: fcba 8dff 

  0x00007773b43d7404: ;   {other}
  0x00007773b43d7404: 0f1f 8400 | f417 0018 | bebe ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8944 2408 
  0x00007773b43d7424: 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4889 | 7c24 184c | 895c 2420 

  0x00007773b43d7440: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7440: 6666 90e8 

  0x00007773b43d7444: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@20 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7444: b8ba 8dff 

  0x00007773b43d7448: ;   {other}
  0x00007773b43d7448: 0f1f 8400 | 3818 0019 | bebe ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007773b43d7468: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 

  0x00007773b43d747c: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d747c: 4c24 20e8 

  0x00007773b43d7480: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@20 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7480: 7cba 8dff 

  0x00007773b43d7484: ;   {other}
  0x00007773b43d7484: 0f1f 8400 | 7418 001a | bef6 ffff | ff49 8be8 

  0x00007773b43d7494: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7494: 6666 90e8 

  0x00007773b43d7498: ; ImmutableOopMap {}
                      ;*invokevirtual withByteOffset {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::pointer@35 (line 109)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7498: 64ba 8dff 

  0x00007773b43d749c: ;   {other}
  0x00007773b43d749c: 0f1f 8400 | 8c18 001b | be45 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8b5c 2418 
  0x00007773b43d74bc: 4489 5c24 | 0844 8b5c | 241c 4489 | 5c24 1048 | 895c 2418 | 4489 4424 

  0x00007773b43d74d4: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d74d4: 1466 90e8 

  0x00007773b43d74d8: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [40]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::tryAdvance@16 (line 1032)
                      ; - java.util.stream.ReferencePipeline::forEachWithCancel@13 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d74d8: 24ba 8dff 

  0x00007773b43d74dc: ;   {other}
  0x00007773b43d74dc: 0f1f 8400 | cc18 001c | be76 ffff | ff48 8b6c | 2420 4c8b | 5c24 104c | 891c 2444 | 8b44 2418 
  0x00007773b43d74fc: 4489 4424 | 0844 8b44 | 241c 4489 | 4424 104c | 8954 2420 

  0x00007773b43d7510: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7510: 6666 90e8 

  0x00007773b43d7514: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.ReferencePipeline::forEachWithCancel@8 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d7514: e8b9 8dff 

  0x00007773b43d7518: ;   {other}
  0x00007773b43d7518: 0f1f 8400 | 0819 001d | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007773b43d7538: 4489 4424 | 1048 897c | 2420 4c89 

  0x00007773b43d7544: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7544: 5c24 28e8 

  0x00007773b43d7548: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::lambda$checkLowerBound$1@2 (line 351)
                      ; - JCudaWrapper.array.Array$$Lambda/0x000077734400a9c8::test@5
                      ; - java.util.stream.MatchOps$2MatchSink::accept@12 (line 119)
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@47 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7548: b4b9 8dff 

  0x00007773b43d754c: ;   {other}
  0x00007773b43d754c: 0f1f 8400 | 3c19 001e | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007773b43d756c: 8944 2410 | 488b 4424 | f84c 8974 | 2418 4889 

  0x00007773b43d757c: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d757c: 4c24 28e8 

  0x00007773b43d7580: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [40]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::lambda$checkLowerBound$1@2 (line 351)
                      ; - JCudaWrapper.array.Array$$Lambda/0x000077734400a9c8::test@5
                      ; - java.util.stream.MatchOps$2MatchSink::accept@12 (line 119)
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@47 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7580: 7cb9 8dff 

  0x00007773b43d7584: ;   {other}
  0x00007773b43d7584: 0f1f 8400 | 7419 001f | be45 ffff | ff48 8b6c | 2420 4c8b | 5c24 104c | 891c 248b | 4c24 1889 
  0x00007773b43d75a4: 4c24 088b | 4c24 1c89 | 4c24 1048 | ff74 2428 | 488f 4424 | 1848 895c | 2420 4489 | 4c24 1444 
  0x00007773b43d75c4: 8944 2428 | 4489 5424 

  0x00007773b43d75cc: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d75cc: 2c66 90e8 

  0x00007773b43d75d0: ; ImmutableOopMap {rbp=Oop [0]=Oop [20]=NarrowOop [24]=Oop [32]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.StreamOpFlag::isKnown@10 (line 503)
                      ; - java.util.stream.AbstractPipeline::copyInto@12 (line 507)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d75d0: 2cb9 8dff 

  0x00007773b43d75d4: ;   {other}
  0x00007773b43d75d4: 0f1f 8400 | c419 0020 | be45 ffff | ff48 8b4c | 2420 488b | e948 8b4c | 2410 4889 | 0c24 4489 
  0x00007773b43d75f4: 4424 0848 | 8944 24f8 | 8b44 241c | 8944 2410 | 488b 4424 | f84c 895c | 2418 4c89 | 5424 2044 
  0x00007773b43d7614: 894c 2414 | 897c 2428 | 8954 242c 

  0x00007773b43d7620: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7620: 6666 90e8 

  0x00007773b43d7624: ; ImmutableOopMap {rbp=Oop [0]=Oop [20]=NarrowOop [24]=Oop [32]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.StreamOpFlag::isKnown@10 (line 503)
                      ; - java.util.stream.AbstractPipeline::copyInto@12 (line 507)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7624: d8b8 8dff 

  0x00007773b43d7628: ;   {other}
  0x00007773b43d7628: 0f1f 8400 | 181a 0021 | be45 ffff | ff48 8b6c | 2420 4c8b | 4424 104c | 8904 2448 | 8944 24f8 
  0x00007773b43d7648: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 | 4424 f88b | 4424 3089 | 4424 0c48 
  0x00007773b43d7668: 8b44 24f8 | 4c89 6c24 | 2044 895c | 2428 4489 | 4c24 2c44 | 8954 2430 

  0x00007773b43d7680: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7680: 6666 90e8 

  0x00007773b43d7684: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [32]=Oop [40]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.StreamOpFlag::isKnown@10 (line 503)
                      ; - java.util.stream.AbstractPipeline::copyInto@12 (line 507)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7684: 78b8 8dff 

  0x00007773b43d7688: ;   {other}
  0x00007773b43d7688: 0f1f 8400 | 781a 0022 | 498b f749 | ba40 f6fa | c973 7700 | 0041 ffd2 

  0x00007773b43d76a0: ;   {other}
  0x00007773b43d76a0: 0f1f 8400 | 0000 0000 | e94a eaff | ff45 8be9 | 488b eb49 | 8bf7 49ba | 40f6 fac9 | 7377 0000 
  0x00007773b43d76c0: ;   {other}
  0x00007773b43d76c0: 41ff d20f | 1f84 0000 | 0000 0048 | 8bdd 458b | cde9 5eea | ffff 4c89 | 5424 284c | 895c 2408 
  0x00007773b43d76e0: 4889 0c24 | 458b e849 | 8bf7 49ba | 40f6 fac9 | 7377 0000 

  0x00007773b43d76f4: ;   {other}
  0x00007773b43d76f4: 41ff d20f | 1f84 0000 | 0000 0045 | 8bc5 488b | 0c24 4c8b | 5c24 084c | 8b54 2428 | e9c9 edff 
  0x00007773b43d7714: ff44 894c | 2418 4c89 | 5424 284c | 895c 2408 | 4889 0c24 | 418b e849 | 8bf7 49ba | 40f6 fac9 
  0x00007773b43d7734: 7377 0000 

  0x00007773b43d7738: ;   {other}
  0x00007773b43d7738: 41ff d20f | 1f84 0000 | 0000 0044 | 8bc5 488b | 0c24 4c8b | 5c24 084c | 8b54 2428 | 448b 4c24 
  0x00007773b43d7758: 18e9 c2ed | ffff 498b | f749 ba40 | f6fa c973 | 7700 0041 

  0x00007773b43d776c: ;   {other}
  0x00007773b43d776c: ffd2 0f1f | 8400 0000 | 0000 e90a | f1ff ff44 | 895c 2418 | 4c89 6c24 | 084c 8934 | 2449 8bf7 
  0x00007773b43d778c: 49ba 40f6 | fac9 7377 | 0000 41ff 

  0x00007773b43d7798: ;   {other}
  0x00007773b43d7798: d20f 1f84 | 0000 0000 | 004c 8b34 | 244c 8b6c | 2408 448b | 5c24 18e9 | 13f1 ffff | be45 ffff 
  0x00007773b43d77b8: ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 | 448b 5424 | 1844 8954 | 2410 4889 
  0x00007773b43d77d8: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d77d8: 5c24 20e8 

  0x00007773b43d77dc: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [40]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::lambda$checkNull$2@1 (line 392)
                      ; - JCudaWrapper.array.Array$$Lambda/0x000077734400b220::test@1
                      ; - java.util.stream.MatchOps$1MatchSink::accept@12 (line 90)
                      ; - java.util.Spliterators$ArraySpliterator::tryAdvance@49 (line 1034)
                      ; - java.util.stream.ReferencePipeline::forEachWithCancel@13 (line 129)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d77dc: 20b7 8dff 

  0x00007773b43d77e0: ;   {other}
  0x00007773b43d77e0: 0f1f 8400 | d01b 0023 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007773b43d7800: 448b 5c24 | 1844 895c 

  0x00007773b43d7808: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7808: 2410 90e8 

  0x00007773b43d780c: ; ImmutableOopMap {[0]=Oop [8]=Oop [40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::evaluate@31 (line 228)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d780c: f0b6 8dff 

  0x00007773b43d7810: ;   {other}
  0x00007773b43d7810: 0f1f 8400 | 001c 0024 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007773b43d7830: 448b 5424 | 1844 8954 | 2410 448b | 5424 1c44 | 8954 2418 | 48ff 7424 | 2848 8f44 | 2420 4489 
  0x00007773b43d7850: 4c24 1c48 | 895c 2428 

  0x00007773b43d7858: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7858: 6666 90e8 

  0x00007773b43d785c: ; ImmutableOopMap {[0]=Oop [8]=Oop [28]=NarrowOop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.MatchOps$BooleanTerminalSink::<init>@9 (line 257)
                      ; - java.util.stream.MatchOps$1MatchSink::<init>@12 (line 85)
                      ; - java.util.stream.MatchOps::lambda$makeRef$0@6 (line 97)
                      ; - java.util.stream.MatchOps$$Lambda/0x000077734404b5d0::get@8
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@5 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d785c: a0b6 8dff 

  0x00007773b43d7860: ;   {other}
  0x00007773b43d7860: 0f1f 8400 | 501c 0025 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007773b43d7880: 4489 4424 | 104c 895c 

  0x00007773b43d7888: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7888: 2420 90e8 

  0x00007773b43d788c: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::evaluate@31 (line 228)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d788c: 70b6 8dff 

  0x00007773b43d7890: ;   {other}
  0x00007773b43d7890: 0f1f 8400 | 801c 0026 | be45 ffff | ff48 8b4c | 2420 4889 | 0c24 488b | 4c24 1048 | 894c 2408 
  0x00007773b43d78b0: 4489 4424 | 1048 8944 | 24f8 8b44 | 241c 8944 | 2418 488b | 4424 f84c | 895c 2420 | 4489 4c24 
  0x00007773b43d78d0: 1c4c 8954 

  0x00007773b43d78d4: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d78d4: 2428 90e8 

  0x00007773b43d78d8: ; ImmutableOopMap {[0]=Oop [8]=Oop [28]=NarrowOop [32]=Oop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.MatchOps$BooleanTerminalSink::<init>@9 (line 257)
                      ; - java.util.stream.MatchOps$2MatchSink::<init>@12 (line 114)
                      ; - java.util.stream.MatchOps::lambda$makeInt$1@6 (line 126)
                      ; - java.util.stream.MatchOps$$Lambda/0x000077734404aec0::get@8
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@5 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d78d8: 24b6 8dff 

  0x00007773b43d78dc: ;   {other}
  0x00007773b43d78dc: 0f1f 8400 | cc1c 0027 | be45 ffff | ff48 ff74 | 2420 488f | 0424 4c8b | 4c24 104c | 894c 2408 
  0x00007773b43d78fc: 4489 4424 | 1048 8944 | 24f8 8b44 | 241c 8944 | 2418 488b | 4424 f84c | 895c 2420 | 4489 5424 
  0x00007773b43d791c: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d791c: 2866 90e8 

  0x00007773b43d7920: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::checkUpperBound@25 (line 381)
                      ; - JCudaWrapper.array.Array::checkAgainstLength@6 (line 362)
                      ; - JCudaWrapper.array.Array::get@34 (line 246)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7920: dcb5 8dff 

  0x00007773b43d7924: ;   {other}
  0x00007773b43d7924: 0f1f 8400 | 141d 0028 | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007773b43d7944: 8944 2410 | 488b 4424 | f84c 8974 

  0x00007773b43d7950: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7950: 2418 90e8 

  0x00007773b43d7954: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::evaluate@31 (line 228)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7954: a8b5 8dff 

  0x00007773b43d7958: ;   {other}
  0x00007773b43d7958: 0f1f 8400 | 481d 0029 | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007773b43d7978: 8944 2410 | 488b 4424 | f84c 8974 | 2418 4889 | 4424 f88b | 4424 3089 | 4424 1448 | 8b44 24f8 
  0x00007773b43d7998: 4489 5c24 | 284c 896c 

  0x00007773b43d79a0: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d79a0: 2430 90e8 

  0x00007773b43d79a4: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [40]=NarrowOop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.MatchOps$BooleanTerminalSink::<init>@9 (line 257)
                      ; - java.util.stream.MatchOps$2MatchSink::<init>@12 (line 114)
                      ; - java.util.stream.MatchOps::lambda$makeInt$1@6 (line 126)
                      ; - java.util.stream.MatchOps$$Lambda/0x000077734404aec0::get@8
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@5 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d79a4: 58b5 8dff 

  0x00007773b43d79a8: ;   {other}
  0x00007773b43d79a8: 0f1f 8400 | 981d 002a | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007773b43d79c8: 8944 2410 | 488b 4424 | f84c 8974 

  0x00007773b43d79d4: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d79d4: 2418 90e8 

  0x00007773b43d79d8: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::checkUpperBound@25 (line 381)
                      ; - JCudaWrapper.array.Array::checkAgainstLength@6 (line 362)
                      ; - JCudaWrapper.array.Array::pointer@18 (line 107)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d79d8: 24b5 8dff 

  0x00007773b43d79dc: ;   {other}
  0x00007773b43d79dc: 0f1f 8400 | cc1d 002b | be45 ffff | ff4c 8934 | 2448 8954 | 2408 4889 

  0x00007773b43d79f4: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d79f4: 4c24 10e8 

  0x00007773b43d79f8: ; ImmutableOopMap {[0]=Oop [8]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.resourceManagement.Handle::getStream@4 (line 109)
                      ; - JCudaWrapper.array.Array::get@70 (line 253)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d79f8: 04b5 8dff 

  0x00007773b43d79fc: ;   {other}
  0x00007773b43d79fc: 0f1f 8400 | ec1d 002c | be45 ffff | ff4c 8934 | 244c 895c | 2408 4889 | 5424 1048 | 894c 2418 
  0x00007773b43d7a1c: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7a1c: 6666 90e8 

  0x00007773b43d7a20: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.resourceManagement.Handle::getStream@21 (line 110)
                      ; - JCudaWrapper.array.Array::get@70 (line 253)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7a20: dcb4 8dff 

  0x00007773b43d7a24: ;   {other}
  0x00007773b43d7a24: 0f1f 8400 | 141e 002d | be45 ffff | ff89 0424 

  0x00007773b43d7a34: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7a34: 6666 90e8 

  0x00007773b43d7a38: ; ImmutableOopMap {}
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jcuda.runtime.JCuda::checkResult@3 (line 514)
                      ; - jcuda.runtime.JCuda::cudaMemcpyAsync@10 (line 5696)
                      ; - JCudaWrapper.array.Array::get@73 (line 248)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7a38: c4b4 8dff 

  0x00007773b43d7a3c: ;   {other}
  0x00007773b43d7a3c: 0f1f 8400 | 2c1e 002e | be45 ffff | ff89 0424 

  0x00007773b43d7a4c: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7a4c: 6666 90e8 

  0x00007773b43d7a50: ; ImmutableOopMap {}
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::get@80 (line 255)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7a50: acb4 8dff 

  0x00007773b43d7a54: ;   {other}
  0x00007773b43d7a54: 0f1f 8400 | 441e 002f | bec6 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8b54 2418 
  0x00007773b43d7a74: 4489 5424 | 0844 8b54 | 241c 4489 | 5424 1048 | ff74 2428 | 488f 4424 | 1848 895c | 2420 4489 
  0x00007773b43d7a94: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7a94: 4c24 28e8 

  0x00007773b43d7a98: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=NarrowOop }
                      ;*invokeinterface getExactSizeIfKnown {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d7a98: 64b4 8dff 

  0x00007773b43d7a9c: ;   {other}
  0x00007773b43d7a9c: 0f1f 8400 | 8c1e 0030 | bec6 ffff | ff48 8b6c | 2420 488b | 4c24 1048 | 890c 2444 | 8944 2408 
  0x00007773b43d7abc: 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4c89 | 5c24 184c | 8954 2420 | 4489 4c24 
  0x00007773b43d7adc: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7adc: 2866 90e8 

  0x00007773b43d7ae0: ; ImmutableOopMap {rbp=Oop [0]=Oop [24]=Oop [32]=Oop [40]=NarrowOop }
                      ;*invokeinterface getExactSizeIfKnown {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7ae0: 1cb4 8dff 

  0x00007773b43d7ae4: ;   {other}
  0x00007773b43d7ae4: 0f1f 8400 | d41e 0031 | bec6 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007773b43d7b04: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4c89 | 6c24 2844 | 895c 2424 

  0x00007773b43d7b20: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7b20: 6666 90e8 

  0x00007773b43d7b24: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [36]=NarrowOop [40]=Oop }
                      ;*invokeinterface getExactSizeIfKnown {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7b24: d8b3 8dff 

  0x00007773b43d7b28: ;   {other}
  0x00007773b43d7b28: 0f1f 8400 | 181f 0032 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007773b43d7b48: 448b 5c24 | 1844 895c | 2410 448b | 5424 3044 | 8954 2414 | 48ff 7424 | 2848 8f44 | 2420 4c89 
  0x00007773b43d7b68: 4424 2848 | 895c 2430 

  0x00007773b43d7b70: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7b70: 6666 90e8 

  0x00007773b43d7b74: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d7b74: 88b3 8dff 

  0x00007773b43d7b78: ;   {other}
  0x00007773b43d7b78: 0f1f 8400 | 681f 0033 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007773b43d7b98: ffff 4c8b | 5424 204c | 8914 244c | 8b54 2410 | 4c89 5424 | 0844 8b54 | 2418 4489 | 5424 1044 
  0x00007773b43d7bb8: 8b5c 2430 | 4489 5c24 | 1448 ff74 | 2428 488f | 4424 2048 | 895c 2430 | 4c89 4424 

  0x00007773b43d7bd4: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7bd4: 3866 90e8 

  0x00007773b43d7bd8: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::estimateSize@6 (line 1141)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d7bd8: 24b3 8dff 

  0x00007773b43d7bdc: ;   {other}
  0x00007773b43d7bdc: 0f1f 8400 | cc1f 0034 | be45 ffff | ff4c 8b4c | 2420 4c89 | 0c24 4c8b | 4c24 104c | 894c 2408 
  0x00007773b43d7bfc: 4489 4424 | 1048 8944 | 24f8 8b44 | 2430 8944 | 2414 488b | 4424 f84c | 895c 2420 | 4889 7c24 
  0x00007773b43d7c1c: 284c 8954 

  0x00007773b43d7c20: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7c20: 2430 90e8 

  0x00007773b43d7c24: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7c24: d8b2 8dff 

  0x00007773b43d7c28: ;   {other}
  0x00007773b43d7c28: 0f1f 8400 | 1820 0035 | 4533 c949 | 3bd9 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007773b43d7c48: ffff 4c8b | 4c24 204c | 890c 244c | 8b4c 2410 | 4c89 4c24 | 0844 8944 | 2410 4889 | 4424 f88b 
  0x00007773b43d7c68: 4424 3089 | 4424 1448 | 8b44 24f8 | 4c89 5c24 | 204c 8954 | 2430 4889 

  0x00007773b43d7c80: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7c80: 7c24 38e8 

  0x00007773b43d7c84: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::estimateSize@6 (line 1141)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7c84: 78b2 8dff 

  0x00007773b43d7c88: ;   {other}
  0x00007773b43d7c88: 0f1f 8400 | 7820 0036 | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007773b43d7ca8: 8944 2410 | 488b 4424 | f84c 8974 | 2418 4889 | 4424 f88b | 4424 3089 | 4424 1448 | 8b44 24f8 
  0x00007773b43d7cc8: 4c89 4424 | 284c 896c 

  0x00007773b43d7cd0: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7cd0: 2430 90e8 

  0x00007773b43d7cd4: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7cd4: 28b2 8dff 

  0x00007773b43d7cd8: ;   {other}
  0x00007773b43d7cd8: 0f1f 8400 | c820 0037 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x00007773b43d7cf8: ffff 4c8b | 5424 104c | 8954 2408 | 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4c89 
  0x00007773b43d7d18: 7424 1848 | 8944 24f8 | 8b44 2430 | 8944 2414 | 488b 4424 | f84c 896c | 2430 4c89 

  0x00007773b43d7d34: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7d34: 4424 38e8 

  0x00007773b43d7d38: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::estimateSize@6 (line 1141)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7d38: c4b1 8dff 

  0x00007773b43d7d3c: ;   {other}
  0x00007773b43d7d3c: 0f1f 8400 | 2c21 0038 | be45 ffff | ff4c 8b54 | 2420 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x00007773b43d7d5c: 448b 5c24 | 1844 895c | 2410 448b | 5424 3044 | 8954 2414 | 48ff 7424 | 2848 8f44 | 2420 4c89 
  0x00007773b43d7d7c: 4424 2848 | 895c 2430 

  0x00007773b43d7d84: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7d84: 6666 90e8 

  0x00007773b43d7d88: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d7d88: 74b1 8dff 

  0x00007773b43d7d8c: ;   {other}
  0x00007773b43d7d8c: 0f1f 8400 | 7c21 0039 | be45 ffff | ff4c 8b4c | 2420 4c89 | 0c24 4c8b | 4c24 104c | 894c 2408 
  0x00007773b43d7dac: 4489 4424 | 1048 8944 | 24f8 8b44 | 2430 8944 | 2414 488b | 4424 f84c | 895c 2420 | 4889 7c24 
  0x00007773b43d7dcc: 284c 8954 

  0x00007773b43d7dd0: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7dd0: 2430 90e8 

  0x00007773b43d7dd4: ; ImmutableOopMap {[0]=Oop [8]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7dd4: 28b1 8dff 

  0x00007773b43d7dd8: ;   {other}
  0x00007773b43d7dd8: 0f1f 8400 | c821 003a | be45 ffff | ff4c 8b54 | 2410 4c89 | 5424 0848 | 8944 24f8 | 8b44 241c 
  0x00007773b43d7df8: 8944 2410 | 488b 4424 | f84c 8974 | 2418 4889 | 4424 f88b | 4424 3089 | 4424 1448 | 8b44 24f8 
  0x00007773b43d7e18: 4c89 4424 | 284c 896c 

  0x00007773b43d7e20: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7e20: 2430 90e8 

  0x00007773b43d7e24: ; ImmutableOopMap {[8]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7e24: d8b0 8dff 

  0x00007773b43d7e28: ;   {other}
  0x00007773b43d7e28: 0f1f 8400 | 1822 003b | bede ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8944 2408 
  0x00007773b43d7e48: 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4889 | 7c24 204c | 895c 2428 

  0x00007773b43d7e64: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7e64: 6666 90e8 

  0x00007773b43d7e68: ; ImmutableOopMap {rbp=Oop [0]=Oop [32]=Oop [40]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.IntPipeline::adapt@1 (line 118)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@1 (line 160)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7e68: 94b0 8dff 

  0x00007773b43d7e6c: ;   {other}
  0x00007773b43d7e6c: 0f1f 8400 | 5c22 003c | bede ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007773b43d7e8c: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 

  0x00007773b43d7ea0: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7ea0: 4c24 28e8 

  0x00007773b43d7ea4: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [40]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.IntPipeline::adapt@1 (line 118)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@1 (line 160)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7ea4: 58b0 8dff 

  0x00007773b43d7ea8: ;   {other}
  0x00007773b43d7ea8: 0f1f 8400 | 9822 003d | be5e ffff 

  0x00007773b43d7eb4: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7eb4: ff66 90e8 

  0x00007773b43d7eb8: ; ImmutableOopMap {}
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.nio.DoubleBuffer::wrap@3 (line 465)
                      ; - jcuda.Pointer::to@5 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x00007773b43d7eb8: 44b0 8dff 

  0x00007773b43d7ebc: ;   {other}
  0x00007773b43d7ebc: 0f1f 8400 | ac22 003e | bef6 ffff 

  0x00007773b43d7ec8: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7ec8: ff66 90e8 

  0x00007773b43d7ecc: ; ImmutableOopMap {}
                      ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::get@43 (line 248)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7ecc: 30b0 8dff 

  0x00007773b43d7ed0: ;   {other}
  0x00007773b43d7ed0: 0f1f 8400 | c022 003f | bef6 ffff 

  0x00007773b43d7edc: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7edc: ff66 90e8 

  0x00007773b43d7ee0: ; ImmutableOopMap {}
                      ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::pointer@30 (line 109)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7ee0: 1cb0 8dff 

  0x00007773b43d7ee4: ;   {other}
  0x00007773b43d7ee4: 0f1f 8400 | d422 0040 | bef6 ffff 

  0x00007773b43d7ef0: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7ef0: ff66 90e8 

  0x00007773b43d7ef4: ; ImmutableOopMap {}
                      ;*invokevirtual getStream {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::get@70 (line 253)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7ef4: 08b0 8dff 

  0x00007773b43d7ef8: ;   {other}
  0x00007773b43d7ef8: 0f1f 8400 | e822 0041 | be45 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2444 | 8b5c 2418 
  0x00007773b43d7f18: 4489 5c24 | 0844 8b5c | 241c 4489 | 5c24 1048 | ff74 2428 | 488f 4424 | 1848 895c | 2428 4489 
  0x00007773b43d7f38: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7f38: 4c24 14e8 

  0x00007773b43d7f3c: ; ImmutableOopMap {rbp=Oop [0]=Oop [20]=NarrowOop [24]=Oop [40]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::sourceSpliterator@9 (line 400)
                      ; - java.util.stream.AbstractPipeline::evaluate@85 (line 234)
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x00007773b43d7f3c: c0af 8dff 

  0x00007773b43d7f40: ;   {other}
  0x00007773b43d7f40: 0f1f 8400 | 3023 0042 | be45 ffff | ff48 8b6c | 2420 488b | 4c24 1048 | 890c 2444 | 8944 2408 
  0x00007773b43d7f60: 4889 4424 | f88b 4424 | 1c89 4424 | 1048 8b44 | 24f8 4c89 | 5c24 184c | 8954 2428 | 4489 4c24 
  0x00007773b43d7f80: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7f80: 1466 90e8 

  0x00007773b43d7f84: ; ImmutableOopMap {rbp=Oop [0]=Oop [20]=NarrowOop [24]=Oop [40]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::sourceSpliterator@9 (line 400)
                      ; - java.util.stream.AbstractPipeline::evaluate@85 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7f84: 78af 8dff 

  0x00007773b43d7f88: ;   {other}
  0x00007773b43d7f88: 0f1f 8400 | 7823 0043 | be45 ffff | ff48 8b6c | 2420 4c8b | 5424 104c | 8914 2448 | 8944 24f8 
  0x00007773b43d7fa8: 8b44 241c | 8944 2408 | 488b 4424 | f84c 8974 | 2410 4889 | 4424 f88b | 4424 3089 | 4424 0c48 
  0x00007773b43d7fc8: 8b44 24f8 | 4c89 6c24 | 2844 895c 

  0x00007773b43d7fd4: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d7fd4: 2430 90e8 

  0x00007773b43d7fd8: ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=Oop [40]=Oop [48]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::sourceSpliterator@9 (line 400)
                      ; - java.util.stream.AbstractPipeline::evaluate@85 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x00007773b43d7fd8: 24af 8dff 

  0x00007773b43d7fdc: ;   {other}
  0x00007773b43d7fdc: 0f1f 8400 | cc23 0044 | 488b f0eb | 5e48 8bf0 | eb59 488b | f0eb 5448 | 8bf0 eb4f | 488b f0eb 
  0x00007773b43d7ffc: 4a44 8b50 

  0x00007773b43d8000: ;   {metadata('java/lang/IllegalArgumentException')}
  0x00007773b43d8000: 0849 bb20 | c506 4373 | 7700 0049 | b800 0000 | 4373 7700 | 004d 03c2 | 4d8b 5050 | 4d3b d374 
  0x00007773b43d8020: 3048 8bf0 | eb21 488b | f0eb 1c48 | 8bf0 eb17 | 488b f0eb | 1248 8bf0 | eb0d 488b | f0eb 0848 
  0x00007773b43d8040: 8bf0 eb03 | 488b f048 | 83c4 605d 

  0x00007773b43d804c: ;   {runtime_call _rethrow_Java}
  0x00007773b43d804c: e92f 659a | ffbe 2500 | 0000 8b6c 

  0x00007773b43d8058: ;   {runtime_call UncommonTrapBlob}
  0x00007773b43d8058: 2418 90e8 

  0x00007773b43d805c: ; ImmutableOopMap {[16]=Oop [32]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.nio.DoubleBuffer::wrap@13 (line 438)
                      ; - java.nio.DoubleBuffer::wrap@4 (line 465)
                      ; - jcuda.Pointer::to@5 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x00007773b43d805c: a0ae 8dff 

  0x00007773b43d8060: ;   {other}
  0x00007773b43d8060: 0f1f 8400 | 5024 0045 

  0x00007773b43d8068: ;   {internal_word}
  0x00007773b43d8068: 49ba 736b | 3db4 7377 | 0000 4d89 | 9760 0400 

  0x00007773b43d8078: ;   {runtime_call SafepointBlob}
  0x00007773b43d8078: 00e9 82bf 

  0x00007773b43d807c: ;   {runtime_call StubRoutines (final stubs)}
  0x00007773b43d807c: 8dff e81d | b48b ffe9 | f2de ffff 
[Stub Code]
  0x00007773b43d8088: ;   {no_reloc}
  0x00007773b43d8088: 48bb 0000 | 0000 0000 

  0x00007773b43d8090: ;   {runtime_call nmethod}
  0x00007773b43d8090: 0000 e9fb 

  0x00007773b43d8094: ;   {runtime_call ExceptionBlob}
  0x00007773b43d8094: ffff ffe9 | e4d2 99ff 
[Deopt Handler Code]
  0x00007773b43d809c: e800 0000 | 0048 832c 

  0x00007773b43d80a4: ;   {runtime_call DeoptimizationBlob}
  0x00007773b43d80a4: 2405 e9f5 | b18d fff4 | f4f4 f4f4 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x000077727c0417f0, length=14, elements={
0x00007773c401a0a0, 0x00007773c412cc90, 0x00007773c412e200, 0x00007773c412f9a0,
0x00007773c4130fe0, 0x00007773c4132580, 0x00007773c4134140, 0x00007773c4135800,
0x00007773c4149330, 0x0000777308060050, 0x00007773080611d0, 0x000077730c0779b0,
0x00007773c41803c0, 0x00007773c5667fd0
}

Java Threads: ( => current thread )
=>0x00007773c401a0a0 JavaThread "main"                              [_thread_in_native, id=16925, stack(0x00007773c9300000,0x00007773c9400000) (1024K)]
  0x00007773c412cc90 JavaThread "Reference Handler"          daemon [_thread_blocked, id=16933, stack(0x000077739ad00000,0x000077739ae00000) (1024K)]
  0x00007773c412e200 JavaThread "Finalizer"                  daemon [_thread_blocked, id=16934, stack(0x000077739ac00000,0x000077739ad00000) (1024K)]
  0x00007773c412f9a0 JavaThread "Signal Dispatcher"          daemon [_thread_blocked, id=16935, stack(0x000077739ab00000,0x000077739ac00000) (1024K)]
  0x00007773c4130fe0 JavaThread "Service Thread"             daemon [_thread_blocked, id=16936, stack(0x000077739aa00000,0x000077739ab00000) (1024K)]
  0x00007773c4132580 JavaThread "Monitor Deflation Thread"   daemon [_thread_blocked, id=16937, stack(0x000077739a900000,0x000077739aa00000) (1024K)]
  0x00007773c4134140 JavaThread "C2 CompilerThread0"         daemon [_thread_blocked, id=16938, stack(0x000077739a800000,0x000077739a900000) (1024K)]
  0x00007773c4135800 JavaThread "C1 CompilerThread0"         daemon [_thread_blocked, id=16939, stack(0x000077739a700000,0x000077739a800000) (1024K)]
  0x00007773c4149330 JavaThread "Common-Cleaner"             daemon [_thread_blocked, id=16940, stack(0x000077739a600000,0x000077739a700000) (1024K)]
  0x0000777308060050 JavaThread "C1 CompilerThread1"         daemon [_thread_blocked, id=16941, stack(0x000077739a500000,0x000077739a600000) (1024K)]
  0x00007773080611d0 JavaThread "C1 CompilerThread2"         daemon [_thread_blocked, id=16942, stack(0x000077739a400000,0x000077739a500000) (1024K)]
  0x000077730c0779b0 JavaThread "C1 CompilerThread3"         daemon [_thread_blocked, id=16943, stack(0x000077739a300000,0x000077739a400000) (1024K)]
  0x00007773c41803c0 JavaThread "Notification Thread"        daemon [_thread_blocked, id=16945, stack(0x000077739a100000,0x000077739a200000) (1024K)]
  0x00007773c5667fd0 JavaThread "pool-1-thread-1"            daemon [_thread_blocked, id=16949, stack(0x000077739a200000,0x000077739a300000) (1024K)]
Total: 14

Other Threads:
  0x00007773c4123890 VMThread "VM Thread"                           [id=16932, stack(0x000077739bbfd000,0x000077739bcfd000) (1024K)]
  0x00007773c4111260 WatcherThread "VM Periodic Task Thread"        [id=16931, stack(0x000077739bcfe000,0x000077739bdfe000) (1024K)]
  0x00007773c4045410 WorkerThread "GC Thread#0"                     [id=16926, stack(0x00007773c8265000,0x00007773c8365000) (1024K)]
  0x0000777330008d20 WorkerThread "GC Thread#1"                     [id=16952, stack(0x0000777398100000,0x0000777398200000) (1024K)]
  0x00007773300094a0 WorkerThread "GC Thread#2"                     [id=16953, stack(0x000077738e300000,0x000077738e400000) (1024K)]
  0x0000777330009d30 WorkerThread "GC Thread#3"                     [id=16954, stack(0x000077738d100000,0x000077738d200000) (1024K)]
  0x000077733000a880 WorkerThread "GC Thread#4"                     [id=16955, stack(0x000077738c700000,0x000077738c800000) (1024K)]
  0x000077733000b3d0 WorkerThread "GC Thread#5"                     [id=16956, stack(0x000077738c5ff000,0x000077738c6ff000) (1024K)]
  0x000077733000bf50 WorkerThread "GC Thread#6"                     [id=16957, stack(0x000077738c4fe000,0x000077738c5fe000) (1024K)]
  0x000077733000cad0 WorkerThread "GC Thread#7"                     [id=16958, stack(0x000077738c100000,0x000077738c200000) (1024K)]
  0x000077733000d670 WorkerThread "GC Thread#8"                     [id=16959, stack(0x0000777342f00000,0x0000777343000000) (1024K)]
  0x000077733000e210 WorkerThread "GC Thread#9"                     [id=16960, stack(0x0000777341d00000,0x0000777341e00000) (1024K)]
  0x000077733000edb0 WorkerThread "GC Thread#10"                    [id=16961, stack(0x0000777341bff000,0x0000777341cff000) (1024K)]
  0x00007773c4055f10 ConcurrentGCThread "G1 Main Marker"            [id=16927, stack(0x00007773c8164000,0x00007773c8264000) (1024K)]
  0x00007773c4056ec0 WorkerThread "G1 Conc#0"                       [id=16928, stack(0x00007773c8063000,0x00007773c8163000) (1024K)]
  0x00007773c40fead0 ConcurrentGCThread "G1 Refine#0"               [id=16929, stack(0x000077739bf00000,0x000077739c000000) (1024K)]
  0x00007773c40ffa90 ConcurrentGCThread "G1 Service"                [id=16930, stack(0x000077739bdff000,0x000077739beff000) (1024K)]
Total: 17

Threads with active compile tasks:
Total: 0

VM state: not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap address: 0x0000000616800000, size: 7832 MB, Compressed Oops mode: Zero based, Oop shift amount: 3

CDS archive(s) mapped at: [0x0000777343000000-0x0000777343c97000-0x0000777343c97000), size 13201408, SharedBaseAddress: 0x0000777343000000, ArchiveRelocationMode: 1.
Compressed class space mapped at: 0x0000777344000000-0x0000777384000000, reserved size: 1073741824
Narrow klass base: 0x0000777343000000, Narrow klass shift: 0, Narrow klass range: 0x100000000

GC Precious Log:
 CardTable entry size: 512
 Card Set container configuration: InlinePtr #cards 4 size 8 Array Of Cards #cards 32 size 80 Howl #buckets 8 coarsen threshold 7372 Howl Bitmap #cards 1024 size 144 coarsen threshold 921 Card regions per heap region 1 cards per card region 8192
 CPUs: 16 total, 16 available
 Memory: 31322M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (Zero based)
 Heap Region Size: 4M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 492M
 Heap Max Capacity: 7832M
 Pre-touch: Disabled
 Parallel Workers: 13
 Concurrent Workers: 3
 Concurrent Refinement Workers: 13
 Periodic GC: Disabled

Heap:
 garbage-first heap   total 507904K, used 2913K [0x0000000616800000, 0x0000000800000000)
  region size 4096K, 2 young (8192K), 1 survivors (4096K)
 Metaspace       used 1491K, committed 1536K, reserved 1114112K
  class space    used 96K, committed 128K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, TAMS=top-at-mark-start, PB=parsable bottom
|   0|0x0000000616800000, 0x0000000616800000, 0x0000000616c00000|  0%| F|  |TAMS 0x0000000616800000| PB 0x0000000616800000| Untracked 
|   1|0x0000000616c00000, 0x0000000616c00000, 0x0000000617000000|  0%| F|  |TAMS 0x0000000616c00000| PB 0x0000000616c00000| Untracked 
|   2|0x0000000617000000, 0x0000000617000000, 0x0000000617400000|  0%| F|  |TAMS 0x0000000617000000| PB 0x0000000617000000| Untracked 
|   3|0x0000000617400000, 0x0000000617400000, 0x0000000617800000|  0%| F|  |TAMS 0x0000000617400000| PB 0x0000000617400000| Untracked 
|   4|0x0000000617800000, 0x0000000617800000, 0x0000000617c00000|  0%| F|  |TAMS 0x0000000617800000| PB 0x0000000617800000| Untracked 
|   5|0x0000000617c00000, 0x0000000617c00000, 0x0000000618000000|  0%| F|  |TAMS 0x0000000617c00000| PB 0x0000000617c00000| Untracked 
|   6|0x0000000618000000, 0x0000000618000000, 0x0000000618400000|  0%| F|  |TAMS 0x0000000618000000| PB 0x0000000618000000| Untracked 
|   7|0x0000000618400000, 0x0000000618400000, 0x0000000618800000|  0%| F|  |TAMS 0x0000000618400000| PB 0x0000000618400000| Untracked 
|   8|0x0000000618800000, 0x0000000618800000, 0x0000000618c00000|  0%| F|  |TAMS 0x0000000618800000| PB 0x0000000618800000| Untracked 
|   9|0x0000000618c00000, 0x0000000618c00000, 0x0000000619000000|  0%| F|  |TAMS 0x0000000618c00000| PB 0x0000000618c00000| Untracked 
|  10|0x0000000619000000, 0x0000000619000000, 0x0000000619400000|  0%| F|  |TAMS 0x0000000619000000| PB 0x0000000619000000| Untracked 
|  11|0x0000000619400000, 0x0000000619400000, 0x0000000619800000|  0%| F|  |TAMS 0x0000000619400000| PB 0x0000000619400000| Untracked 
|  12|0x0000000619800000, 0x0000000619800000, 0x0000000619c00000|  0%| F|  |TAMS 0x0000000619800000| PB 0x0000000619800000| Untracked 
|  13|0x0000000619c00000, 0x0000000619c00000, 0x000000061a000000|  0%| F|  |TAMS 0x0000000619c00000| PB 0x0000000619c00000| Untracked 
|  14|0x000000061a000000, 0x000000061a000000, 0x000000061a400000|  0%| F|  |TAMS 0x000000061a000000| PB 0x000000061a000000| Untracked 
|  15|0x000000061a400000, 0x000000061a400000, 0x000000061a800000|  0%| F|  |TAMS 0x000000061a400000| PB 0x000000061a400000| Untracked 
|  16|0x000000061a800000, 0x000000061a800000, 0x000000061ac00000|  0%| F|  |TAMS 0x000000061a800000| PB 0x000000061a800000| Untracked 
|  17|0x000000061ac00000, 0x000000061ac00000, 0x000000061b000000|  0%| F|  |TAMS 0x000000061ac00000| PB 0x000000061ac00000| Untracked 
|  18|0x000000061b000000, 0x000000061b000000, 0x000000061b400000|  0%| F|  |TAMS 0x000000061b000000| PB 0x000000061b000000| Untracked 
|  19|0x000000061b400000, 0x000000061b400000, 0x000000061b800000|  0%| F|  |TAMS 0x000000061b400000| PB 0x000000061b400000| Untracked 
|  20|0x000000061b800000, 0x000000061b800000, 0x000000061bc00000|  0%| F|  |TAMS 0x000000061b800000| PB 0x000000061b800000| Untracked 
|  21|0x000000061bc00000, 0x000000061bc00000, 0x000000061c000000|  0%| F|  |TAMS 0x000000061bc00000| PB 0x000000061bc00000| Untracked 
|  22|0x000000061c000000, 0x000000061c000000, 0x000000061c400000|  0%| F|  |TAMS 0x000000061c000000| PB 0x000000061c000000| Untracked 
|  23|0x000000061c400000, 0x000000061c400000, 0x000000061c800000|  0%| F|  |TAMS 0x000000061c400000| PB 0x000000061c400000| Untracked 
|  24|0x000000061c800000, 0x000000061c800000, 0x000000061cc00000|  0%| F|  |TAMS 0x000000061c800000| PB 0x000000061c800000| Untracked 
|  25|0x000000061cc00000, 0x000000061cc00000, 0x000000061d000000|  0%| F|  |TAMS 0x000000061cc00000| PB 0x000000061cc00000| Untracked 
|  26|0x000000061d000000, 0x000000061d000000, 0x000000061d400000|  0%| F|  |TAMS 0x000000061d000000| PB 0x000000061d000000| Untracked 
|  27|0x000000061d400000, 0x000000061d400000, 0x000000061d800000|  0%| F|  |TAMS 0x000000061d400000| PB 0x000000061d400000| Untracked 
|  28|0x000000061d800000, 0x000000061d800000, 0x000000061dc00000|  0%| F|  |TAMS 0x000000061d800000| PB 0x000000061d800000| Untracked 
|  29|0x000000061dc00000, 0x000000061dc00000, 0x000000061e000000|  0%| F|  |TAMS 0x000000061dc00000| PB 0x000000061dc00000| Untracked 
|  30|0x000000061e000000, 0x000000061e000000, 0x000000061e400000|  0%| F|  |TAMS 0x000000061e000000| PB 0x000000061e000000| Untracked 
|  31|0x000000061e400000, 0x000000061e400000, 0x000000061e800000|  0%| F|  |TAMS 0x000000061e400000| PB 0x000000061e400000| Untracked 
|  32|0x000000061e800000, 0x000000061e800000, 0x000000061ec00000|  0%| F|  |TAMS 0x000000061e800000| PB 0x000000061e800000| Untracked 
|  33|0x000000061ec00000, 0x000000061ec00000, 0x000000061f000000|  0%| F|  |TAMS 0x000000061ec00000| PB 0x000000061ec00000| Untracked 
|  34|0x000000061f000000, 0x000000061f000000, 0x000000061f400000|  0%| F|  |TAMS 0x000000061f000000| PB 0x000000061f000000| Untracked 
|  35|0x000000061f400000, 0x000000061f400000, 0x000000061f800000|  0%| F|  |TAMS 0x000000061f400000| PB 0x000000061f400000| Untracked 
|  36|0x000000061f800000, 0x000000061f800000, 0x000000061fc00000|  0%| F|  |TAMS 0x000000061f800000| PB 0x000000061f800000| Untracked 
|  37|0x000000061fc00000, 0x000000061fc00000, 0x0000000620000000|  0%| F|  |TAMS 0x000000061fc00000| PB 0x000000061fc00000| Untracked 
|  38|0x0000000620000000, 0x0000000620000000, 0x0000000620400000|  0%| F|  |TAMS 0x0000000620000000| PB 0x0000000620000000| Untracked 
|  39|0x0000000620400000, 0x0000000620400000, 0x0000000620800000|  0%| F|  |TAMS 0x0000000620400000| PB 0x0000000620400000| Untracked 
|  40|0x0000000620800000, 0x0000000620800000, 0x0000000620c00000|  0%| F|  |TAMS 0x0000000620800000| PB 0x0000000620800000| Untracked 
|  41|0x0000000620c00000, 0x0000000620c00000, 0x0000000621000000|  0%| F|  |TAMS 0x0000000620c00000| PB 0x0000000620c00000| Untracked 
|  42|0x0000000621000000, 0x0000000621000000, 0x0000000621400000|  0%| F|  |TAMS 0x0000000621000000| PB 0x0000000621000000| Untracked 
|  43|0x0000000621400000, 0x0000000621400000, 0x0000000621800000|  0%| F|  |TAMS 0x0000000621400000| PB 0x0000000621400000| Untracked 
|  44|0x0000000621800000, 0x0000000621800000, 0x0000000621c00000|  0%| F|  |TAMS 0x0000000621800000| PB 0x0000000621800000| Untracked 
|  45|0x0000000621c00000, 0x0000000621c00000, 0x0000000622000000|  0%| F|  |TAMS 0x0000000621c00000| PB 0x0000000621c00000| Untracked 
|  46|0x0000000622000000, 0x0000000622000000, 0x0000000622400000|  0%| F|  |TAMS 0x0000000622000000| PB 0x0000000622000000| Untracked 
|  47|0x0000000622400000, 0x0000000622400000, 0x0000000622800000|  0%| F|  |TAMS 0x0000000622400000| PB 0x0000000622400000| Untracked 
|  48|0x0000000622800000, 0x0000000622800000, 0x0000000622c00000|  0%| F|  |TAMS 0x0000000622800000| PB 0x0000000622800000| Untracked 
|  49|0x0000000622c00000, 0x0000000622c00000, 0x0000000623000000|  0%| F|  |TAMS 0x0000000622c00000| PB 0x0000000622c00000| Untracked 
|  50|0x0000000623000000, 0x0000000623000000, 0x0000000623400000|  0%| F|  |TAMS 0x0000000623000000| PB 0x0000000623000000| Untracked 
|  51|0x0000000623400000, 0x0000000623400000, 0x0000000623800000|  0%| F|  |TAMS 0x0000000623400000| PB 0x0000000623400000| Untracked 
|  52|0x0000000623800000, 0x0000000623800000, 0x0000000623c00000|  0%| F|  |TAMS 0x0000000623800000| PB 0x0000000623800000| Untracked 
|  53|0x0000000623c00000, 0x0000000623c00000, 0x0000000624000000|  0%| F|  |TAMS 0x0000000623c00000| PB 0x0000000623c00000| Untracked 
|  54|0x0000000624000000, 0x0000000624000000, 0x0000000624400000|  0%| F|  |TAMS 0x0000000624000000| PB 0x0000000624000000| Untracked 
|  55|0x0000000624400000, 0x0000000624400000, 0x0000000624800000|  0%| F|  |TAMS 0x0000000624400000| PB 0x0000000624400000| Untracked 
|  56|0x0000000624800000, 0x0000000624800000, 0x0000000624c00000|  0%| F|  |TAMS 0x0000000624800000| PB 0x0000000624800000| Untracked 
|  57|0x0000000624c00000, 0x0000000624c00000, 0x0000000625000000|  0%| F|  |TAMS 0x0000000624c00000| PB 0x0000000624c00000| Untracked 
|  58|0x0000000625000000, 0x0000000625000000, 0x0000000625400000|  0%| F|  |TAMS 0x0000000625000000| PB 0x0000000625000000| Untracked 
|  59|0x0000000625400000, 0x0000000625400000, 0x0000000625800000|  0%| F|  |TAMS 0x0000000625400000| PB 0x0000000625400000| Untracked 
|  60|0x0000000625800000, 0x0000000625800000, 0x0000000625c00000|  0%| F|  |TAMS 0x0000000625800000| PB 0x0000000625800000| Untracked 
|  61|0x0000000625c00000, 0x0000000625c00000, 0x0000000626000000|  0%| F|  |TAMS 0x0000000625c00000| PB 0x0000000625c00000| Untracked 
|  62|0x0000000626000000, 0x0000000626000000, 0x0000000626400000|  0%| F|  |TAMS 0x0000000626000000| PB 0x0000000626000000| Untracked 
|  63|0x0000000626400000, 0x0000000626400000, 0x0000000626800000|  0%| F|  |TAMS 0x0000000626400000| PB 0x0000000626400000| Untracked 
|  64|0x0000000626800000, 0x0000000626800000, 0x0000000626c00000|  0%| F|  |TAMS 0x0000000626800000| PB 0x0000000626800000| Untracked 
|  65|0x0000000626c00000, 0x0000000626c00000, 0x0000000627000000|  0%| F|  |TAMS 0x0000000626c00000| PB 0x0000000626c00000| Untracked 
|  66|0x0000000627000000, 0x0000000627000000, 0x0000000627400000|  0%| F|  |TAMS 0x0000000627000000| PB 0x0000000627000000| Untracked 
|  67|0x0000000627400000, 0x0000000627400000, 0x0000000627800000|  0%| F|  |TAMS 0x0000000627400000| PB 0x0000000627400000| Untracked 
|  68|0x0000000627800000, 0x0000000627800000, 0x0000000627c00000|  0%| F|  |TAMS 0x0000000627800000| PB 0x0000000627800000| Untracked 
|  69|0x0000000627c00000, 0x0000000627c00000, 0x0000000628000000|  0%| F|  |TAMS 0x0000000627c00000| PB 0x0000000627c00000| Untracked 
|  70|0x0000000628000000, 0x0000000628000000, 0x0000000628400000|  0%| F|  |TAMS 0x0000000628000000| PB 0x0000000628000000| Untracked 
|  71|0x0000000628400000, 0x0000000628400000, 0x0000000628800000|  0%| F|  |TAMS 0x0000000628400000| PB 0x0000000628400000| Untracked 
|  72|0x0000000628800000, 0x0000000628800000, 0x0000000628c00000|  0%| F|  |TAMS 0x0000000628800000| PB 0x0000000628800000| Untracked 
|  73|0x0000000628c00000, 0x0000000628c00000, 0x0000000629000000|  0%| F|  |TAMS 0x0000000628c00000| PB 0x0000000628c00000| Untracked 
|  74|0x0000000629000000, 0x0000000629000000, 0x0000000629400000|  0%| F|  |TAMS 0x0000000629000000| PB 0x0000000629000000| Untracked 
|  75|0x0000000629400000, 0x0000000629400000, 0x0000000629800000|  0%| F|  |TAMS 0x0000000629400000| PB 0x0000000629400000| Untracked 
|  76|0x0000000629800000, 0x0000000629800000, 0x0000000629c00000|  0%| F|  |TAMS 0x0000000629800000| PB 0x0000000629800000| Untracked 
|  77|0x0000000629c00000, 0x0000000629c00000, 0x000000062a000000|  0%| F|  |TAMS 0x0000000629c00000| PB 0x0000000629c00000| Untracked 
|  78|0x000000062a000000, 0x000000062a000000, 0x000000062a400000|  0%| F|  |TAMS 0x000000062a000000| PB 0x000000062a000000| Untracked 
|  79|0x000000062a400000, 0x000000062a400000, 0x000000062a800000|  0%| F|  |TAMS 0x000000062a400000| PB 0x000000062a400000| Untracked 
|  80|0x000000062a800000, 0x000000062a800000, 0x000000062ac00000|  0%| F|  |TAMS 0x000000062a800000| PB 0x000000062a800000| Untracked 
|  81|0x000000062ac00000, 0x000000062ac00000, 0x000000062b000000|  0%| F|  |TAMS 0x000000062ac00000| PB 0x000000062ac00000| Untracked 
|  82|0x000000062b000000, 0x000000062b000000, 0x000000062b400000|  0%| F|  |TAMS 0x000000062b000000| PB 0x000000062b000000| Untracked 
|  83|0x000000062b400000, 0x000000062b400000, 0x000000062b800000|  0%| F|  |TAMS 0x000000062b400000| PB 0x000000062b400000| Untracked 
|  84|0x000000062b800000, 0x000000062b800000, 0x000000062bc00000|  0%| F|  |TAMS 0x000000062b800000| PB 0x000000062b800000| Untracked 
|  85|0x000000062bc00000, 0x000000062bc00000, 0x000000062c000000|  0%| F|  |TAMS 0x000000062bc00000| PB 0x000000062bc00000| Untracked 
|  86|0x000000062c000000, 0x000000062c000000, 0x000000062c400000|  0%| F|  |TAMS 0x000000062c000000| PB 0x000000062c000000| Untracked 
|  87|0x000000062c400000, 0x000000062c400000, 0x000000062c800000|  0%| F|  |TAMS 0x000000062c400000| PB 0x000000062c400000| Untracked 
|  88|0x000000062c800000, 0x000000062c800000, 0x000000062cc00000|  0%| F|  |TAMS 0x000000062c800000| PB 0x000000062c800000| Untracked 
|  89|0x000000062cc00000, 0x000000062cc00000, 0x000000062d000000|  0%| F|  |TAMS 0x000000062cc00000| PB 0x000000062cc00000| Untracked 
|  90|0x000000062d000000, 0x000000062d000000, 0x000000062d400000|  0%| F|  |TAMS 0x000000062d000000| PB 0x000000062d000000| Untracked 
|  91|0x000000062d400000, 0x000000062d400000, 0x000000062d800000|  0%| F|  |TAMS 0x000000062d400000| PB 0x000000062d400000| Untracked 
|  92|0x000000062d800000, 0x000000062d800000, 0x000000062dc00000|  0%| F|  |TAMS 0x000000062d800000| PB 0x000000062d800000| Untracked 
|  93|0x000000062dc00000, 0x000000062dc00000, 0x000000062e000000|  0%| F|  |TAMS 0x000000062dc00000| PB 0x000000062dc00000| Untracked 
|  94|0x000000062e000000, 0x000000062e000000, 0x000000062e400000|  0%| F|  |TAMS 0x000000062e000000| PB 0x000000062e000000| Untracked 
|  95|0x000000062e400000, 0x000000062e400000, 0x000000062e800000|  0%| F|  |TAMS 0x000000062e400000| PB 0x000000062e400000| Untracked 
|  96|0x000000062e800000, 0x000000062e800000, 0x000000062ec00000|  0%| F|  |TAMS 0x000000062e800000| PB 0x000000062e800000| Untracked 
|  97|0x000000062ec00000, 0x000000062ec00000, 0x000000062f000000|  0%| F|  |TAMS 0x000000062ec00000| PB 0x000000062ec00000| Untracked 
|  98|0x000000062f000000, 0x000000062f000000, 0x000000062f400000|  0%| F|  |TAMS 0x000000062f000000| PB 0x000000062f000000| Untracked 
|  99|0x000000062f400000, 0x000000062f400000, 0x000000062f800000|  0%| F|  |TAMS 0x000000062f400000| PB 0x000000062f400000| Untracked 
| 100|0x000000062f800000, 0x000000062f800000, 0x000000062fc00000|  0%| F|  |TAMS 0x000000062f800000| PB 0x000000062f800000| Untracked 
| 101|0x000000062fc00000, 0x000000062fc00000, 0x0000000630000000|  0%| F|  |TAMS 0x000000062fc00000| PB 0x000000062fc00000| Untracked 
| 102|0x0000000630000000, 0x0000000630000000, 0x0000000630400000|  0%| F|  |TAMS 0x0000000630000000| PB 0x0000000630000000| Untracked 
| 103|0x0000000630400000, 0x0000000630400000, 0x0000000630800000|  0%| F|  |TAMS 0x0000000630400000| PB 0x0000000630400000| Untracked 
| 104|0x0000000630800000, 0x0000000630800000, 0x0000000630c00000|  0%| F|  |TAMS 0x0000000630800000| PB 0x0000000630800000| Untracked 
| 105|0x0000000630c00000, 0x0000000630c00000, 0x0000000631000000|  0%| F|  |TAMS 0x0000000630c00000| PB 0x0000000630c00000| Untracked 
| 106|0x0000000631000000, 0x0000000631000000, 0x0000000631400000|  0%| F|  |TAMS 0x0000000631000000| PB 0x0000000631000000| Untracked 
| 107|0x0000000631400000, 0x0000000631400000, 0x0000000631800000|  0%| F|  |TAMS 0x0000000631400000| PB 0x0000000631400000| Untracked 
| 108|0x0000000631800000, 0x0000000631800000, 0x0000000631c00000|  0%| F|  |TAMS 0x0000000631800000| PB 0x0000000631800000| Untracked 
| 109|0x0000000631c00000, 0x0000000631c00000, 0x0000000632000000|  0%| F|  |TAMS 0x0000000631c00000| PB 0x0000000631c00000| Untracked 
| 110|0x0000000632000000, 0x0000000632000000, 0x0000000632400000|  0%| F|  |TAMS 0x0000000632000000| PB 0x0000000632000000| Untracked 
| 111|0x0000000632400000, 0x0000000632400000, 0x0000000632800000|  0%| F|  |TAMS 0x0000000632400000| PB 0x0000000632400000| Untracked 
| 112|0x0000000632800000, 0x0000000632800000, 0x0000000632c00000|  0%| F|  |TAMS 0x0000000632800000| PB 0x0000000632800000| Untracked 
| 113|0x0000000632c00000, 0x0000000632c00000, 0x0000000633000000|  0%| F|  |TAMS 0x0000000632c00000| PB 0x0000000632c00000| Untracked 
| 114|0x0000000633000000, 0x0000000633000000, 0x0000000633400000|  0%| F|  |TAMS 0x0000000633000000| PB 0x0000000633000000| Untracked 
| 115|0x0000000633400000, 0x0000000633400000, 0x0000000633800000|  0%| F|  |TAMS 0x0000000633400000| PB 0x0000000633400000| Untracked 
| 116|0x0000000633800000, 0x00000006339cc0b8, 0x0000000633c00000| 44%| S|CS|TAMS 0x0000000633800000| PB 0x0000000633800000| Complete 
| 117|0x0000000633c00000, 0x0000000633c00000, 0x0000000634000000|  0%| F|  |TAMS 0x0000000633c00000| PB 0x0000000633c00000| Untracked 
| 118|0x0000000634000000, 0x0000000634000000, 0x0000000634400000|  0%| F|  |TAMS 0x0000000634000000| PB 0x0000000634000000| Untracked 
| 119|0x0000000634400000, 0x0000000634400000, 0x0000000634800000|  0%| F|  |TAMS 0x0000000634400000| PB 0x0000000634400000| Untracked 
| 120|0x0000000634800000, 0x0000000634800000, 0x0000000634c00000|  0%| F|  |TAMS 0x0000000634800000| PB 0x0000000634800000| Untracked 
| 121|0x0000000634c00000, 0x0000000634c00000, 0x0000000635000000|  0%| F|  |TAMS 0x0000000634c00000| PB 0x0000000634c00000| Untracked 
| 122|0x0000000635000000, 0x0000000635114838, 0x0000000635400000| 27%| E|  |TAMS 0x0000000635000000| PB 0x0000000635000000| Complete 
|1957|0x00000007ffc00000, 0x00000007ffd0c710, 0x0000000800000000| 26%| O|  |TAMS 0x00000007ffc00000| PB 0x00000007ffc00000| Untracked 

Card table byte_map: [0x00007773aa800000,0x00007773ab74c000] _byte_map_base: 0x00007773a774c000

Marking Bits: (CMBitMap*) 0x00007773c4045f40
 Bits: [0x00007773a2c00000, 0x00007773aa660000)

Polling page: 0x00007773cb06b000

Metaspace:

Usage:
  Non-class:      1.36 MB used.
      Class:     96.54 KB used.
       Both:      1.46 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,       1.38 MB (  2%) committed,  1 nodes.
      Class space:        1.00 GB reserved,     128.00 KB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,       1.50 MB ( <1%) committed. 

Chunk freelists:
   Non-Class:  11.38 MB
       Class:  15.69 MB
        Both:  27.06 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 21.00 MB
CDS: on
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
 - use_allocation_guard: 0.


Internal statistics:

num_allocs_failed_limit: 0.
num_arena_births: 12.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 24.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 0.
num_chunks_taken_from_freelist: 47.
num_chunk_merges: 0.
num_chunk_splits: 29.
num_chunks_enlarged: 23.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=119168Kb used=239Kb max_used=239Kb free=118928Kb
 bounds [0x00007773b43a0000, 0x00007773b4610000, 0x00007773bb800000]
CodeHeap 'profiled nmethods': size=119164Kb used=670Kb max_used=670Kb free=118493Kb
 bounds [0x00007773ac800000, 0x00007773aca70000, 0x00007773b3c5f000]
CodeHeap 'non-nmethods': size=7428Kb used=3132Kb max_used=3162Kb free=4295Kb
 bounds [0x00007773b3c5f000, 0x00007773b3f7f000, 0x00007773b43a0000]
 total_blobs=1085 nmethods=542 adapters=446
 compilation: enabled
              stopped_count=0, restarted_count=0
 full_count=0

Compilation events (20 events):
Event: 0.327 Thread 0x00007773c4134140  527       4       java.nio.HeapDoubleBuffer::<init> (23 bytes)
Event: 0.329 Thread 0x00007773c4134140 nmethod 527 0x00007773b43d1890 code [0x00007773b43d1a40, 0x00007773b43d1e70]
Event: 0.329 Thread 0x00007773c4134140  532       4       jcuda.Pointer::withByteOffset (10 bytes)
Event: 0.330 Thread 0x00007773c4134140 nmethod 532 0x00007773b43d2110 code [0x00007773b43d22a0, 0x00007773b43d23c0]
Event: 0.330 Thread 0x00007773c4134140  533       4       java.nio.DoubleBuffer::hasArray (20 bytes)
Event: 0.330 Thread 0x00007773c4134140 nmethod 533 0x00007773b43d2490 code [0x00007773b43d2620, 0x00007773b43d26e8]
Event: 0.361 Thread 0x000077730c0821a0 nmethod 528 0x00007773b43d2790 code [0x00007773b43d2a40, 0x00007773b43d41c8]
Event: 0.368 Thread 0x0000777308060050  534       1       JCudaWrapper.algebra.Vector::inc (5 bytes)
Event: 0.368 Thread 0x0000777308060050 nmethod 534 0x00007773b43d5910 code [0x00007773b43d5aa0, 0x00007773b43d5b60]
Event: 0.376 Thread 0x000077730c0ccb50 nmethod 519 0x00007773b43d5c10 code [0x00007773b43d5f40, 0x00007773b43d80b0]
Event: 0.489 Thread 0x0000777308060050  535       3       java.lang.ref.PhantomReference::<init> (7 bytes)
Event: 0.489 Thread 0x0000777308060050 nmethod 535 0x00007773ac8a7410 code [0x00007773ac8a75c0, 0x00007773ac8a7898]
Event: 0.493 Thread 0x000077730c0779b0  536       1       java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
Event: 0.493 Thread 0x0000777308060050  538       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
Event: 0.493 Thread 0x00007773c4135800  537       1       java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
Event: 0.493 Thread 0x00007773080611d0  539       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
Event: 0.493 Thread 0x0000777308060050 nmethod 538 0x00007773b43da690 code [0x00007773b43da820, 0x00007773b43da8e0]
Event: 0.493 Thread 0x00007773c4135800 nmethod 537 0x00007773b43dad10 code [0x00007773b43daea0, 0x00007773b43dafb0]
Event: 0.493 Thread 0x00007773080611d0 nmethod 539 0x00007773b43db010 code [0x00007773b43db1a0, 0x00007773b43db268]
Event: 0.493 Thread 0x000077730c0779b0 nmethod 536 0x00007773b43db310 code [0x00007773b43db4a0, 0x00007773b43db568]

GC Heap History (2 events):
Event: 0.490 GC heap before
{Heap before GC invocations=0 (full 0):
 garbage-first heap   total 507904K, used 25649K [0x0000000616800000, 0x0000000800000000)
  region size 4096K, 6 young (24576K), 0 survivors (0K)
 Metaspace       used 1489K, committed 1536K, reserved 1114112K
  class space    used 96K, committed 128K, reserved 1048576K
}
Event: 0.493 GC heap after
{Heap after GC invocations=1 (full 0):
 garbage-first heap   total 507904K, used 2913K [0x0000000616800000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 1489K, committed 1536K, reserved 1114112K
  class space    used 96K, committed 128K, reserved 1048576K
}

Dll operation events (7 events):
Event: 0.001 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
Event: 0.022 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
Event: 0.024 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
Event: 0.060 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
Event: 0.084 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
Event: 0.137 Loaded shared library /tmp/libJCublas2-12.0.0-linux-x86_64.so
Event: 0.240 Loaded shared library /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so

Deoptimization events (20 events):
Event: 0.062 Thread 0x00007773c401a0a0 DEOPT PACKING pc=0x00007773ac836e4d sp=0x00007773c93fcff0
Event: 0.062 Thread 0x00007773c401a0a0 DEOPT UNPACKING pc=0x00007773b3cb372f sp=0x00007773c93fc480 mode 0
Event: 0.062 Thread 0x00007773c401a0a0 DEOPT PACKING pc=0x00007773ac836e4d sp=0x00007773c93fcff0
Event: 0.062 Thread 0x00007773c401a0a0 DEOPT UNPACKING pc=0x00007773b3cb372f sp=0x00007773c93fc480 mode 0
Event: 0.062 Thread 0x00007773c401a0a0 DEOPT PACKING pc=0x00007773ac836e4d sp=0x00007773c93fcff0
Event: 0.062 Thread 0x00007773c401a0a0 DEOPT UNPACKING pc=0x00007773b3cb372f sp=0x00007773c93fc480 mode 0
Event: 0.063 Thread 0x00007773c401a0a0 DEOPT PACKING pc=0x00007773ac836e4d sp=0x00007773c93fcff0
Event: 0.063 Thread 0x00007773c401a0a0 DEOPT UNPACKING pc=0x00007773b3cb372f sp=0x00007773c93fc480 mode 0
Event: 0.063 Thread 0x00007773c401a0a0 DEOPT PACKING pc=0x00007773ac836e4d sp=0x00007773c93fcff0
Event: 0.063 Thread 0x00007773c401a0a0 DEOPT UNPACKING pc=0x00007773b3cb372f sp=0x00007773c93fc480 mode 0
Event: 0.063 Thread 0x00007773c401a0a0 DEOPT PACKING pc=0x00007773ac836e4d sp=0x00007773c93fcff0
Event: 0.063 Thread 0x00007773c401a0a0 DEOPT UNPACKING pc=0x00007773b3cb372f sp=0x00007773c93fc480 mode 0
Event: 0.063 Thread 0x00007773c401a0a0 DEOPT PACKING pc=0x00007773ac836e4d sp=0x00007773c93fcff0
Event: 0.063 Thread 0x00007773c401a0a0 DEOPT UNPACKING pc=0x00007773b3cb372f sp=0x00007773c93fc480 mode 0
Event: 0.064 Thread 0x00007773c401a0a0 DEOPT PACKING pc=0x00007773ac836e4d sp=0x00007773c93fcff0
Event: 0.064 Thread 0x00007773c401a0a0 DEOPT UNPACKING pc=0x00007773b3cb372f sp=0x00007773c93fc480 mode 0
Event: 0.064 Thread 0x00007773c401a0a0 DEOPT PACKING pc=0x00007773ac836e4d sp=0x00007773c93fcff0
Event: 0.064 Thread 0x00007773c401a0a0 DEOPT UNPACKING pc=0x00007773b3cb372f sp=0x00007773c93fc480 mode 0
Event: 0.064 Thread 0x00007773c401a0a0 DEOPT PACKING pc=0x00007773ac836e4d sp=0x00007773c93fcff0
Event: 0.064 Thread 0x00007773c401a0a0 DEOPT UNPACKING pc=0x00007773b3cb372f sp=0x00007773c93fc480 mode 0

Classes loaded (20 events):
Event: 0.252 Loading class java/util/function/IntPredicate
Event: 0.252 Loading class java/util/function/IntPredicate done
Event: 0.253 Loading class java/util/stream/MatchOps$MatchKind
Event: 0.253 Loading class java/util/stream/MatchOps$MatchKind done
Event: 0.253 Loading class java/util/stream/MatchOps
Event: 0.253 Loading class java/util/stream/MatchOps done
Event: 0.253 Loading class java/util/stream/MatchOps$MatchOp
Event: 0.253 Loading class java/util/stream/MatchOps$MatchOp done
Event: 0.253 Loading class java/util/stream/MatchOps$BooleanTerminalSink
Event: 0.253 Loading class java/util/stream/MatchOps$BooleanTerminalSink done
Event: 0.253 Loading class java/util/stream/MatchOps$2MatchSink
Event: 0.254 Loading class java/util/stream/Sink$OfInt
Event: 0.254 Loading class java/util/stream/Sink$OfInt done
Event: 0.254 Loading class java/util/stream/MatchOps$2MatchSink done
Event: 0.255 Loading class java/util/stream/MatchOps$1MatchSink
Event: 0.255 Loading class java/util/stream/MatchOps$1MatchSink done
Event: 0.257 Loading class java/nio/HeapDoubleBuffer
Event: 0.257 Loading class java/nio/HeapDoubleBuffer done
Event: 0.312 Loading class java/lang/foreign/MemorySegment
Event: 0.313 Loading class java/lang/foreign/MemorySegment done

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (8 events):
Event: 0.045 Thread 0x00007773c401a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635073bb0}> (0x0000000635073bb0) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.045 Thread 0x00007773c401a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635074320}> (0x0000000635074320) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x00007773c401a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635074b50}> (0x0000000635074b50) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x00007773c401a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635075148}> (0x0000000635075148) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x00007773c401a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635075718}> (0x0000000635075718) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x00007773c401a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635075cf8}> (0x0000000635075cf8) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.046 Thread 0x00007773c401a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635076548}> (0x0000000635076548) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.246 Thread 0x00007773c401a0a0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000634cc5540}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object)'> (0x0000000634cc5540) 
thrown [./src/hotspot/share/interpreter/linkResolver.cpp, line 772]

ZGC Phase Switch (0 events):
No events

VM Operations (4 events):
Event: 0.047 Executing VM operation: HandshakeAllThreads (Deoptimize)
Event: 0.047 Executing VM operation: HandshakeAllThreads (Deoptimize) done
Event: 0.490 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 0.493 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done

Memory protections (17 events):
Event: 0.001 Protecting memory [0x00007773c9300000,0x00007773c9304000] with protection modes 0
Event: 0.021 Protecting memory [0x000077739ad00000,0x000077739ad04000] with protection modes 0
Event: 0.021 Protecting memory [0x000077739ac00000,0x000077739ac04000] with protection modes 0
Event: 0.021 Protecting memory [0x000077739ab00000,0x000077739ab04000] with protection modes 0
Event: 0.021 Protecting memory [0x000077739aa00000,0x000077739aa04000] with protection modes 0
Event: 0.021 Protecting memory [0x000077739a900000,0x000077739a904000] with protection modes 0
Event: 0.021 Protecting memory [0x000077739a800000,0x000077739a804000] with protection modes 0
Event: 0.022 Protecting memory [0x000077739a700000,0x000077739a704000] with protection modes 0
Event: 0.037 Protecting memory [0x000077739a600000,0x000077739a604000] with protection modes 0
Event: 0.049 Protecting memory [0x000077739a500000,0x000077739a504000] with protection modes 0
Event: 0.049 Protecting memory [0x000077739a400000,0x000077739a404000] with protection modes 0
Event: 0.049 Protecting memory [0x000077739a300000,0x000077739a304000] with protection modes 0
Event: 0.053 Protecting memory [0x000077739a200000,0x000077739a204000] with protection modes 0
Event: 0.056 Protecting memory [0x000077739a100000,0x000077739a104000] with protection modes 0
Event: 0.247 Protecting memory [0x000077739a200000,0x000077739a204000] with protection modes 0
Event: 0.284 Protecting memory [0x0000777398f00000,0x0000777398f04000] with protection modes 0
Event: 0.284 Protecting memory [0x0000777398b00000,0x0000777398b04000] with protection modes 0

Nmethod flushes (0 events):
No events

Events (20 events):
Event: 0.015 Thread 0x00007773c401a0a0 Thread added: 0x00007773c401a0a0
Event: 0.021 Thread 0x00007773c401a0a0 Thread added: 0x00007773c412cc90
Event: 0.021 Thread 0x00007773c401a0a0 Thread added: 0x00007773c412e200
Event: 0.021 Thread 0x00007773c401a0a0 Thread added: 0x00007773c412f9a0
Event: 0.021 Thread 0x00007773c401a0a0 Thread added: 0x00007773c4130fe0
Event: 0.021 Thread 0x00007773c401a0a0 Thread added: 0x00007773c4132580
Event: 0.021 Thread 0x00007773c401a0a0 Thread added: 0x00007773c4134140
Event: 0.022 Thread 0x00007773c401a0a0 Thread added: 0x00007773c4135800
Event: 0.037 Thread 0x00007773c401a0a0 Thread added: 0x00007773c4149330
Event: 0.049 Thread 0x00007773c4135800 Thread added: 0x0000777308060050
Event: 0.049 Thread 0x00007773c4135800 Thread added: 0x00007773080611d0
Event: 0.049 Thread 0x00007773c4134140 Thread added: 0x000077730c0779b0
Event: 0.053 Thread 0x00007773c4134140 Thread added: 0x000077730c0821a0
Event: 0.056 Thread 0x00007773c401a0a0 Thread added: 0x00007773c41803c0
Event: 0.239 Thread 0x000077730c0821a0 Thread exited: 0x000077730c0821a0
Event: 0.247 Thread 0x00007773c401a0a0 Thread added: 0x00007773c5667fd0
Event: 0.284 Thread 0x00007773c4134140 Thread added: 0x000077730c0821a0
Event: 0.284 Thread 0x00007773c4134140 Thread added: 0x000077730c0ccb50
Event: 0.489 Thread 0x000077730c0ccb50 Thread exited: 0x000077730c0ccb50
Event: 0.493 Thread 0x000077730c0821a0 Thread exited: 0x000077730c0821a0


Dynamic libraries:
200000000-200200000 ---p 00000000 00:00 0 
200200000-200400000 rw-s 00000000 00:05 1108                             /dev/nvidia0
200400000-203400000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
203400000-204400000 ---p 00000000 00:00 0 
204400000-204600000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
204600000-204800000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
204800000-204a00000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
204a00000-204c00000 rw-s 204a00000 00:05 1109                            /dev/nvidia-uvm
204c00000-204e00000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
204e00000-205000000 ---p 00000000 00:00 0 
205000000-205200000 rw-s 00000000 00:05 1107                             /dev/nvidiactl
205200000-300200000 ---p 00000000 00:00 0 
616800000-635400000 rw-p 00000000 00:00 0 
635400000-7ffc00000 ---p 00000000 00:00 0 
7ffc00000-7ffd0d000 rw-p 00cd6000 103:02 17173446                        /usr/lib/jvm/java-21-openjdk-amd64/lib/server/classes.jsa
7ffd0d000-800000000 rw-p 00000000 00:00 0 
10000000000-10004000000 ---p 00000000 00:00 0 
5c03a5651000-5c03a5652000 r--p 00000000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
5c03a5652000-5c03a5653000 r-xp 00001000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
5c03a5653000-5c03a5654000 r--p 00002000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
5c03a5654000-5c03a5655000 r--p 00002000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
5c03a5655000-5c03a5656000 rw-p 00003000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
5c03a5caa000-5c03a5cf1000 rw-p 00000000 00:00 0                          [heap]
777240000000-777240021000 rw-p 00000000 00:00 0 
777240021000-777244000000 ---p 00000000 00:00 0 
777244000000-777244021000 rw-p 00000000 00:00 0 
777244021000-777248000000 ---p 00000000 00:00 0 
77724c000000-77724c021000 rw-p 00000000 00:00 0 
77724c021000-777250000000 ---p 00000000 00:00 0 
777250000000-777250021000 rw-p 00000000 00:00 0 
777250021000-777254000000 ---p 00000000 00:00 0 
777258000000-777258021000 rw-p 00000000 00:00 0 
777258021000-77725c000000 ---p 00000000 00:00 0 
77725c000000-77725c021000 rw-p 00000000 00:00 0 
77725c021000-777260000000 ---p 00000000 00:00 0 
777264000000-777264021000 rw-p 00000000 00:00 0 
777264021000-777268000000 ---p 00000000 00:00 0 
777268000000-777268021000 rw-p 00000000 00:00 0 
777268021000-77726c000000 ---p 00000000 00:00 0 
777270000000-777270021000 rw-p 00000000 00:00 0 
777270021000-777274000000 ---p 00000000 00:00 0 
777274000000-777274605000 rw-p 00000000 00:00 0 
777274605000-777278000000 ---p 00000000 00:00 0 
77727c000000-77727c5d4000 rw-p 00000000 00:00 0 
77727c5d4000-777280000000 ---p 00000000 00:00 0 
777282000000-77728a000000 ---p 00000000 00:00 0 
77728c000000-77728e000000 ---p 00000000 00:00 0 
777290000000-7772a0000000 ---p 00000000 00:00 0 
7772a4000000-7772a4400000 ---p 00000000 00:00 0 
7772a4400000-7772a4600000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7772a4600000-7772a4800000 rw-s 00000000 00:01 10303                      /dev/zero (deleted)
7772a4800000-7772a4a00000 rw-s 00000000 00:01 10304                      /dev/zero (deleted)
7772a4a00000-7772a5000000 ---p 00000000 00:00 0 
7772a5000000-7772a5200000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7772a5200000-7772a5400000 ---p 00000000 00:00 0 
7772a5400000-7772a5600000 rw-s 00000000 00:01 10306                      /dev/zero (deleted)
7772a5600000-7772a5b33000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
7772a5b33000-7772a6000000 ---p 00000000 00:00 0 
7772a8000000-7772a8021000 rw-p 00000000 00:00 0 
7772a8021000-7772ac000000 ---p 00000000 00:00 0 
7772ae000000-7772b4000000 ---p 00000000 00:00 0 
7772b4000000-7772b4021000 rw-p 00000000 00:00 0 
7772b4021000-7772b8000000 ---p 00000000 00:00 0 
7772bb800000-7772d5068000 r-xp 00000000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
7772d5068000-7772d5268000 ---p 19868000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
7772d5268000-7772d54a6000 r--p 19868000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
7772d54a6000-7772d8e5a000 rw-p 19aa6000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
7772d8e5a000-7772dd02b000 rw-p 00000000 00:00 0 
7772dd400000-7772e3b28000 r-xp 00000000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
7772e3b28000-7772e3d28000 ---p 06728000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
7772e3d28000-7772e3d34000 r--p 06728000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
7772e3d34000-7772e3d3b000 rw-p 06734000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
7772e3d3b000-7772e3d47000 rw-p 00000000 00:00 0 
7772e4000000-7772e4021000 rw-p 00000000 00:00 0 
7772e4021000-7772e8000000 ---p 00000000 00:00 0 
7772e8000000-7772e80af000 rw-p 00000000 00:00 0 
7772e80af000-7772ec000000 ---p 00000000 00:00 0 
7772f0000000-7772f004f000 rw-p 00000000 00:00 0 
7772f004f000-7772f4000000 ---p 00000000 00:00 0 
7772f4000000-7772f4055000 rw-p 00000000 00:00 0 
7772f4055000-7772f8000000 ---p 00000000 00:00 0 
7772fc000000-7772fc030000 rw-p 00000000 00:00 0 
7772fc030000-777300000000 ---p 00000000 00:00 0 
777300000000-777300021000 rw-p 00000000 00:00 0 
777300021000-777304000000 ---p 00000000 00:00 0 
777308000000-77730808d000 rw-p 00000000 00:00 0 
77730808d000-77730c000000 ---p 00000000 00:00 0 
77730c000000-77730c2d0000 rw-p 00000000 00:00 0 
77730c2d0000-777310000000 ---p 00000000 00:00 0 
777314000000-777314021000 rw-p 00000000 00:00 0 
777314021000-777318000000 ---p 00000000 00:00 0 
777318000000-777318021000 rw-p 00000000 00:00 0 
777318021000-77731c000000 ---p 00000000 00:00 0 
777320000000-777320021000 rw-p 00000000 00:00 0 
777320021000-777324000000 ---p 00000000 00:00 0 
777324000000-777324021000 rw-p 00000000 00:00 0 
777324021000-777328000000 ---p 00000000 00:00 0 
77732c000000-77732c021000 rw-p 00000000 00:00 0 
77732c021000-777330000000 ---p 00000000 00:00 0 
777330000000-777330021000 rw-p 00000000 00:00 0 
777330021000-777334000000 ---p 00000000 00:00 0 
777338000000-7773380c0000 rw-p 00000000 00:00 0 
7773380c0000-777338400000 ---p 00000000 00:00 0 
777338400000-7773384a0000 rw-p 00000000 00:00 0 
7773384a0000-77733c000000 ---p 00000000 00:00 0 
77733c000000-77733c021000 rw-p 00000000 00:00 0 
77733c021000-777340000000 ---p 00000000 00:00 0 
777341800000-777341add000 rw-p 00000000 00:00 0 
777341bfe000-777341bff000 ---p 00000000 00:00 0 
777341bff000-777341cff000 rw-p 00000000 00:00 0 
777341cff000-777341d00000 ---p 00000000 00:00 0 
777341d00000-777341e00000 rw-p 00000000 00:00 0 
777341e00000-777341e01000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e01000-777341e02000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e02000-777341e03000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e03000-777341e04000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e04000-777341e05000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e05000-777341e06000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e06000-777341e07000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e07000-777341e08000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e08000-777341e09000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e09000-777341e0a000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e0a000-777341e0b000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e0b000-777341e0c000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e0c000-777341e0d000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e0d000-777341e0e000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e0e000-777341e0f000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e0f000-777341e10000 rw-s 00000000 00:05 1107                       /dev/nvidiactl
777341e10000-777342e21000 ---p 00000000 00:00 0 
777342eff000-777342f00000 ---p 00000000 00:00 0 
777342f00000-777343000000 rw-p 00000000 00:00 0 
777343000000-777343c97000 rw-p 00001000 103:02 17173446                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/classes.jsa
777343c97000-777344000000 ---p 00000000 00:00 0 
777344000000-777344010000 rw-p 00000000 00:00 0 
777344010000-777344040000 ---p 00000000 00:00 0 
777344040000-777344050000 rw-p 00000000 00:00 0 
777344050000-777384000000 ---p 00000000 00:00 0 
777384000000-777384021000 rw-p 00000000 00:00 0 
777384021000-777388000000 ---p 00000000 00:00 0 
777388000000-777388021000 rw-p 00000000 00:00 0 
777388021000-77738c000000 ---p 00000000 00:00 0 
77738c0ff000-77738c100000 ---p 00000000 00:00 0 
77738c100000-77738c200000 rw-p 00000000 00:00 0 
77738c200000-77738c2c7000 r-xp 00000000 103:02 18219053                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
77738c2c7000-77738c4c7000 ---p 000c7000 103:02 18219053                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
77738c4c7000-77738c4cc000 r--p 000c7000 103:02 18219053                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
77738c4cc000-77738c4cd000 rw-p 000cc000 103:02 18219053                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
77738c4cd000-77738c4cf000 rw-p 00000000 00:00 0 
77738c4fd000-77738c4fe000 ---p 00000000 00:00 0 
77738c4fe000-77738c5fe000 rw-p 00000000 00:00 0 
77738c5fe000-77738c5ff000 ---p 00000000 00:00 0 
77738c5ff000-77738c6ff000 rw-p 00000000 00:00 0 
77738c6ff000-77738c700000 ---p 00000000 00:00 0 
77738c700000-77738c800000 rw-p 00000000 00:00 0 
77738c800000-77738c801000 ---p 00000000 00:00 0 
77738c801000-77738d001000 rw-p 00000000 00:00 0 
77738d0ff000-77738d100000 ---p 00000000 00:00 0 
77738d100000-77738d200000 rw-p 00000000 00:00 0 
77738d200000-77738e221000 ---p 00000000 00:00 0 
77738e2ff000-77738e300000 ---p 00000000 00:00 0 
77738e300000-77738e400000 rw-p 00000000 00:00 0 
77738e400000-77738e4de000 r--p 00000000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
77738e4de000-77738e9b3000 r-xp 000de000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
77738e9b3000-77738fe4f000 r--p 005b3000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
77738fe4f000-77738fe50000 ---p 01a4f000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
77738fe50000-77738fe68000 r--p 01a4f000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
77738fe68000-77738ff63000 rw-p 01a67000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
77738ff63000-77738ffcc000 rw-p 00000000 00:00 0 
777390000000-777390021000 rw-p 00000000 00:00 0 
777390021000-777394000000 ---p 00000000 00:00 0 
777394000000-777394021000 rw-p 00000000 00:00 0 
777394021000-777398000000 ---p 00000000 00:00 0 
7773980ff000-777398100000 ---p 00000000 00:00 0 
777398100000-777398200000 rw-p 00000000 00:00 0 
777398200000-777398201000 ---p 00000000 00:00 0 
777398201000-777398a01000 rw-p 00000000 00:00 0 
777398b00000-777398b04000 ---p 00000000 00:00 0 
777398b04000-777398c00000 rw-p 00000000 00:00 0 
777398c00000-777398e5a000 rw-p 00000000 00:00 0 
777398f00000-777398f04000 ---p 00000000 00:00 0 
777398f04000-777399000000 rw-p 00000000 00:00 0 
777399000000-777399001000 ---p 00000000 00:00 0 
777399001000-777399801000 rw-p 00000000 00:00 0 
7773998be000-777399a00000 rw-p 00000000 00:00 0 
777399a00000-777399b38000 r-xp 00000000 103:02 18219052                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
777399b38000-777399d38000 ---p 00138000 103:02 18219052                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
777399d38000-777399d3d000 r--p 00138000 103:02 18219052                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
777399d3d000-777399d3f000 rw-p 0013d000 103:02 18219052                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
777399d3f000-777399d41000 rw-p 00000000 00:00 0 
777399e3c000-77739a03c000 rw-s 00000000 00:01 10305                      /dev/zero (deleted)
77739a03c000-77739a100000 rw-p 00000000 00:00 0 
77739a100000-77739a104000 ---p 00000000 00:00 0 
77739a104000-77739a200000 rw-p 00000000 00:00 0 
77739a200000-77739a204000 ---p 00000000 00:00 0 
77739a204000-77739a300000 rw-p 00000000 00:00 0 
77739a300000-77739a304000 ---p 00000000 00:00 0 
77739a304000-77739a400000 rw-p 00000000 00:00 0 
77739a400000-77739a404000 ---p 00000000 00:00 0 
77739a404000-77739a500000 rw-p 00000000 00:00 0 
77739a500000-77739a504000 ---p 00000000 00:00 0 
77739a504000-77739a600000 rw-p 00000000 00:00 0 
77739a600000-77739a604000 ---p 00000000 00:00 0 
77739a604000-77739a700000 rw-p 00000000 00:00 0 
77739a700000-77739a704000 ---p 00000000 00:00 0 
77739a704000-77739a800000 rw-p 00000000 00:00 0 
77739a800000-77739a804000 ---p 00000000 00:00 0 
77739a804000-77739a900000 rw-p 00000000 00:00 0 
77739a900000-77739a904000 ---p 00000000 00:00 0 
77739a904000-77739aa00000 rw-p 00000000 00:00 0 
77739aa00000-77739aa04000 ---p 00000000 00:00 0 
77739aa04000-77739ab00000 rw-p 00000000 00:00 0 
77739ab00000-77739ab04000 ---p 00000000 00:00 0 
77739ab04000-77739ac00000 rw-p 00000000 00:00 0 
77739ac00000-77739ac04000 ---p 00000000 00:00 0 
77739ac04000-77739ad00000 rw-p 00000000 00:00 0 
77739ad00000-77739ad04000 ---p 00000000 00:00 0 
77739ad04000-77739ae00000 rw-p 00000000 00:00 0 
77739ae00000-77739bbec000 r--p 00000000 103:02 16521112                  /usr/lib/locale/locale-archive
77739bbfc000-77739bbfd000 ---p 00000000 00:00 0 
77739bbfd000-77739bcfd000 rw-p 00000000 00:00 0 
77739bcfd000-77739bcfe000 ---p 00000000 00:00 0 
77739bcfe000-77739bdfe000 rw-p 00000000 00:00 0 
77739bdfe000-77739bdff000 ---p 00000000 00:00 0 
77739bdff000-77739beff000 rw-p 00000000 00:00 0 
77739beff000-77739bf00000 ---p 00000000 00:00 0 
77739bf00000-77739c000000 rw-p 00000000 00:00 0 
77739c000000-77739c021000 rw-p 00000000 00:00 0 
77739c021000-7773a0000000 ---p 00000000 00:00 0 
7773a0024000-7773a0029000 r--p 00000000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7773a0029000-7773a006a000 r-xp 00005000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7773a006a000-7773a00f3000 r--p 00046000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7773a00f3000-7773a00f4000 r--p 000ce000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7773a00f4000-7773a00f5000 rw-p 000cf000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
7773a00f5000-7773a33b0000 rw-p 00000000 00:00 0 
7773a33b0000-7773aa650000 ---p 00000000 00:00 0 
7773aa650000-7773aa660000 rw-p 00000000 00:00 0 
7773aa67e000-7773aa8f6000 rw-p 00000000 00:00 0 
7773aa8f6000-7773ab74a000 ---p 00000000 00:00 0 
7773ab74a000-7773ab74c000 rw-p 00000000 00:00 0 
7773ab74c000-7773ab8f6000 rw-p 00000000 00:00 0 
7773ab8f6000-7773ac74a000 ---p 00000000 00:00 0 
7773ac74a000-7773ac74c000 rw-p 00000000 00:00 0 
7773ac75f000-7773ac800000 rw-p 00000000 00:00 0 
7773ac800000-7773aca70000 rwxp 00000000 00:00 0 
7773aca70000-7773b3c5f000 ---p 00000000 00:00 0 
7773b3c5f000-7773b3f7f000 rwxp 00000000 00:00 0 
7773b3f7f000-7773b43a0000 ---p 00000000 00:00 0 
7773b43a0000-7773b4610000 rwxp 00000000 00:00 0 
7773b4610000-7773bb800000 ---p 00000000 00:00 0 
7773bb800000-7773c3e0c000 r--s 00000000 103:02 17173445                  /usr/lib/jvm/java-21-openjdk-amd64/lib/modules
7773c3e33000-7773c3e74000 rw-p 00000000 00:00 0 
7773c3e74000-7773c3e75000 r--p 00000000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
7773c3e75000-7773c3e76000 r-xp 00001000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
7773c3e76000-7773c3e77000 r--p 00002000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
7773c3e77000-7773c3e78000 r--p 00002000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
7773c3e78000-7773c3e79000 rw-p 00003000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
7773c3e79000-7773c3e7a000 r--p 00000000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
7773c3e7a000-7773c3e7b000 r-xp 00001000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
7773c3e7b000-7773c3e7c000 r--p 00002000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
7773c3e7c000-7773c3e7d000 r--p 00002000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
7773c3e7d000-7773c3e7e000 rw-p 00003000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
7773c3e7e000-7773c580e000 rw-p 00000000 00:00 0 
7773c580e000-7773c8000000 ---p 00000000 00:00 0 
7773c8002000-7773c8003000 r--p 00000000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
7773c8003000-7773c8004000 r-xp 00001000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
7773c8004000-7773c8005000 r--p 00002000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
7773c8005000-7773c8006000 r--p 00002000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
7773c8006000-7773c8007000 rw-p 00003000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
7773c8007000-7773c8062000 rw-p 00000000 00:00 0 
7773c8062000-7773c8063000 ---p 00000000 00:00 0 
7773c8063000-7773c8163000 rw-p 00000000 00:00 0 
7773c8163000-7773c8164000 ---p 00000000 00:00 0 
7773c8164000-7773c8264000 rw-p 00000000 00:00 0 
7773c8264000-7773c8265000 ---p 00000000 00:00 0 
7773c8265000-7773c8365000 rw-p 00000000 00:00 0 
7773c8365000-7773c9133000 rw-p 00000000 00:00 0 
7773c9133000-7773c9217000 ---p 00000000 00:00 0 
7773c9217000-7773c921c000 rw-p 00000000 00:00 0 
7773c921c000-7773c9300000 ---p 00000000 00:00 0 
7773c9300000-7773c9304000 ---p 00000000 00:00 0 
7773c9304000-7773c9400000 rw-p 00000000 00:00 0 
7773c9400000-7773c949d000 r--p 00000000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
7773c949d000-7773c95e5000 r-xp 0009d000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
7773c95e5000-7773c966c000 r--p 001e5000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
7773c966c000-7773c9677000 r--p 0026b000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
7773c9677000-7773c967a000 rw-p 00276000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
7773c967a000-7773c967e000 rw-p 00000000 00:00 0 
7773c9681000-7773c9688000 r--s 00000000 103:02 16532226                  /usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache
7773c9688000-7773c9698000 -w-s 00000000 00:05 1108                       /dev/nvidia0
7773c9698000-7773c9717000 rw-p 00000000 00:00 0 
7773c9717000-7773c9727000 r--p 00000000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
7773c9727000-7773c97a6000 r-xp 00010000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
7773c97a6000-7773c97fe000 r--p 0008f000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
7773c97fe000-7773c97ff000 r--p 000e7000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
7773c97ff000-7773c9800000 rw-p 000e8000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
7773c9800000-7773c9aa1000 r--p 00000000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
7773c9aa1000-7773ca911000 r-xp 002a1000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
7773ca911000-7773cabe5000 r--p 01111000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
7773cabe5000-7773cacb8000 r--p 013e4000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
7773cacb8000-7773cace8000 rw-p 014b7000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
7773cace8000-7773cad4e000 rw-p 00000000 00:00 0 
7773cad4f000-7773cad51000 r--p 00000000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
7773cad51000-7773cad56000 r-xp 00002000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
7773cad56000-7773cad58000 r--p 00007000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
7773cad58000-7773cad59000 r--p 00008000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
7773cad59000-7773cad5a000 rw-p 00009000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
7773cad5a000-7773cad61000 r--p 00000000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7773cad61000-7773cad6a000 r-xp 00007000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7773cad6a000-7773cad6e000 r--p 00010000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7773cad6e000-7773cad6f000 r--p 00014000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7773cad6f000-7773cad70000 rw-p 00015000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
7773cad70000-7773cadae000 rw-p 00000000 00:00 0 
7773cadae000-7773cadbb000 r--p 00000000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
7773cadbb000-7773cadca000 r-xp 0000d000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
7773cadca000-7773cadcf000 r--p 0001c000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
7773cadcf000-7773cadd0000 r--p 00021000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
7773cadd0000-7773cadd1000 rw-p 00022000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
7773cadd1000-7773cadd2000 rw-p 00000000 00:00 0 
7773cadd2000-7773cadd6000 r--p 00000000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
7773cadd6000-7773cadfa000 r-xp 00004000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
7773cadfa000-7773cadfe000 r--p 00028000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
7773cadfe000-7773cadff000 r--p 0002b000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
7773cadff000-7773cae00000 rw-p 0002c000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
7773cae00000-7773cae28000 r--p 00000000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
7773cae28000-7773cafb0000 r-xp 00028000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
7773cafb0000-7773cafff000 r--p 001b0000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
7773cafff000-7773cb003000 r--p 001fe000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
7773cb003000-7773cb005000 rw-p 00202000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
7773cb005000-7773cb012000 rw-p 00000000 00:00 0 
7773cb013000-7773cb016000 r--p 00000000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
7773cb016000-7773cb01e000 r-xp 00003000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
7773cb01e000-7773cb020000 r--p 0000b000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
7773cb020000-7773cb021000 r--p 0000c000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
7773cb021000-7773cb022000 rw-p 0000d000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
7773cb022000-7773cb029000 rw-p 00000000 00:00 0 
7773cb029000-7773cb031000 ---p 00000000 00:00 0 
7773cb031000-7773cb033000 rw-p 00000000 00:00 0 
7773cb033000-7773cb035000 r--p 00000000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
7773cb035000-7773cb03f000 r-xp 00002000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
7773cb03f000-7773cb042000 r--p 0000c000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
7773cb042000-7773cb043000 r--p 0000f000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
7773cb043000-7773cb044000 rw-p 00010000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
7773cb044000-7773cb046000 r--p 00000000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
7773cb046000-7773cb058000 r-xp 00002000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
7773cb058000-7773cb05e000 r--p 00014000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
7773cb05e000-7773cb05f000 r--p 0001a000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
7773cb05f000-7773cb060000 rw-p 0001b000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
7773cb063000-7773cb06b000 rw-s 00000000 103:02 18221683                  /tmp/hsperfdata_dov/16920
7773cb06b000-7773cb06c000 ---p 00000000 00:00 0 
7773cb06c000-7773cb06d000 r--p 00000000 00:00 0 
7773cb06d000-7773cb06e000 ---p 00000000 00:00 0 
7773cb06e000-7773cb070000 r--p 00000000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
7773cb070000-7773cb073000 r-xp 00002000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
7773cb073000-7773cb074000 r--p 00005000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
7773cb074000-7773cb075000 r--p 00006000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
7773cb075000-7773cb076000 rw-p 00007000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
7773cb076000-7773cb078000 rw-p 00000000 00:00 0 
7773cb078000-7773cb079000 r--p 00000000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7773cb079000-7773cb0a4000 r-xp 00001000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7773cb0a4000-7773cb0ae000 r--p 0002c000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7773cb0ae000-7773cb0b0000 r--p 00036000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7773cb0b0000-7773cb0b2000 rw-p 00038000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7ffe646b7000-7ffe646d8000 rw-p 00000000 00:00 0                          [stack]
7ffe6472c000-7ffe64730000 r--p 00000000 00:00 0                          [vvar]
7ffe64730000-7ffe64732000 r-xp 00000000 00:00 0                          [vdso]
ffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]
Total number of mappings: 366


VM Arguments:
jvm_args: -Dfile.encoding=UTF-8 --module-path=/home/dov/projects/NeighborhoodPIG/build/classes 
java_command: main.TestStuff
java_class_path (initial): /home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-javadoc.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-sources.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-test-sources.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-tests.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-tools.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcublas-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcublas-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcuda-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcuda-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcudnn-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcudnn-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcufft-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcufft-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcurand-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcurand-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusolver-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusolver-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusparse-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusparse-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/NeighborhoodPIG/build/classes
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 12                                        {product} {ergonomic}
     uint ConcGCThreads                            = 3                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 13                                        {product} {ergonomic}
   size_t G1HeapRegionSize                         = 4194304                                   {product} {ergonomic}
    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}
   size_t InitialHeapSize                          = 515899392                                 {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MaxHeapSize                              = 8212447232                                {product} {ergonomic}
   size_t MaxNewSize                               = 4924112896                                {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 4194304                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 7602480                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122027880                              {pd product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122027880                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
   size_t SoftMaxHeapSize                          = 8212447232                             {manageable} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags foldmultilines=false
 #1: stderr all=off uptime,level,tags foldmultilines=false

Environment Variables:
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin
USERNAME=dov
SHELL=/bin/bash
DISPLAY=:1
LANG=en_US.UTF-8

Active Locale:
LC_ALL=en_US.UTF-8
LC_COLLATE=en_US.UTF-8
LC_CTYPE=en_US.UTF-8
LC_MESSAGES=en_US.UTF-8
LC_MONETARY=en_US.UTF-8
LC_NUMERIC=en_US.UTF-8
LC_TIME=en_US.UTF-8

Signal Handlers:
   SIGSEGV: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
    SIGBUS: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
    SIGFPE: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
   SIGPIPE: javaSignalHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGXFSZ: javaSignalHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGILL: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
   SIGUSR2: SR_handler in libjvm.so, mask=00000000000000000000000000000000, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGHUP: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGINT: SIG_IGN, mask=00000000000000000000000000000000, flags=none, blocked
   SIGTERM: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGQUIT: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGTRAP: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked


Periodic native trim disabled

---------------  S Y S T E M  ---------------

OS:
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=24.04
DISTRIB_CODENAME=noble
DISTRIB_DESCRIPTION="Ubuntu 24.04.1 LTS"
uname: Linux 6.8.0-49-generic #49-Ubuntu SMP PREEMPT_DYNAMIC Mon Nov  4 02:06:24 UTC 2024 x86_64
OS uptime: 0 days 6:05 hours
libc: glibc 2.39 NPTL 2.39 
rlimit (soft/hard): STACK 8192k/infinity , CORE 0k/infinity , NPROC 125013/125013 , NOFILE 1048576/1048576 , AS infinity/infinity , CPU infinity/infinity , DATA infinity/infinity , FSIZE infinity/infinity , MEMLOCK 4009332k/4009332k
load average: 0.20 0.15 0.17

/proc/meminfo:
MemTotal:       32074664 kB
MemFree:        21804932 kB
MemAvailable:   24643088 kB
Buffers:          289356 kB
Cached:          2981968 kB
SwapCached:            0 kB
Active:          6497036 kB
Inactive:        1876280 kB
Active(anon):    5236560 kB
Inactive(anon):        0 kB
Active(file):    1260476 kB
Inactive(file):  1876280 kB
Unevictable:          32 kB
Mlocked:              32 kB
SwapTotal:       8388604 kB
SwapFree:        8388604 kB
Zswap:                 0 kB
Zswapped:              0 kB
Dirty:               328 kB
Writeback:             0 kB
AnonPages:       5102000 kB
Mapped:          1141968 kB
Shmem:            134568 kB
KReclaimable:     132348 kB
Slab:             434536 kB
SReclaimable:     132348 kB
SUnreclaim:       302188 kB
KernelStack:       24236 kB
PageTables:        60276 kB
SecPageTables:         0 kB
NFS_Unstable:          0 kB
Bounce:                0 kB
WritebackTmp:          0 kB
CommitLimit:    24425936 kB
Committed_AS:   27900784 kB
VmallocTotal:   34359738367 kB
VmallocUsed:      166352 kB
VmallocChunk:          0 kB
Percpu:            18688 kB
HardwareCorrupted:     0 kB
AnonHugePages:         0 kB
ShmemHugePages:        0 kB
ShmemPmdMapped:        0 kB
FileHugePages:         0 kB
FilePmdMapped:         0 kB
Unaccepted:            0 kB
HugePages_Total:       0
HugePages_Free:        0
HugePages_Rsvd:        0
HugePages_Surp:        0
Hugepagesize:       2048 kB
Hugetlb:               0 kB
DirectMap4k:     1575400 kB
DirectMap2M:    15454208 kB
DirectMap1G:    16777216 kB

/sys/kernel/mm/transparent_hugepage/enabled: always [madvise] never
/sys/kernel/mm/transparent_hugepage/hpage_pmd_size: 2097152
/sys/kernel/mm/transparent_hugepage/defrag (defrag/compaction efforts parameter): always defer defer+madvise [madvise] never

Process Memory:
Virtual Size: 17639844K (peak: 17639844K)
Resident Set Size: 321896K (peak: 321896K) (anon: 154408K, file: 159296K, shmem: 8192K)
Swapped out: 0K
C-Heap outstanding allocations: 74544K, retained: 8731K
glibc malloc tunables: (default)

/proc/sys/kernel/threads-max (system-wide limit on the number of threads): 250026
/proc/sys/vm/max_map_count (maximum number of memory map areas a process may have): 1048576
/proc/sys/vm/swappiness (control to define how aggressively the kernel swaps out anonymous memory): 60
/proc/sys/kernel/pid_max (system-wide limit on number of process identifiers): 4194304

container (cgroup) information:
container_type: cgroupv2
cpu_cpuset_cpus: not supported
cpu_memory_nodes: not supported
active_processor_count: 16
cpu_quota: not supported
cpu_period: not supported
cpu_shares: not supported
memory_limit_in_bytes: unlimited
memory_and_swap_limit_in_bytes: unlimited
memory_soft_limit_in_bytes: unlimited
memory_usage_in_bytes: 2731608 k
memory_max_usage_in_bytes: not supported
memory_swap_current_in_bytes: unlimited
memory_swap_max_limit_in_bytes: unlimited
maximum number of tasks: 37503
current number of tasks: 224

Steal ticks since vm start: 0
Steal ticks percentage since vm start:  0.000

CPU: total 16 (initial active 16) (16 cores per cpu, 2 threads per core) family 25 model 68 stepping 1 microcode 0xa404101, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4a, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, clmul, bmi1, bmi2, adx, sha, fma, vzeroupper, clflush, clflushopt, rdtscp, rdpid, f16c, pku, ospke, cet_ss
CPU Model and flags from /proc/cpuinfo:
model name	: AMD Ryzen 9 6900HS with Radeon Graphics
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf rapl pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 invpcid cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local user_shstk clzero irperf xsaveerptr rdpru wbnoinvd cppc arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip pku ospke vaes vpclmulqdq rdpid overflow_recov succor smca debug_swap

Online cpus: 0-15
Offline cpus: 
BIOS frequency limitation: <Not Available>
Frequency switch latency (ns): 0
Available cpu frequencies: <Not Available>
Current governor: powersave
Core performance/turbo boost: <Not Available>

Memory: 4k page, physical 32074664k(24643088k free), swap 8388604k(8388604k free)
Page Sizes: 4k

vm_info: OpenJDK 64-Bit Server VM (21.0.5+11-Ubuntu-1ubuntu124.04) for linux-amd64 JRE (21.0.5+11-Ubuntu-1ubuntu124.04), built on 2024-10-22T07:47:02Z by "buildd" with gcc 13.2.0

END.
