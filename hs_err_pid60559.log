#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x0000744ed66327ba, pid=60559, tid=60563
#
# JRE version: OpenJDK Runtime Environment (21.0.5+11) (build 21.0.5+11-Ubuntu-1ubuntu124.04)
# Java VM: OpenJDK 64-Bit Server VM (21.0.5+11-Ubuntu-1ubuntu124.04, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)
# Problematic frame:
# C  [libcuda.so.1+0x2327ba]
#
# Core dump will be written. Default location: Core dumps may be processed with "/usr/share/apport/apport -p%p -s%s -c%c -d%d -P%P -u%u -g%g -- %E" (or dumping to /home/dov/projects/NeighborhoodPIG/core.60559)
#
# If you would like to submit a bug report, please visit:
#   https://bugs.launchpad.net/ubuntu/+source/openjdk-21
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: -Dfile.encoding=UTF-8 --module-path=/home/dov/projects/NeighborhoodPIG/build/classes main.NeighborhoodPIG

Host: AMD Ryzen 9 6900HS with Radeon Graphics, 16 cores, 30G, Ubuntu 24.04.1 LTS
Time: Tue Nov 26 14:38:09 2024 IST elapsed time: 0.500687 seconds (0d 0h 0m 0s)

---------------  T H R E A D  ---------------

Current thread (0x0000744f0c01a0a0):  JavaThread "main"             [_thread_in_native, id=60563, stack(0x0000744f11700000,0x0000744f11800000) (1024K)]

Stack: [0x0000744f11700000,0x0000744f11800000],  sp=0x0000744f117fda20,  free space=1014k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [libcuda.so.1+0x2327ba]
C  [libcuda.so.1+0x4e22e7]
C  [libcuda.so.1+0x141496]
C  [libcuda.so.1+0x1419b0]
C  [libcuda.so.1+0x142707]
C  [libcuda.so.1+0x2ec0e1]
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
J 684  jcuda.runtime.JCuda.cudaMemcpyAsyncNative(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I (0 bytes) @ 0x0000744efc3d773c [0x0000744efc3d76a0+0x000000000000009c]
J 770 c2 JCudaWrapper.array.Array.get(LJCudaWrapper/resourceManagement/Handle;Ljcuda/Pointer;III)V (104 bytes) @ 0x0000744efc3e8cb0 [0x0000744efc3e8440+0x0000000000000870]
J 720 c1 JCudaWrapper.array.DArray.get(LJCudaWrapper/resourceManagement/Handle;[DIII)V (26 bytes) @ 0x0000744ef4905e8c [0x0000744ef4905440+0x0000000000000a4c]
j  JCudaWrapper.array.DArray.get(LJCudaWrapper/resourceManagement/Handle;[DIIIII)V+56
j  JCudaWrapper.algebra.Vector.toArray()[D+27
j  JCudaWrapper.algebra.VectorsStride.lambda$copyToCPURows$1(I)[D+5
j  JCudaWrapper.algebra.VectorsStride$$Lambda+0x0000744e8c017d78.apply(I)Ljava/lang/Object;+5
j  java.util.Arrays.setAll([Ljava/lang/Object;Ljava/util/function/IntFunction;)V+17 java.base@21.0.5
j  JCudaWrapper.algebra.VectorsStride.copyToCPURows()[[D+15
j  JCudaWrapper.algebra.VectorsStride.toString()Ljava/lang/String;+1
j  JCudaWrapper.algebra.Matrix.toString()Ljava/lang/String;+4
j  main.NeighborhoodPIG.<init>(Ljava/lang/String;I)V+55
j  main.NeighborhoodPIG.main([Ljava/lang/String;)V+7
v  ~StubRoutines::call_stub 0x0000744efbc5fcc6

siginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x00000000001fffe0

Registers:
RAX=0x0000000000000001, RBX=0x0000744f117fe058, RCX=0x0000000000000001, RDX=0x0000000000000005
RSP=0x0000744f117fda20, RBP=0x0000744f117fda40, RSI=0x00000000001fff90, RDI=0x0000744f0d6ca210
R8 =0x0000000000000002, R9 =0x0000000000000000, R10=0x0000000000000000, R11=0x0000000000000246
R12=0x0000744f117fdec8, R13=0x0000744f117fe058, R14=0x0000744f117fdec8, R15=0x0000000000000001
RIP=0x0000744ed66327ba, EFLAGS=0x0000000000010202, CSGSFS=0x002b000000000033, ERR=0x0000000000000004
  TRAPNO=0x000000000000000e


Register to memory mapping:

RAX=0x0000000000000001 is an unknown value
RBX=0x0000744f117fe058 is pointing into the stack for thread: 0x0000744f0c01a0a0
RCX=0x0000000000000001 is an unknown value
RDX=0x0000000000000005 is an unknown value
RSP=0x0000744f117fda20 is pointing into the stack for thread: 0x0000744f0c01a0a0
RBP=0x0000744f117fda40 is pointing into the stack for thread: 0x0000744f0c01a0a0
RSI=0x00000000001fff90 is an unknown value
RDI=0x0000744f0d6ca210 points into unknown readable memory: 0x0000000744f0d6ca | ca d6 f0 44 07 00 00 00
R8 =0x0000000000000002 is an unknown value
R9 =0x0 is null
R10=0x0 is null
R11=0x0000000000000246 is an unknown value
R12=0x0000744f117fdec8 is pointing into the stack for thread: 0x0000744f0c01a0a0
R13=0x0000744f117fe058 is pointing into the stack for thread: 0x0000744f0c01a0a0
R14=0x0000744f117fdec8 is pointing into the stack for thread: 0x0000744f0c01a0a0
R15=0x0000000000000001 is an unknown value

Top of Stack: (sp=0x0000744f117fda20)
0x0000744f117fda20:   0000744f0c82cde0 0000000000000000
0x0000744f117fda30:   0000744f0c64ca10 0000744f0c82cde0
0x0000744f117fda40:   0000744f117fdc70 0000744ed68e22e7
0x0000744f117fda50:   e808ec8348000000 0000000000000000
0x0000744f117fda60:   d108d108d108d100 0000744f117fdb00
0x0000744f117fda70:   0000744f00000000 0000000000000000
0x0000744f117fda80:   00000002e008e000 0000744f0c82cde0
0x0000744f117fda90:   eb08eb08eb08eb08 0000000500000000
0x0000744f117fdaa0:   0000000000000000 0000000000000000
0x0000744f117fdab0:   0000000000000000 0000000000000000
0x0000744f117fdac0:   0000000000000000 0000000000000000
0x0000744f117fdad0:   0000000000000001 0000000000000001
0x0000744f117fdae0:   0000744f0c64ca28 0000000000000000
0x0000744f117fdaf0:   0000744f117fdb40 0000744ed6652cc9
0x0000744f117fdb00:   0000000000000001 0000000000000000
0x0000744f117fdb10:   0000000000000000 0000000000000000
0x0000744f117fdb20:   0000000000000000 0000744f0c82cde0
0x0000744f117fdb30:   0000000000000000 0000744f117fdec8
0x0000744f117fdb40:   0000000000000101 0000744f0c82cde0
0x0000744f117fdb50:   0000744f0c7bfb30 0000000000000003
0x0000744f117fdb60:   0000000000000000 0000744f0c64ca10
0x0000744f117fdb70:   0000744f117fdd90 0000744f0c64ca10
0x0000744f117fdb80:   0000744f00000001 0000000000000000
0x0000744f117fdb90:   0000744f0c82cde0 0000744f0c82cde0
0x0000744f117fdba0:   0000744f0c82cde0 0000744f0c64ca10
0x0000744f117fdbb0:   0000744f0c64ca10 0000000000000000
0x0000744f117fdbc0:   0000000000000001 0000000000000000
0x0000744f117fdbd0:   0000744f0c82cde0 0000744ed663562d
0x0000744f117fdbe0:   0000744f117fdda8 0001744f117fdd90
0x0000744f117fdbf0:   0000744f117fdc20 0000000000000000
0x0000744f117fdc00:   0000744f0c64ca28 063dc9242c919e00
0x0000744f117fdc10:   0000744f117fdc60 0000744f0c64ca10 

Instructions: (pc=0x0000744ed66327ba)
0x0000744ed66326ba:   00 02 00 00 00 48 83 c4 08 31 c0 5b 41 5c 41 5d
0x0000744ed66326ca:   5d c3 0f 1f 40 00 48 8b 42 48 0f b6 80 09 01 00
0x0000744ed66326da:   00 83 e0 7e 3c 1e 0f 94 c0 e9 ff fe ff ff 0f 1f
0x0000744ed66326ea:   84 00 00 00 00 00 4d 8b ad 68 01 00 00 e9 56 ff
0x0000744ed66326fa:   ff ff 0f 1f 40 00 48 89 df e8 78 fc ff ff 89 83
0x0000744ed663270a:   a4 00 00 00 83 f8 ff 0f 85 10 ff ff ff eb 9c 31
0x0000744ed663271a:   c0 e9 a8 fe ff ff 31 c0 48 83 3e 00 0f 84 14 01
0x0000744ed663272a:   00 00 55 48 89 e5 41 54 53 48 89 f3 48 83 ec 10
0x0000744ed663273a:   48 83 7e 08 00 0f 84 e8 00 00 00 48 83 7e 10 00
0x0000744ed663274a:   0f 84 dd 00 00 00 8b 07 49 89 fc 89 c1 83 f8 02
0x0000744ed663275a:   0f 84 98 00 00 00 85 c0 0f 84 18 02 00 00 83 f8
0x0000744ed663276a:   01 0f 85 9f 01 00 00 48 8b 77 20 48 85 f6 0f 84
0x0000744ed663277a:   ca 00 00 00 48 83 be 10 02 00 00 00 0f 85 c7 02
0x0000744ed663278a:   00 00 48 8b 76 48 48 8b b6 88 02 00 00 48 8b 76
0x0000744ed663279a:   08 85 c0 0f 85 05 02 00 00 49 8b 7c 24 18 48 85
0x0000744ed66327aa:   f6 0f 95 c0 48 85 ff 0f 95 c1 21 c8 84 c0 74 12
0x0000744ed66327ba:   48 8b 76 50 89 55 ec e8 7a d7 15 00 8b 55 ec 48
0x0000744ed66327ca:   89 c7 48 85 ff 74 70 48 8b 47 48 48 8b 80 08 01
0x0000744ed66327da:   00 00 48 c1 e8 28 83 e0 0e 3c 02 75 05 f6 c2 04
0x0000744ed66327ea:   74 3c 41 8b 0c 24 eb 58 66 0f 1f 44 00 00 48 8b
0x0000744ed66327fa:   47 60 48 85 c0 0f 84 73 01 00 00 48 8b 40 40 48
0x0000744ed663280a:   8b 8f 90 00 00 00 8b 00 48 0f a3 c1 0f 82 5c 01
0x0000744ed663281a:   00 00 83 e2 04 0f 85 53 01 00 00 0f 1f 00 b8 01
0x0000744ed663282a:   00 00 00 48 83 c4 10 5b 41 5c 5d c3 66 2e 0f 1f
0x0000744ed663283a:   84 00 00 00 00 00 c3 41 8b 04 24 0f 1f 00 89 c1
0x0000744ed663284a:   83 f9 01 0f 84 6d 01 00 00 0f 87 b7 00 00 00 49
0x0000744ed663285a:   8b 4c 24 08 49 8b 84 24 b0 00 00 00 8b 51 70 48
0x0000744ed663286a:   39 d0 73 ba 48 8b 33 48 8d 3c 30 48 39 fa 72 ae
0x0000744ed663287a:   44 0f b6 41 18 8b 79 10 41 8d 90 6f ff ff ff 83
0x0000744ed663288a:   fa 0d 0f 87 ba 01 00 00 8b 51 6c 48 09 f0 83 ea
0x0000744ed663289a:   01 48 85 c2 75 88 8b b1 98 00 00 00 31 d2 8d 44
0x0000744ed66328aa:   37 ff f7 f6 49 8b 94 24 b8 00 00 00 85 ff 0f 84 


Stack slot to memory mapping:

stack at sp + 0 slots: 0x0000744f0c82cde0 points into unknown readable memory: 0x0000000000000001 | 01 00 00 00 00 00 00 00
stack at sp + 1 slots: 0x0 is null
stack at sp + 2 slots: 0x0000744f0c64ca10 points into unknown readable memory: 0x0000000100000000 | 00 00 00 00 01 00 00 00
stack at sp + 3 slots: 0x0000744f0c82cde0 points into unknown readable memory: 0x0000000000000001 | 01 00 00 00 00 00 00 00
stack at sp + 4 slots: 0x0000744f117fdc70 is pointing into the stack for thread: 0x0000744f0c01a0a0
stack at sp + 5 slots: 0x0000744ed68e22e7: <offset 0x00000000004e22e7> in /lib/x86_64-linux-gnu/libcuda.so.1 at 0x0000744ed6400000
stack at sp + 6 slots: 0xe808ec8348000000 is an unknown value
stack at sp + 7 slots: 0x0 is null


Compiled method (n/a) 507  684     n 0       jcuda.runtime.JCuda::cudaMemcpyAsyncNative (native)
 total in heap  [0x0000744efc3d7510,0x0000744efc3d78d0] = 960
 relocation     [0x0000744efc3d7668,0x0000744efc3d76a0] = 56
 main code      [0x0000744efc3d76a0,0x0000744efc3d78c8] = 552
 oops           [0x0000744efc3d78c8,0x0000744efc3d78d0] = 8

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x0000744e80462e78} 'cudaMemcpyAsyncNative' '(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I' in 'jcuda/runtime/JCuda'
  # parm0:    rsi:rsi   = 'jcuda/Pointer'
  # parm1:    rdx:rdx   = 'jcuda/Pointer'
  # parm2:    rcx:rcx   = long
  # parm3:    r8        = int
  # parm4:    r9:r9     = 'jcuda/runtime/cudaStream_t'
  #           [sp+0x60]  (sp of caller)
  0x0000744efc3d76a0: 448b 5608 | 49bb 0000 | 008b 4e74 | 0000 4d03 | d349 3bc2 | 0f84 0600 

  0x0000744efc3d76b8: ;   {runtime_call ic_miss_stub}
  0x0000744efc3d76b8: 0000 e9c1 | 598d ff90 
[Verified Entry Point]
  0x0000744efc3d76c0: 8984 2400 | c0fe ff55 | 488b ec48 | 83ec 5090 | 4181 7f20 | 0100 0000 

  0x0000744efc3d76d8: ;   {runtime_call StubRoutines (final stubs)}
  0x0000744efc3d76d8: 7405 e8c1 | bd8b ff4c | 894c 2428 | 4983 f900 | 488d 4424 | 2848 0f44 | 4424 2848 | 8904 244d 
  0x0000744efc3d76f8: 8bc8 4c8b | c148 8954 | 2410 4883 | fa00 488d | 4c24 1048 | 0f44 4c24 | 1048 8974 | 2408 4883 
  0x0000744efc3d7718: fe00 488d | 5424 0848 | 0f44 5424 

  0x0000744efc3d7724: ;   {oop(a 'java/lang/Class'{0x00000006338427c0} = 'jcuda/runtime/JCuda')}
  0x0000744efc3d7724: 0849 bec0 | 2784 3306 | 0000 004c | 8974 2438 | 4c8d 7424 | 3849 8bf6 

  0x0000744efc3d773c: ;   {internal_word}
  0x0000744efc3d773c: c5f8 7749 | ba3c 773d | fc4e 7400 | 004d 8997 | a003 0000 | 4989 a798 

  0x0000744efc3d7754: ;   {external_word}
  0x0000744efc3d7754: 0300 0080 | 3d2f 6992 | 1600 0f84 | 3c00 0000 | 5652 5141 

  0x0000744efc3d7768: ;   {metadata({method} {0x0000744e80462e78} 'cudaMemcpyAsyncNative' '(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I' in 'jcuda/runtime/JCuda')}
  0x0000744efc3d7768: 5041 5148 | be78 2e46 | 804e 7400 | 0049 8bff | 40f6 c40f | 0f84 1200 | 0000 4883 

  0x0000744efc3d7784: ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000744efc3d7784: ec08 e805 | 291e 1648 | 83c4 08e9 | 0500 0000 

  0x0000744efc3d7794: ;   {runtime_call SharedRuntime::dtrace_method_entry(JavaThread*, Method*)}
  0x0000744efc3d7794: e8f7 281e | 1641 5941 | 5859 5a5e | 498d bfb8 | 0300 0041 | c787 4404 | 0000 0400 

  0x0000744efc3d77b0: ;   {runtime_call Java_jcuda_runtime_JCuda_cudaMemcpyAsyncNative}
  0x0000744efc3d77b0: 0000 e859 | 85e4 d7c5 | f877 41c7 | 8744 0400 | 0005 0000 | 00f0 8344 | 24c0 0049 | 3baf 4804 
  0x0000744efc3d77d0: 0000 0f87 | 0e00 0000 | 4183 bf40 | 0400 0000 | 0f84 2400 | 0000 c5f8 | 7748 8945 | f849 8bff 
  0x0000744efc3d77f0: 4c8b e448 | 83ec 0048 

  0x0000744efc3d77f8: ;   {runtime_call JavaThread::check_special_condition_for_native_trans(JavaThread*)}
  0x0000744efc3d77f8: 83e4 f0e8 | 50cc d415 | 498b e44d | 33e4 488b | 45f8 41c7 | 8744 0400 | 0008 0000 | 0041 83bf 
  0x0000744efc3d7818: c004 0000 | 020f 847f 

  0x0000744efc3d7820: ;   {external_word}
  0x0000744efc3d7820: 0000 0080 | 3d63 6892 | 1600 0f84 | 3600 0000 | 4889 45f8 

  0x0000744efc3d7834: ;   {metadata({method} {0x0000744e80462e78} 'cudaMemcpyAsyncNative' '(Ljcuda/Pointer;Ljcuda/Pointer;JILjcuda/runtime/cudaStream_t;)I' in 'jcuda/runtime/JCuda')}
  0x0000744efc3d7834: 48be 782e | 4680 4e74 | 0000 498b | ff40 f6c4 | 0f0f 8412 | 0000 0048 

  0x0000744efc3d784c: ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000744efc3d784c: 83ec 08e8 | 2c29 1e16 | 4883 c408 | e905 0000 

  0x0000744efc3d785c: ;   {runtime_call SharedRuntime::dtrace_method_exit(JavaThread*, Method*)}
  0x0000744efc3d785c: 00e8 1e29 | 1e16 488b | 45f8 49c7 | 8798 0300 | 0000 0000 | 0049 c787 | a003 0000 | 0000 0000 
  0x0000744efc3d787c: c5f8 7749 | 8b8f 2804 | 0000 c781 | 0001 0000 | 0000 0000 | c949 837f | 0800 0f85 | 0100 0000 
  0x0000744efc3d789c: ;   {runtime_call StubRoutines (initial stubs)}
  0x0000744efc3d789c: c3e9 5e83 | 88ff c5f8 | 7748 8945 | f84c 8be4 | 4883 ec00 | 4883 e4f0 

  0x0000744efc3d78b4: ;   {runtime_call SharedRuntime::reguard_yellow_pages()}
  0x0000744efc3d78b4: e837 381e | 1649 8be4 | 4d33 e448 | 8b45 f8e9 | 5bff ffff 
[/MachCode]


Compiled method (c2) 517  770       4       JCudaWrapper.array.Array::get (104 bytes)
 total in heap  [0x0000744efc3e8190,0x0000744efc3eb290] = 12544
 relocation     [0x0000744efc3e82e8,0x0000744efc3e8440] = 344
 main code      [0x0000744efc3e8440,0x0000744efc3e9ba0] = 5984
 stub code      [0x0000744efc3e9ba0,0x0000744efc3e9bc8] = 40
 oops           [0x0000744efc3e9bc8,0x0000744efc3e9c00] = 56
 metadata       [0x0000744efc3e9c00,0x0000744efc3e9e08] = 520
 scopes data    [0x0000744efc3e9e08,0x0000744efc3eadd0] = 4040
 scopes pcs     [0x0000744efc3eadd0,0x0000744efc3eb120] = 848
 dependencies   [0x0000744efc3eb120,0x0000744efc3eb170] = 80
 handler table  [0x0000744efc3eb170,0x0000744efc3eb248] = 216
 nul chk table  [0x0000744efc3eb248,0x0000744efc3eb290] = 72

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x0000744e80495248} 'get' '(LJCudaWrapper/resourceManagement/Handle;Ljcuda/Pointer;III)V' in 'JCudaWrapper/array/Array'
  # this:     rsi:rsi   = 'JCudaWrapper/array/Array'
  # parm0:    rdx:rdx   = 'JCudaWrapper/resourceManagement/Handle'
  # parm1:    rcx:rcx   = 'jcuda/Pointer'
  # parm2:    r8        = int
  # parm3:    r9        = int
  # parm4:    rdi       = int
  #           [sp+0x60]  (sp of caller)
  0x0000744efc3e8440: 448b 5608 | 49bb 0000 | 008b 4e74 | 0000 4d03 | d349 3bc2 

  0x0000744efc3e8454: ;   {runtime_call ic_miss_stub}
  0x0000744efc3e8454: 0f85 264c | 8cff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x0000744efc3e8460: 8984 2400 | c0fe ff55 | 4883 ec50 | 4181 7f20 | 0100 0000 | 0f85 1917 | 0000 897c | 2428 4489 
  0x0000744efc3e8480: 4c24 2444 | 8944 2420 | 4889 4c24 | 1848 8954 | 2410 4889 | 7424 0849 | 8baf b801 | 0000 4c8b 
  0x0000744efc3e84a0: d549 83c2 | 204d 3b97 | c801 0000 | 0f83 b609 | 0000 4d89 | 97b8 0100 | 0041 0f18 | 8200 0100 
  0x0000744efc3e84c0: 0048 c745 | 0001 0000 | 0041 0f18 | 8240 0100 

  0x0000744efc3e84d0: ;   {metadata({type array int})}
  0x0000744efc3e84d0: 00c7 4508 | 3826 0000 | 410f 1882 | 8001 0000 | c745 0c03 | 0000 0044 | 8965 1c44 | 8b5c 2420 
  0x0000744efc3e84f0: 4489 5d10 | 448b 5424 | 2444 8955 | 1444 8b5c | 2428 4489 | 5d18 4d8b | 9fb8 0100 | 004d 8bd3 
  0x0000744efc3e8510: 4983 c228 | 4d3b 97c8 | 0100 000f | 8373 0900 | 004d 8997 | b801 0000 | 410f 1882 | 0001 0000 
  0x0000744efc3e8530: 49c7 0301 

  0x0000744efc3e8534: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x0000744efc3e8534: 0000 0041 | c743 0818 | 8e02 0145 | 8963 0c45 | 8963 2449 | c743 10ff | ffff ff4c | 8bc5 49c1 
  0x0000744efc3e8554: e803 49ba | 0300 0000 | 5044 0000 | 4d89 5318 | 4589 4320 | 4d8b b7b8 | 0100 004d | 8bd6 4983 
  0x0000744efc3e8574: c238 4d3b | 97c8 0100 | 000f 8331 | 0900 004d | 8997 b801 | 0000 410f | 1882 0001 | 0000 49c7 
  0x0000744efc3e8594: 0601 0000 

  0x0000744efc3e8598: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x0000744efc3e8598: 0041 c746 | 0810 9802 | 0145 8966 | 0c4d 8966 | 104d 8966 | 184d 8966 | 2045 8966 | 2c4d 8966 
  0x0000744efc3e85b8: 304d 8bc3 | 49c1 e803 | 4589 4628 | 4d8b d349 | 8bee 48c1 | ed03 4d8b | de4d 33d3 | 49c1 ea16 
  0x0000744efc3e85d8: 4d85 d274 | 1a49 c1eb | 0948 bf00 | c074 ef4e | 7400 0049 | 03fb 803f | 020f 85d2 | 0700 0041 
  0x0000744efc3e85f8: 807f 4000 | 0f85 eb06 | 0000 4189 | 6e1c 4588 | 661a 410f | b66e 1841 | c746 0c50 | 0000 0041 
  0x0000744efc3e8618: c746 145f | 0000 0045 | 8966 1085 | ed0f 85b9 | 0e00 0041 | 8b5e 2841 | c646 1801 

  0x0000744efc3e8634: ; implicit exception: dispatches to 0x0000744efc3e9a8c
  0x0000744efc3e8634: 458b 6cdc | 0841 807f | 4000 0f85 | e006 0000 | 4589 6628 | 41c7 4614 | 6f00 0001 

  0x0000744efc3e8650: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x0000000633825d00})}
  0x0000744efc3e8650: 49ba 005d | 8233 0600 | 0000 410f | b66a 1985 | ed0f 84c1 

  0x0000744efc3e8664: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x0000000633825d90})}
  0x0000744efc3e8664: 0e00 0049 | ba90 5d82 | 3306 0000 | 0045 8b52 

  0x0000744efc3e8674: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x0000000633825d90})}
  0x0000744efc3e8674: 2449 bb90 | 5d82 3306 | 0000 0045 | 8b5b 1c41 | 81e2 6f00 | 0001 453b | d30f 85f5 | 0c00 004d 
  0x0000744efc3e8694: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x0000744efc3e8694: 8d04 dc41 | 81fd 188e | 0201 0f84 | 9c00 0000 

  0x0000744efc3e86a4: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x0000744efc3e86a4: 4181 fdd0 | a00e 000f | 854b 1000 | 0041 8b68 | 1c83 e540 | 85ed 0f84 | 7012 0000 | 4d8b 5010 
  0x0000744efc3e86c4: 4d85 d20f | 8c8f 0000 | 0045 33db | 4d3b d3bd | ffff ffff | 7c08 400f | 95c5 400f | b6ed be45 
  0x0000744efc3e86e4: ffff ff4c | 8b54 2408 | 4c89 1424 | 4c8b 5424 | 104c 8954 | 2408 4c8b | 5424 184c | 8954 2410 
  0x0000744efc3e8704: 4889 4424 | f88b 4424 | 2089 4424 | 1848 8b44 | 24f8 4889 | 4424 f88b | 4424 2889 | 4424 2048 
  0x0000744efc3e8724: 8b44 24f8 | 4c89 7424 | 304c 8944 

  0x0000744efc3e8730: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e8730: 2438 90e8 

  0x0000744efc3e8734: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::estimateSize@6 (line 1042)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e8734: c8a7 8cff 

  0x0000744efc3e8738: ;   {other}
  0x0000744efc3e8738: 0f1f 8400 | a805 0000 | 418b 681c | 83e5 4085 | ed0f 8469 | 1000 004d | 8b50 104d | 85d2 0f8d 
  0x0000744efc3e8758: bc10 0000 | 4d8d 0cdc | 458b 5908 

  0x0000744efc3e8764: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x0000744efc3e8764: 4181 fb18 | 8e02 010f | 8567 1200 | 0041 8b59 | 2041 8b54 

  0x0000744efc3e8778: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x0000000633825d00})}
  0x0000744efc3e8778: dc0c 49ba | 005d 8233 | 0600 0000 | 450f b65a | 1845 85db | 0f84 e20a | 0000 418b | 7918 4d8d 
  0x0000744efc3e8798: 14dc 48b9 | 00c0 74ef | 4e74 0000 | 660f 1f44 | 0000 660f | 1f44 0000 | 458b 590c | 4585 db0f 
  0x0000744efc3e87b8: 8c37 0a00 | 0044 3bdf | 7c05 4533 | c0eb 2445 | 8d43 0145 | 8941 0c44 | 3bda 0f83 | 8409 0000 
  0x0000744efc3e87d8: 438b 6c9a | 1085 ed0f | 8c4b 0b00 | 0041 b801 | 0000 004d | 8b9f 5004 

  0x0000744efc3e87f0: ; ImmutableOopMap {r10=Oop r9=Oop rbx=NarrowOop [8]=Oop [16]=Oop [24]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@31 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
                      ;   {poll}
  0x0000744efc3e87f0: 0000 4185 | 0345 85c0 | 75b6 4c8b | 5424 0845 | 8b52 0c44 | 8b5c 2424 | 448b 4c24 | 2843 8d6c 
  0x0000744efc3e8810: 0bff 413b | ea0f 8d7d | 0d00 004c | 8b54 2408 | 458b 521c | 448b 4424 | 2047 0faf | 44d4 1849 
  0x0000744efc3e8830: 63e8 4c8b | 4424 1845 

  0x0000744efc3e8838: ;   {metadata('jcuda/Pointer')}
  0x0000744efc3e8838: 8b50 0841 | 81fa f839 | 0001 0f85 | c00a 0000 | 4d8b b7b8 | 0100 004d | 8bd6 4983 | c228 4d3b 
  0x0000744efc3e8858: 97c8 0100 | 000f 8382 | 0600 004d | 8997 b801 | 0000 410f | 1882 0001 | 0000 49c7 | 0601 0000 
  0x0000744efc3e8878: ;   {metadata('jcuda/Pointer')}
  0x0000744efc3e8878: 0041 c746 | 08f8 3900 | 0145 8966 | 0c4d 8966 | 104d 8966 | 184d 8966 | 2049 0368 | 1849 896e 
  0x0000744efc3e8898: 1845 8b58 | 2045 895e | 204d 8b50 | 104d 8956 | 1045 8b58 | 0c45 895e | 0c4d 8b9f | b801 0000 
  0x0000744efc3e88b8: 4d8b d349 | 83c2 184d | 3b97 c801 | 0000 0f83 | 7506 0000 | 4d89 97b8 | 0100 0041 | 0f18 8200 
  0x0000744efc3e88d8: 0100 0049 | c703 0100 | 0000 410f | 1882 4001 

  0x0000744efc3e88e8: ;   {metadata({type array int})}
  0x0000744efc3e88e8: 0000 41c7 | 4308 3826 | 0000 410f | 1882 8001 | 0000 41c7 | 430c 0100 | 0000 4589 | 6314 448b 
  0x0000744efc3e8908: 5424 2445 | 8953 104d | 8b87 b801 | 0000 4d8b | d049 83c2 | 284d 3b97 | c801 0000 | 0f83 a006 
  0x0000744efc3e8928: 0000 4d89 | 97b8 0100 | 0041 0f18 | 8200 0100 | 0049 c700 | 0100 0000 

  0x0000744efc3e8940: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x0000744efc3e8940: 41c7 4008 | 188e 0201 | 4589 600c | 4589 6024 | 49c7 4010 | ffff ffff | 4d8b d349 | c1ea 0349 
  0x0000744efc3e8960: bb01 0000 | 0050 4400 | 004d 8958 | 1845 8950 | 204d 8baf | b801 0000 | 4d8b d549 | 83c2 384d 
  0x0000744efc3e8980: 3b97 c801 | 0000 0f83 | cb06 0000 | 4d89 97b8 | 0100 0041 | 0f18 8200 | 0100 0049 | c745 0001 
  0x0000744efc3e89a0: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x0000744efc3e89a0: 0000 0041 | c745 0810 | 9802 0145 | 8965 0c4d | 8965 104d | 8965 184d | 8965 2045 | 8965 2c4d 
  0x0000744efc3e89c0: 8965 304d | 8bd0 49c1 | ea03 4589 | 5528 4d8b | d049 8bdd | 48c1 eb03 | 4d8b dd4d | 33d3 49c1 
  0x0000744efc3e89e0: ea16 4d85 | d274 1049 | c1eb 0949 | 03cb 8039 | 020f 8520 | 0400 0041 | 807f 4000 | 0f85 5903 
  0x0000744efc3e8a00: 0000 4189 | 5d1c 410f | b66d 1841 | c745 0c50 | 0000 0045 | 8865 1a45 | 8965 1041 | c745 145f 
  0x0000744efc3e8a20: 0000 0085 | ed0f 85cd | 0b00 0041 | c645 1801 | 458b 4528 

  0x0000744efc3e8a34: ; implicit exception: dispatches to 0x0000744efc3e9af8
  0x0000744efc3e8a34: 438b 5cc4 | 0841 807f | 4000 0f85 | 4e03 0000 | 4589 6528 

  0x0000744efc3e8a48: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x0000000633825d00})}
  0x0000744efc3e8a48: 49ba 005d | 8233 0600 | 0000 410f | b66a 1941 | c745 146f | 0000 0185 | ed0f 84bd 

  0x0000744efc3e8a64: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x0000000633825d90})}
  0x0000744efc3e8a64: 0b00 0049 | ba90 5d82 | 3306 0000 | 0045 8b52 

  0x0000744efc3e8a74: ;   {oop(a 'java/util/stream/StreamOpFlag'{0x0000000633825d90})}
  0x0000744efc3e8a74: 2449 bb90 | 5d82 3306 | 0000 0045 | 8b5b 1c41 | 81e2 6f00 | 0001 453b | d30f 8569 | 0900 004f 
  0x0000744efc3e8a94: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x0000744efc3e8a94: 8d0c c481 | fb18 8e02 | 010f 8481 

  0x0000744efc3e8aa0: ;   {metadata('java/util/Spliterators$ArraySpliterator')}
  0x0000744efc3e8aa0: 0000 0081 | fbd0 a00e | 000f 85b9 | 0c00 0041 | 8b69 1c83 | e540 85ed | 0f84 d20e | 0000 4d8b 
  0x0000744efc3e8ac0: 5110 4d85 | d27c 7945 | 33db 4d3b | d3bd ffff | ffff 7c08 | 400f 95c5 | 400f b6ed | be45 ffff 
  0x0000744efc3e8ae0: ff48 8944 | 24f8 8b44 | 2428 8944 | 2418 488b | 4424 f84c | 8974 2428 | 4889 4424 | f88b 4424 
  0x0000744efc3e8b00: 2489 4424 | 1c48 8b44 | 24f8 4c89 | 6c24 304c | 894c 2438 

  0x0000744efc3e8b14: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e8b14: 6666 90e8 

  0x0000744efc3e8b18: ; ImmutableOopMap {[8]=Oop [16]=Oop [40]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$ArraySpliterator::estimateSize@6 (line 1042)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e8b18: e4a3 8cff 

  0x0000744efc3e8b1c: ;   {other}
  0x0000744efc3e8b1c: 0f1f 8400 | 8c09 0002 | 418b 691c | 83e5 4085 | ed0f 8459 | 0d00 004d | 8b51 104d | 85d2 0f8d 
  0x0000744efc3e8b3c: 940d 0000 | 49c1 e003 | 458b 5008 

  0x0000744efc3e8b48: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x0000744efc3e8b48: 4181 fa18 | 8e02 010f | 859b 0e00 | 0041 8b58 | 2045 8b4c 

  0x0000744efc3e8b5c: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x0000000633825d00})}
  0x0000744efc3e8b5c: dc0c 49ba | 005d 8233 | 0600 0000 | 450f b652 | 1845 85d2 | 0f84 4207 | 0000 418b | 4818 498d 
  0x0000744efc3e8b7c: 3cdc 6690 | 418b 680c | 85ed 0f8c | a806 0000 | 3be9 7c05 | 4533 d2eb | 2344 8d5d | 0145 8958 
  0x0000744efc3e8b9c: 0c41 3be9 | 0f83 0a06 | 0000 8b6c | af10 85ed | 0f8c 9607 | 0000 41ba | 0100 0000 | 498b 9750 
  0x0000744efc3e8bbc: ; ImmutableOopMap {r8=Oop rbx=NarrowOop rdi=Oop r14=Oop [8]=Oop [16]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@31 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
                      ;   {poll}
  0x0000744efc3e8bbc: 0400 0085 | 0245 85d2 | 75ba 4c8b | 5424 0841 | 8b6a 0c44 | 8b5c 2424 | 443b dd0f | 8d7b 0a00 
  0x0000744efc3e8bdc: 0045 8b52 | 1c43 8b4c | d418 440f | afd9 4c8b | 5424 0845 | 8b42 184d | 63db 4585 | c00f 84f1 
  0x0000744efc3e8bfc: 0600 0049 | 8b97 b801 | 0000 4c8b | d249 83c2 | 284d 3b97 | c801 0000 | 0f83 cd04 | 0000 4d89 
  0x0000744efc3e8c1c: 97b8 0100 | 0041 0f18 | 8200 0100 | 0048 c702 | 0100 0000 

  0x0000744efc3e8c30: ;   {metadata('jcuda/driver/CUdeviceptr')}
  0x0000744efc3e8c30: c742 0830 | aa00 0144 | 8962 0c4c | 8962 104c | 8962 184c | 8962 204f | 035c c418 | 4c89 5a18 
  0x0000744efc3e8c50: 478b 5cc4 | 2044 895a | 204f 8b54 | c410 4c89 | 5210 478b | 54c4 0c44 | 8952 0c4c | 8b5c 2410 
  0x0000744efc3e8c70: ; implicit exception: dispatches to 0x0000744efc3e9a78
  0x0000744efc3e8c70: 410f b66b | 0c44 8b44 | 2428 440f | afc1 4963 | c885 ed0f | 84fb 0900 | 0041 8b6b | 2085 ed0f 
  0x0000744efc3e8c90: 850f 0a00 | 0045 8b5b | 1c4d 8bcb | 49c1 e103 | 41b8 0200 | 0000 498b 

  0x0000744efc3e8ca8: ;   {static_call}
  0x0000744efc3e8ca8: f666 90e8 

  0x0000744efc3e8cac: ; ImmutableOopMap {}
                      ;*invokestatic cudaMemcpyAsyncNative {reexecute=0 rethrow=0 return_oop=0}
                      ; - jcuda.runtime.JCuda::cudaMemcpyAsync@7 (line 5696)
                      ; - JCudaWrapper.array.Array::get@73 (line 248)
  0x0000744efc3e8cac: 10ea feff 

  0x0000744efc3e8cb0: ;   {other}
  0x0000744efc3e8cb0: 0f1f 8400 | 200b 0004 

  0x0000744efc3e8cb8: ;   {oop(a 'java/lang/Class'{0x00000006338427c0} = 'jcuda/runtime/JCuda')}
  0x0000744efc3e8cb8: 49ba c027 | 8433 0600 | 0000 410f | b6aa 7d01 | 0000 85ed | 0f85 fa09 | 0000 85c0 | 0f85 0a0a 
  0x0000744efc3e8cd8: 0000 4883 

  0x0000744efc3e8cdc: ;   {poll_return}
  0x0000744efc3e8cdc: c450 5d49 | 3ba7 4804 | 0000 0f87 | 910e 0000 | c345 8b5e | 1c45 85db | 0f84 08f9 | ffff 4d8b 
  0x0000744efc3e8cfc: 5728 498b | fb48 c1e7 | 034d 85d2 | 0f84 4607 | 0000 4d8b | 5f38 4b89 | 7c13 f849 | 83c2 f84d 
  0x0000744efc3e8d1c: 8957 28e9 | def8 ffff | 458b 5628 | 4585 d20f | 8413 f9ff | ff4d 8b5f | 2849 8bfa | 48c1 e703 
  0x0000744efc3e8d3c: 4d85 db0f | 842c 0700 | 004d 8b57 | 384b 897c | 1af8 4983 | c3f8 4d89 | 5f28 e9e9 | f8ff ff45 
  0x0000744efc3e8d5c: 8b55 1c45 | 85d2 0f84 | 9afc ffff | 4d8b 5f28 | 498b fa48 | c1e7 034d | 85db 0f84 | 1207 0000 
  0x0000744efc3e8d7c: 4d8b 5738 | 4b89 7c1a | f849 83c3 | f84d 895f | 28e9 70fc | ffff 458b | 5d28 4585 | db0f 84a5 
  0x0000744efc3e8d9c: fcff ff4d | 8b57 2849 | 8bfb 48c1 | e703 4d85 | d20f 84f8 | 0600 004d | 8b5f 384b | 897c 13f8 
  0x0000744efc3e8dbc: 4983 c2f8 | 4d89 5728 | e97b fcff | ff4d 8b57 | 484d 8b5f | 58f0 8344 | 24c0 0080 | 3f00 0f84 
  0x0000744efc3e8ddc: ;   {no_reloc}
  0x0000744efc3e8ddc: 17f8 ffff | 4488 274d | 85d2 751d | 498b f749 | ba70 f6fa | 114f 7400 | 0041 ffd2 

  0x0000744efc3e8df8: ;   {other}
  0x0000744efc3e8df8: 0f1f 8400 | 0000 0000 | e9f2 f7ff | ff4b 897c | 13f8 4983 | c2f8 4d89 | 5748 e9e0 | f7ff ff4d 
  0x0000744efc3e8e18: 8b57 484d | 8b5f 58f0 | 8344 24c0 | 0080 3900 | 0f84 c9fb | ffff 4488 | 214d 85d2 | 7520 488b 
  0x0000744efc3e8e38: f949 8bf7 | 49ba 70f6 | fa11 4f74 | 0000 41ff 

  0x0000744efc3e8e48: ;   {other}
  0x0000744efc3e8e48: d20f 1f84 | 0000 0000 | 00e9 a1fb | ffff 4b89 | 4c13 f849 | 83c2 f84d | 8957 48e9 | 8ffb ffff 
  0x0000744efc3e8e68: ;   {metadata({type array int})}
  0x0000744efc3e8e68: 48be 3826 | 008b 4e74 | 0000 ba03 | 0000 0048 | 8b6c 2408 

  0x0000744efc3e8e7c: ;   {runtime_call _new_array_Java}
  0x0000744efc3e8e7c: 6666 90e8 

  0x0000744efc3e8e80: ; ImmutableOopMap {rbp=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - JCudaWrapper.array.Array::get@1 (line 245)
  0x0000744efc3e8e80: fc3b 99ff 

  0x0000744efc3e8e84: ;   {other}
  0x0000744efc3e8e84: 0f1f 8400 | f40c 0005 | 488b e8e9 | 57f6 ffff 

  0x0000744efc3e8e94: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x0000744efc3e8e94: 48be 188e | 028c 4e74 

  0x0000744efc3e8e9c: ;   {runtime_call _new_instance_Java}
  0x0000744efc3e8e9c: 0000 90e8 

  0x0000744efc3e8ea0: ; ImmutableOopMap {rbp=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.Spliterators::spliterator@13 (line 240)
                      ; - java.util.Arrays::spliterator@6 (line 5435)
                      ; - java.util.Arrays::stream@3 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e8ea0: dc38 99ff 

  0x0000744efc3e8ea4: ;   {other}
  0x0000744efc3e8ea4: 0f1f 8400 | 140d 0006 | 4c8b d8e9 | 93f6 ffff 

  0x0000744efc3e8eb4: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x0000744efc3e8eb4: 48be 1098 | 028c 4e74 | 0000 488b | 6c24 084c | 895c 2438 

  0x0000744efc3e8ec8: ;   {runtime_call _new_instance_Java}
  0x0000744efc3e8ec8: 6666 90e8 

  0x0000744efc3e8ecc: ; ImmutableOopMap {rbp=Oop [8]=Oop [16]=Oop [24]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.StreamSupport::intStream@0 (line 138)
                      ; - java.util.Arrays::stream@7 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e8ecc: b038 99ff 

  0x0000744efc3e8ed0: ;   {other}
  0x0000744efc3e8ed0: 0f1f 8400 | 400d 0007 | 4c8b f04c | 8b5c 2438 | e9d4 f6ff | ff48 894c | 2430 4489 | 5c24 204c 
  0x0000744efc3e8ef0: 8944 2418 | 48ff 7424 | 0848 8f04 

  0x0000744efc3e8efc: ;   {metadata('jcuda/Pointer')}
  0x0000744efc3e8efc: 2448 bef8 | 3900 8c4e 

  0x0000744efc3e8f04: ;   {runtime_call _new_instance_Java}
  0x0000744efc3e8f04: 7400 00e8 

  0x0000744efc3e8f08: ; ImmutableOopMap {[0]=Oop [16]=Oop [24]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jcuda.Pointer::withByteOffset@0 (line 516)
                      ; - JCudaWrapper.array.Array::get@48 (line 249)
  0x0000744efc3e8f08: 7438 99ff 

  0x0000744efc3e8f0c: ;   {other}
  0x0000744efc3e8f0c: 0f1f 8400 | 7c0d 0008 | 48ff 3424 | 488f 4424 | 084c 8b44 | 2418 4889 | 4424 f88b | 4424 2089 
  0x0000744efc3e8f2c: 4424 2448 | 8b44 24f8 | 488b 4c24 | 304c 8bf0 | e950 f9ff | ff4c 8974 | 2430 4889 | 4c24 1848 
  0x0000744efc3e8f4c: 8944 24f8 | 8b44 2428 | 8944 2404 | 488b 4424 | f848 8944 | 24f8 8b44 | 2424 8904 | 2448 8b44 
  0x0000744efc3e8f6c: 24f8 488b 

  0x0000744efc3e8f70: ;   {metadata({type array int})}
  0x0000744efc3e8f70: 6c24 0848 | be38 2600 | 8b4e 7400 | 00ba 0100 

  0x0000744efc3e8f80: ;   {runtime_call _new_array_Java}
  0x0000744efc3e8f80: 0000 90e8 

  0x0000744efc3e8f84: ; ImmutableOopMap {rbp=Oop [16]=Oop [48]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - JCudaWrapper.array.Array::pointer@1 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e8f84: f83a 99ff 

  0x0000744efc3e8f88: ;   {other}
  0x0000744efc3e8f88: 0f1f 8400 | f80d 0009 | 4889 6c24 | 0848 8944 | 24f8 8b04 | 2489 4424 | 2448 8b44 | 24f8 4889 
  0x0000744efc3e8fa8: 4424 f88b | 4424 0489 | 4424 2848 | 8b44 24f8 | 488b 4c24 | 184c 8b74 | 2430 4c8b | d8e9 3cf9 
  0x0000744efc3e8fc8: ffff 4c89 | 5c24 384c | 8974 2430 | 4889 4c24 | 1848 8944 | 24f8 8b44 | 2428 8944 | 2404 488b 
  0x0000744efc3e8fe8: 4424 f848 | 8944 24f8 | 8b44 2424 | 8904 2448 | 8b44 24f8 | 488b 6c24 

  0x0000744efc3e9000: ;   {metadata('java/util/Spliterators$IntArraySpliterator')}
  0x0000744efc3e9000: 0848 be18 | 8e02 8c4e 

  0x0000744efc3e9008: ;   {runtime_call _new_instance_Java}
  0x0000744efc3e9008: 7400 00e8 

  0x0000744efc3e900c: ; ImmutableOopMap {rbp=Oop [16]=Oop [48]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.Spliterators::spliterator@13 (line 240)
                      ; - java.util.Arrays::spliterator@6 (line 5435)
                      ; - java.util.Arrays::stream@3 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e900c: 7037 99ff 

  0x0000744efc3e9010: ;   {other}
  0x0000744efc3e9010: 0f1f 8400 | 800e 000a | 4889 6c24 | 0848 8944 | 24f8 8b04 | 2489 4424 | 2448 8b44 | 24f8 4889 
  0x0000744efc3e9030: 4424 f88b | 4424 0489 | 4424 2848 | 8b44 24f8 | 488b 4c24 | 184c 8b74 | 2430 4c8b | 5c24 384c 
  0x0000744efc3e9050: 8bc0 e9f9 | f8ff ff4c | 8944 2438 | 4c89 7424 | 3048 894c | 2418 4889 | 4424 f88b | 4424 2889 
  0x0000744efc3e9070: 4424 0448 | 8b44 24f8 | 4889 4424 | f88b 4424 | 2489 0424 | 488b 4424 | f848 8b6c 

  0x0000744efc3e908c: ;   {metadata('java/util/stream/IntPipeline$Head')}
  0x0000744efc3e908c: 2408 48be | 1098 028c | 4e74 0000 

  0x0000744efc3e9098: ;   {runtime_call _new_instance_Java}
  0x0000744efc3e9098: 6666 90e8 

  0x0000744efc3e909c: ; ImmutableOopMap {rbp=Oop [16]=Oop [48]=Oop [56]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.stream.StreamSupport::intStream@0 (line 138)
                      ; - java.util.Arrays::stream@7 (line 5577)
                      ; - java.util.Arrays::stream@4 (line 5559)
                      ; - JCudaWrapper.array.Array::checkLowerBound@1 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e909c: e036 99ff 

  0x0000744efc3e90a0: ;   {other}
  0x0000744efc3e90a0: 0f1f 8400 | 100f 000b | 4889 6c24 | 0848 8944 | 24f8 8b04 | 2489 4424 | 2448 8b44 | 24f8 4889 
  0x0000744efc3e90c0: 4424 f88b | 4424 0489 | 4424 2848 | 8b44 24f8 | 488b 4c24 | 184c 8b74 | 2430 4c8b | 4424 384c 
  0x0000744efc3e90e0: 8be8 e9dc | f8ff ff4c | 895c 2420 | 894c 2404 | 4c89 7424 | 1848 8944 | 24f8 8b44 | 2428 8904 
  0x0000744efc3e9100: 2448 8b44 | 24f8 4c8b | 5424 084b | 8d2c c444 | 8944 2408 

  0x0000744efc3e9114: ;   {metadata('jcuda/driver/CUdeviceptr')}
  0x0000744efc3e9114: 48be 30aa | 008c 4e74 | 0000 4c89 

  0x0000744efc3e9120: ;   {runtime_call _new_instance_Java}
  0x0000744efc3e9120: 5424 28e8 

  0x0000744efc3e9124: ; ImmutableOopMap {rbp=Oop [8]=NarrowOop [16]=Oop [24]=Oop [40]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - jcuda.driver.CUdeviceptr::withByteOffset@0 (line 69)
                      ; - JCudaWrapper.array.Array::pointer@35 (line 109)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e9124: 5836 99ff 

  0x0000744efc3e9128: ;   {other}
  0x0000744efc3e9128: 0f1f 8400 | 980f 000c | 4889 4424 | f88b 0424 | 8944 2428 | 488b 4424 | f84c 8b74 | 2418 8b4c 
  0x0000744efc3e9148: 2404 448b | 4424 084c | 8b5c 2420 | 488b d0e9 | ebfa ffff | bee4 ffff | ff49 8be9 | 4489 1c24 
  0x0000744efc3e9168: 4889 4424 | f88b 4424 | 2089 4424 | 0448 8b44 | 24f8 4889 | 4424 f88b | 4424 2489 | 4424 2048 
  0x0000744efc3e9188: 8b44 24f8 | 4889 4424 | f88b 4424 | 2889 4424 | 2448 8b44 | 24f8 895c 

  0x0000744efc3e91a0: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e91a0: 2428 90e8 

  0x0000744efc3e91a4: ; ImmutableOopMap {rbp=Oop [8]=Oop [16]=Oop [24]=Oop [40]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@46 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e91a4: 589d 8cff 

  0x0000744efc3e91a8: ;   {other}
  0x0000744efc3e91a8: 0f1f 8400 | 1810 000d | bee4 ffff | ff48 8944 | 24f8 8b44 | 2428 8944 | 2418 488b | 4424 f84c 
  0x0000744efc3e91c8: 8974 2428 | 4889 4424 | f88b 4424 | 2489 4424 | 1c48 8b44 | 24f8 4c89 | 4424 2089 

  0x0000744efc3e91e4: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e91e4: 5c24 30e8 

  0x0000744efc3e91e8: ; ImmutableOopMap {[8]=Oop [16]=Oop [32]=Oop [40]=Oop [48]=NarrowOop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@46 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e91e8: 149d 8cff 

  0x0000744efc3e91ec: ;   {other}
  0x0000744efc3e91ec: 0f1f 8400 | 5c10 000e | be45 ffff | ff49 8be9 | 4489 1c24 | 4889 4424 | f88b 4424 | 2089 4424 
  0x0000744efc3e920c: 0448 8b44 | 24f8 4889 | 4424 f88b | 4424 2489 | 4424 2048 | 8b44 24f8 

  0x0000744efc3e9224: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9224: 6666 90e8 

  0x0000744efc3e9228: ; ImmutableOopMap {rbp=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::tryAdvance@16 (line 1132)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e9228: d49c 8cff 

  0x0000744efc3e922c: ;   {other}
  0x0000744efc3e922c: 0f1f 8400 | 9c10 000f | be45 ffff | ff48 8944 | 24f8 8b44 | 2428 8944 | 2418 488b | 4424 f84c 
  0x0000744efc3e924c: 8974 2428 | 4889 4424 | f88b 4424 | 2489 4424 | 1c48 8b44 | 24f8 4c89 

  0x0000744efc3e9264: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9264: 4424 20e8 

  0x0000744efc3e9268: ; ImmutableOopMap {[8]=Oop [16]=Oop [32]=Oop [40]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::tryAdvance@16 (line 1132)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e9268: 949c 8cff 

  0x0000744efc3e926c: ;   {other}
  0x0000744efc3e926c: 0f1f 8400 | dc10 0010 | bebe ffff | ff49 8be9 | 4c8b 5424 | 084c 8914 | 244c 8b54 | 2410 4c89 
  0x0000744efc3e928c: 5424 084c | 8b54 2418 | 4c89 5424 | 1048 8944 | 24f8 8b44 | 2420 8944 | 2418 488b 

  0x0000744efc3e92a8: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e92a8: 4424 f8e8 

  0x0000744efc3e92ac: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@20 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e92ac: 509c 8cff 

  0x0000744efc3e92b0: ;   {other}
  0x0000744efc3e92b0: 0f1f 8400 | 2011 0011 | bebe ffff | ff4c 8b54 | 2410 4c89 | 1424 4c89 | 7424 1848 | 8944 24f8 
  0x0000744efc3e92d0: 8b44 2424 | 8944 2414 | 488b 4424 | f84c 8944 

  0x0000744efc3e92e0: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e92e0: 2420 90e8 

  0x0000744efc3e92e4: ; ImmutableOopMap {[0]=Oop [8]=Oop [24]=Oop [32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.IntPipeline::forEachWithCancel@20 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e92e4: 189c 8cff 

  0x0000744efc3e92e8: ;   {other}
  0x0000744efc3e92e8: 0f1f 8400 | 5811 0012 | bef6 ffff | ff49 8beb 

  0x0000744efc3e92f8: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e92f8: 6666 90e8 

  0x0000744efc3e92fc: ; ImmutableOopMap {}
                      ;*invokevirtual withByteOffset {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::pointer@35 (line 109)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e92fc: 009c 8cff 

  0x0000744efc3e9300: ;   {other}
  0x0000744efc3e9300: 0f1f 8400 | 7011 0013 | bede ffff | ff48 ff74 | 2408 488f | 0424 4c8b | 5424 104c | 8954 2408 
  0x0000744efc3e9320: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9320: 6666 90e8 

  0x0000744efc3e9324: ; ImmutableOopMap {[0]=Oop [8]=Oop [24]=Oop }
                      ;*invokevirtual withByteOffset {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::get@48 (line 249)
  0x0000744efc3e9324: d89b 8cff 

  0x0000744efc3e9328: ;   {other}
  0x0000744efc3e9328: 0f1f 8400 | 9811 0014 | be45 ffff | ff4c 890c 

  0x0000744efc3e9338: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9338: 2466 90e8 

  0x0000744efc3e933c: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::lambda$checkLowerBound$1@2 (line 351)
                      ; - JCudaWrapper.array.Array$$Lambda/0x0000744e8c00b280::test@5
                      ; - java.util.stream.MatchOps$2MatchSink::accept@12 (line 119)
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@47 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e933c: c09b 8cff 

  0x0000744efc3e9340: ;   {other}
  0x0000744efc3e9340: 0f1f 8400 | b011 0015 | be45 ffff | ff48 8944 | 24f8 8b44 | 2428 8944 | 2418 488b | 4424 f84c 
  0x0000744efc3e9360: 8974 2428 | 4889 4424 | f88b 4424 | 2489 4424 | 1c48 8b44 | 24f8 4c89 

  0x0000744efc3e9378: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9378: 4424 20e8 

  0x0000744efc3e937c: ; ImmutableOopMap {[8]=Oop [16]=Oop [32]=Oop [40]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::lambda$checkLowerBound$1@2 (line 351)
                      ; - JCudaWrapper.array.Array$$Lambda/0x0000744e8c00b280::test@5
                      ; - java.util.stream.MatchOps$2MatchSink::accept@12 (line 119)
                      ; - java.util.Spliterators$IntArraySpliterator::tryAdvance@47 (line 1133)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@26 (line 163)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e937c: 809b 8cff 

  0x0000744efc3e9380: ;   {other}
  0x0000744efc3e9380: 0f1f 8400 | f011 0016 | be45 ffff | ff48 8b6c | 2408 4c8b | 4424 104c | 8904 244c | 8b44 2418 
  0x0000744efc3e93a0: 4c89 4424 | 0848 8944 | 24f8 8b44 | 2420 8944 | 2410 488b | 4424 f848 | 8944 24f8 | 8b44 2424 
  0x0000744efc3e93c0: 8944 2414 | 488b 4424 | f848 8944 | 24f8 8b44 | 2428 8944 | 2418 488b | 4424 f84c | 8974 2420 
  0x0000744efc3e93e0: 895c 241c | 4489 5424 | 2844 895c 

  0x0000744efc3e93ec: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e93ec: 242c 90e8 

  0x0000744efc3e93f0: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [28]=NarrowOop [32]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.StreamOpFlag::isKnown@10 (line 503)
                      ; - java.util.stream.AbstractPipeline::copyInto@12 (line 507)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e93f0: 0c9b 8cff 

  0x0000744efc3e93f4: ;   {other}
  0x0000744efc3e93f4: 0f1f 8400 | 6412 0017 | be45 ffff | ff4c 8b4c | 2410 4c89 | 0c24 4889 | 4424 f88b | 4424 2889 
  0x0000744efc3e9414: 4424 1048 | 8b44 24f8 | 4c89 7424 | 1848 8944 | 24f8 8b44 | 2424 8944 | 2414 488b | 4424 f84c 
  0x0000744efc3e9434: 896c 2420 | 4489 4424 | 2844 8954 | 242c 4489 

  0x0000744efc3e9444: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9444: 5c24 30e8 

  0x0000744efc3e9448: ; ImmutableOopMap {[0]=Oop [8]=Oop [24]=Oop [32]=Oop [40]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.StreamOpFlag::isKnown@10 (line 503)
                      ; - java.util.stream.AbstractPipeline::copyInto@12 (line 507)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e9448: b49a 8cff 

  0x0000744efc3e944c: ;   {other}
  0x0000744efc3e944c: 0f1f 8400 | bc12 0018 | 498b f749 | ba40 f6fa | 114f 7400 | 0041 ffd2 

  0x0000744efc3e9464: ;   {other}
  0x0000744efc3e9464: 0f1f 8400 | 0000 0000 | e991 f1ff | ff49 8bf7 | 49ba 40f6 | fa11 4f74 | 0000 41ff 

  0x0000744efc3e9480: ;   {other}
  0x0000744efc3e9480: d20f 1f84 | 0000 0000 | 00e9 b6f1 | ffff 498b | f749 ba40 | f6fa 114f | 7400 0041 

  0x0000744efc3e949c: ;   {other}
  0x0000744efc3e949c: ffd2 0f1f | 8400 0000 | 0000 e957 | f5ff ff44 | 8944 2420 | 4c89 6c24 | 184c 8934 | 2449 8bf7 
  0x0000744efc3e94bc: 49ba 40f6 | fa11 4f74 | 0000 41ff 

  0x0000744efc3e94c8: ;   {other}
  0x0000744efc3e94c8: d20f 1f84 | 0000 0000 | 004c 8b34 | 244c 8b6c | 2418 448b | 4424 20e9 | 60f5 ffff | be45 ffff 
  0x0000744efc3e94e8: ff4c 8b54 | 2408 4c89 | 1424 4c8b | 5424 104c | 8954 2408 | 4c8b 5424 | 184c 8954 | 2410 4889 
  0x0000744efc3e9508: 4424 f88b | 4424 2089 | 4424 1848 | 8b44 24f8 

  0x0000744efc3e9518: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9518: 6666 90e8 

  0x0000744efc3e951c: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::evaluate@31 (line 228)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e951c: e099 8cff 

  0x0000744efc3e9520: ;   {other}
  0x0000744efc3e9520: 0f1f 8400 | 9013 0019 | be45 ffff | ff4c 8b54 | 2408 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x0000744efc3e9540: 4c8b 5424 | 184c 8954 | 2410 4889 | 4424 f88b | 4424 2089 | 4424 1848 | 8b44 24f8 | 4889 4424 
  0x0000744efc3e9560: f88b 4424 | 2489 4424 | 1c48 8b44 | 24f8 4889 | 4424 f88b | 4424 2889 | 4424 2048 | 8b44 24f8 
  0x0000744efc3e9580: 895c 2424 | 4c89 7424 

  0x0000744efc3e9588: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9588: 2866 90e8 

  0x0000744efc3e958c: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [36]=NarrowOop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.MatchOps$BooleanTerminalSink::<init>@9 (line 257)
                      ; - java.util.stream.MatchOps$2MatchSink::<init>@12 (line 114)
                      ; - java.util.stream.MatchOps::lambda$makeInt$1@6 (line 126)
                      ; - java.util.stream.MatchOps$$Lambda/0x0000744e8c02a9e0::get@8
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@5 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e958c: 7099 8cff 

  0x0000744efc3e9590: ;   {other}
  0x0000744efc3e9590: 0f1f 8400 | 0014 001a | be45 ffff | ff48 ff74 | 2408 488f | 0424 4c8b | 5c24 104c | 895c 2408 
  0x0000744efc3e95b0: 4c8b 5c24 | 184c 895c | 2410 4889 | 4424 f88b | 4424 2089 | 4424 1848 | 8b44 24f8 | 4889 4424 
  0x0000744efc3e95d0: f88b 4424 | 2489 4424 | 1c48 8b44 | 24f8 4489 | 4c24 2044 | 8954 2428 

  0x0000744efc3e95e8: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e95e8: 6666 90e8 

  0x0000744efc3e95ec: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::checkUpperBound@25 (line 381)
                      ; - JCudaWrapper.array.Array::checkAgainstLength@6 (line 362)
                      ; - JCudaWrapper.array.Array::get@34 (line 246)
  0x0000744efc3e95ec: 1099 8cff 

  0x0000744efc3e95f0: ;   {other}
  0x0000744efc3e95f0: 0f1f 8400 | 6014 001b | be45 ffff | ff48 8944 | 24f8 8b44 | 2428 8944 | 2418 488b | 4424 f84c 
  0x0000744efc3e9610: 8974 2428 

  0x0000744efc3e9614: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9614: 6666 90e8 

  0x0000744efc3e9618: ; ImmutableOopMap {[8]=Oop [16]=Oop [40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::evaluate@31 (line 228)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e9618: e498 8cff 

  0x0000744efc3e961c: ;   {other}
  0x0000744efc3e961c: 0f1f 8400 | 8c14 001c | be45 ffff | ff48 8944 | 24f8 8b44 | 2428 8944 | 2418 488b | 4424 f84c 
  0x0000744efc3e963c: 8974 2428 | 4489 4424 | 204c 896c 

  0x0000744efc3e9648: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9648: 2430 90e8 

  0x0000744efc3e964c: ; ImmutableOopMap {[8]=Oop [16]=Oop [32]=NarrowOop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.MatchOps$BooleanTerminalSink::<init>@9 (line 257)
                      ; - java.util.stream.MatchOps$2MatchSink::<init>@12 (line 114)
                      ; - java.util.stream.MatchOps::lambda$makeInt$1@6 (line 126)
                      ; - java.util.stream.MatchOps$$Lambda/0x0000744e8c02a9e0::get@8
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@5 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e964c: b098 8cff 

  0x0000744efc3e9650: ;   {other}
  0x0000744efc3e9650: 0f1f 8400 | c014 001d | be45 ffff | ff48 8944 | 24f8 8b44 | 2428 8944 | 2418 488b | 4424 f84c 
  0x0000744efc3e9670: 8974 2428 

  0x0000744efc3e9674: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9674: 6666 90e8 

  0x0000744efc3e9678: ; ImmutableOopMap {[8]=Oop [16]=Oop [40]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::checkUpperBound@25 (line 381)
                      ; - JCudaWrapper.array.Array::checkAgainstLength@6 (line 362)
                      ; - JCudaWrapper.array.Array::pointer@18 (line 107)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e9678: 8498 8cff 

  0x0000744efc3e967c: ;   {other}
  0x0000744efc3e967c: 0f1f 8400 | ec14 001e | be45 ffff | ff4c 8934 | 2448 8954 | 2408 4889 

  0x0000744efc3e9694: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9694: 4c24 10e8 

  0x0000744efc3e9698: ; ImmutableOopMap {[0]=Oop [8]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.resourceManagement.Handle::getStream@4 (line 109)
                      ; - JCudaWrapper.array.Array::get@70 (line 253)
  0x0000744efc3e9698: 6498 8cff 

  0x0000744efc3e969c: ;   {other}
  0x0000744efc3e969c: 0f1f 8400 | 0c15 001f | be45 ffff | ff4c 8934 | 2448 8954 | 2408 4889 | 4c24 104c | 895c 2418 
  0x0000744efc3e96bc: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e96bc: 6666 90e8 

  0x0000744efc3e96c0: ; ImmutableOopMap {rbp=NarrowOop [0]=Oop [8]=Oop [24]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.resourceManagement.Handle::getStream@21 (line 110)
                      ; - JCudaWrapper.array.Array::get@70 (line 253)
  0x0000744efc3e96c0: 3c98 8cff 

  0x0000744efc3e96c4: ;   {other}
  0x0000744efc3e96c4: 0f1f 8400 | 3415 0020 | be45 ffff | ff89 0424 

  0x0000744efc3e96d4: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e96d4: 6666 90e8 

  0x0000744efc3e96d8: ; ImmutableOopMap {}
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jcuda.runtime.JCuda::checkResult@3 (line 514)
                      ; - jcuda.runtime.JCuda::cudaMemcpyAsync@10 (line 5696)
                      ; - JCudaWrapper.array.Array::get@73 (line 248)
  0x0000744efc3e96d8: 2498 8cff 

  0x0000744efc3e96dc: ;   {other}
  0x0000744efc3e96dc: 0f1f 8400 | 4c15 0021 | be45 ffff | ff89 0424 

  0x0000744efc3e96ec: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e96ec: 6666 90e8 

  0x0000744efc3e96f0: ; ImmutableOopMap {}
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::get@80 (line 255)
  0x0000744efc3e96f0: 0c98 8cff 

  0x0000744efc3e96f4: ;   {other}
  0x0000744efc3e96f4: 0f1f 8400 | 6415 0022 | bec6 ffff | ff48 8b6c | 2408 4c8b | 5424 104c | 8914 244c | 8b54 2418 
  0x0000744efc3e9714: 4c89 5424 | 0848 8944 | 24f8 8b44 | 2420 8944 | 2410 488b | 4424 f848 | 8944 24f8 | 8b44 2424 
  0x0000744efc3e9734: 8944 2414 | 488b 4424 | f848 8944 | 24f8 8b44 | 2428 8944 | 2418 488b | 4424 f84c | 8974 2420 
  0x0000744efc3e9754: 895c 2428 

  0x0000744efc3e9758: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9758: 6666 90e8 

  0x0000744efc3e975c: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [32]=Oop [40]=NarrowOop }
                      ;*invokeinterface getExactSizeIfKnown {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e975c: a097 8cff 

  0x0000744efc3e9760: ;   {other}
  0x0000744efc3e9760: 0f1f 8400 | d015 0023 | bec6 ffff | ff4c 8b54 | 2410 4c89 | 1424 4889 | 4424 f88b | 4424 2889 
  0x0000744efc3e9780: 4424 1048 | 8b44 24f8 | 4c89 7424 | 1848 8944 | 24f8 8b44 | 2424 8944 | 2414 488b | 4424 f84c 
  0x0000744efc3e97a0: 896c 2428 | 4489 4424 

  0x0000744efc3e97a8: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e97a8: 2466 90e8 

  0x0000744efc3e97ac: ; ImmutableOopMap {[0]=Oop [8]=Oop [24]=Oop [36]=NarrowOop [40]=Oop }
                      ;*invokeinterface getExactSizeIfKnown {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e97ac: 5097 8cff 

  0x0000744efc3e97b0: ;   {other}
  0x0000744efc3e97b0: 0f1f 8400 | 2016 0024 | be45 ffff | ff4c 8b54 | 2408 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x0000744efc3e97d0: 4c8b 5424 | 184c 8954 | 2410 4889 | 4424 f88b | 4424 2089 | 4424 1848 | 8b44 24f8 | 4889 4424 
  0x0000744efc3e97f0: f88b 4424 | 2889 4424 | 2048 8b44 | 24f8 4c89 | 4424 284c | 8974 2430 

  0x0000744efc3e9808: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9808: 6666 90e8 

  0x0000744efc3e980c: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e980c: f096 8cff 

  0x0000744efc3e9810: ;   {other}
  0x0000744efc3e9810: 0f1f 8400 | 8016 0025 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x0000744efc3e9830: ffff 4c8b | 5424 084c | 8914 244c | 8b54 2410 | 4c89 5424 | 084c 8b54 | 2418 4c89 | 5424 1048 
  0x0000744efc3e9850: 8944 24f8 | 8b44 2420 | 8944 2418 | 488b 4424 | f848 8944 | 24f8 8b44 | 2428 8944 | 2420 488b 
  0x0000744efc3e9870: 4424 f84c | 8974 2430 | 4c89 4424 

  0x0000744efc3e987c: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e987c: 3866 90e8 

  0x0000744efc3e9880: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::estimateSize@6 (line 1141)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e9880: 7c96 8cff 

  0x0000744efc3e9884: ;   {other}
  0x0000744efc3e9884: 0f1f 8400 | f416 0026 | be45 ffff | ff48 8944 | 24f8 8b44 | 2428 8944 | 2418 488b | 4424 f84c 
  0x0000744efc3e98a4: 8974 2428 | 4889 4424 | f88b 4424 | 2489 4424 | 1c48 8b44 | 24f8 4c89 | 4c24 204c | 896c 2430 
  0x0000744efc3e98c4: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e98c4: 6666 90e8 

  0x0000744efc3e98c8: ; ImmutableOopMap {[8]=Oop [16]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e98c8: 3496 8cff 

  0x0000744efc3e98cc: ;   {other}
  0x0000744efc3e98cc: 0f1f 8400 | 3c17 0027 | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edbe 45ff 
  0x0000744efc3e98ec: ffff 4889 | 4424 f88b | 4424 2889 | 4424 1848 | 8b44 24f8 | 4c89 7424 | 2848 8944 | 24f8 8b44 
  0x0000744efc3e990c: 2424 8944 | 241c 488b | 4424 f84c | 896c 2430 | 4c89 4c24 

  0x0000744efc3e9920: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9920: 3866 90e8 

  0x0000744efc3e9924: ; ImmutableOopMap {[8]=Oop [16]=Oop [40]=Oop [48]=Oop [56]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterators$IntArraySpliterator::estimateSize@6 (line 1141)
                      ; - java.util.Spliterator::getExactSizeIfKnown@19 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e9924: d895 8cff 

  0x0000744efc3e9928: ;   {other}
  0x0000744efc3e9928: 0f1f 8400 | 9817 0028 | be45 ffff | ff4c 8b54 | 2408 4c89 | 1424 4c8b | 5424 104c | 8954 2408 
  0x0000744efc3e9948: 4c8b 5424 | 184c 8954 | 2410 4889 | 4424 f88b | 4424 2089 | 4424 1848 | 8b44 24f8 | 4889 4424 
  0x0000744efc3e9968: f88b 4424 | 2889 4424 | 2048 8b44 | 24f8 4c89 | 4424 284c | 8974 2430 

  0x0000744efc3e9980: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9980: 6666 90e8 

  0x0000744efc3e9984: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e9984: 7895 8cff 

  0x0000744efc3e9988: ;   {other}
  0x0000744efc3e9988: 0f1f 8400 | f817 0029 | be45 ffff | ff48 8944 | 24f8 8b44 | 2428 8944 | 2418 488b | 4424 f84c 
  0x0000744efc3e99a8: 8974 2428 | 4889 4424 | f88b 4424 | 2489 4424 | 1c48 8b44 | 24f8 4c89 | 4c24 204c | 896c 2430 
  0x0000744efc3e99c8: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e99c8: 6666 90e8 

  0x0000744efc3e99cc: ; ImmutableOopMap {[8]=Oop [16]=Oop [32]=Oop [40]=Oop [48]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.Spliterator::getExactSizeIfKnown@9 (line 414)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@19 (line 526)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e99cc: 3095 8cff 

  0x0000744efc3e99d0: ;   {other}
  0x0000744efc3e99d0: 0f1f 8400 | 4018 002a | bede ffff | ff4c 890c 

  0x0000744efc3e99e0: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e99e0: 2466 90e8 

  0x0000744efc3e99e4: ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.IntPipeline::adapt@1 (line 118)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@1 (line 160)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e99e4: 1895 8cff 

  0x0000744efc3e99e8: ;   {other}
  0x0000744efc3e99e8: 0f1f 8400 | 5818 002b | bede ffff | ff4c 8b54 | 2410 4c89 | 1424 4889 | 4424 f88b | 4424 2889 
  0x0000744efc3e9a08: 4424 1048 | 8b44 24f8 | 4c89 7424 | 1848 8944 | 24f8 8b44 | 2424 8944 | 2414 488b | 4424 f84c 
  0x0000744efc3e9a28: 8944 2428 

  0x0000744efc3e9a2c: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9a2c: 6666 90e8 

  0x0000744efc3e9a30: ; ImmutableOopMap {[0]=Oop [8]=Oop [24]=Oop [40]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.IntPipeline::adapt@1 (line 118)
                      ; - java.util.stream.IntPipeline::forEachWithCancel@1 (line 160)
                      ; - java.util.stream.AbstractPipeline::copyIntoWithCancel@32 (line 527)
                      ; - java.util.stream.AbstractPipeline::copyInto@49 (line 513)
                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@14 (line 230)
                      ; - java.util.stream.MatchOps$MatchOp::evaluateSequential@3 (line 196)
                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e9a30: cc94 8cff 

  0x0000744efc3e9a34: ;   {other}
  0x0000744efc3e9a34: 0f1f 8400 | a418 002c | bef6 ffff 

  0x0000744efc3e9a40: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9a40: ff66 90e8 

  0x0000744efc3e9a44: ; ImmutableOopMap {}
                      ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::get@43 (line 248)
  0x0000744efc3e9a44: b894 8cff 

  0x0000744efc3e9a48: ;   {other}
  0x0000744efc3e9a48: 0f1f 8400 | b818 002d | bef6 ffff 

  0x0000744efc3e9a54: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9a54: ff66 90e8 

  0x0000744efc3e9a58: ; ImmutableOopMap {}
                      ;*invokevirtual withByteOffset {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::get@48 (line 249)
  0x0000744efc3e9a58: a494 8cff 

  0x0000744efc3e9a5c: ;   {other}
  0x0000744efc3e9a5c: 0f1f 8400 | cc18 002e | bef6 ffff 

  0x0000744efc3e9a68: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9a68: ff66 90e8 

  0x0000744efc3e9a6c: ; ImmutableOopMap {}
                      ;*getfield size {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::pointer@30 (line 109)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e9a6c: 9094 8cff 

  0x0000744efc3e9a70: ;   {other}
  0x0000744efc3e9a70: 0f1f 8400 | e018 002f | bef6 ffff 

  0x0000744efc3e9a7c: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9a7c: ff66 90e8 

  0x0000744efc3e9a80: ; ImmutableOopMap {}
                      ;*invokevirtual getStream {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::get@70 (line 253)
  0x0000744efc3e9a80: 7c94 8cff 

  0x0000744efc3e9a84: ;   {other}
  0x0000744efc3e9a84: 0f1f 8400 | f418 0030 | be45 ffff | ff48 8b6c | 2408 4c8b | 5424 104c | 8914 244c | 8b54 2418 
  0x0000744efc3e9aa4: 4c89 5424 | 0848 8944 | 24f8 8b44 | 2420 8944 | 2410 488b | 4424 f848 | 8944 24f8 | 8b44 2424 
  0x0000744efc3e9ac4: 8944 2414 | 488b 4424 | f848 8944 | 24f8 8b44 | 2428 8944 | 2418 488b | 4424 f84c | 8974 2428 
  0x0000744efc3e9ae4: 895c 241c 

  0x0000744efc3e9ae8: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9ae8: 6666 90e8 

  0x0000744efc3e9aec: ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [28]=NarrowOop [40]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::sourceSpliterator@9 (line 400)
                      ; - java.util.stream.AbstractPipeline::evaluate@85 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::get@17 (line 245)
  0x0000744efc3e9aec: 1094 8cff 

  0x0000744efc3e9af0: ;   {other}
  0x0000744efc3e9af0: 0f1f 8400 | 6019 0031 | be45 ffff | ff4c 8b54 | 2410 4c89 | 1424 4889 | 4424 f88b | 4424 2889 
  0x0000744efc3e9b10: 4424 1048 | 8b44 24f8 | 4c89 7424 | 1848 8944 | 24f8 8b44 | 2424 8944 | 2414 488b | 4424 f84c 
  0x0000744efc3e9b30: 896c 2428 | 4489 4424 

  0x0000744efc3e9b38: ;   {runtime_call UncommonTrapBlob}
  0x0000744efc3e9b38: 3066 90e8 

  0x0000744efc3e9b3c: ; ImmutableOopMap {[0]=Oop [8]=Oop [24]=Oop [40]=Oop [48]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.stream.AbstractPipeline::sourceSpliterator@9 (line 400)
                      ; - java.util.stream.AbstractPipeline::evaluate@85 (line 234)
                      ; - java.util.stream.IntPipeline::anyMatch@8 (line 537)
                      ; - JCudaWrapper.array.Array::checkLowerBound@10 (line 351)
                      ; - JCudaWrapper.array.Array::checkPositive@2 (line 340)
                      ; - JCudaWrapper.array.Array::pointer@7 (line 106)
                      ; - JCudaWrapper.array.Array::get@54 (line 250)
  0x0000744efc3e9b3c: c093 8cff 

  0x0000744efc3e9b40: ;   {other}
  0x0000744efc3e9b40: 0f1f 8400 | b019 0032 | 488b f0eb | 2648 8bf0 | eb21 488b | f0eb 1c48 | 8bf0 eb17 | 488b f0eb 
  0x0000744efc3e9b60: 1248 8bf0 | eb0d 488b | f0eb 0848 | 8bf0 eb03 | 488b f048 | 83c4 505d 

  0x0000744efc3e9b78: ;   {runtime_call _rethrow_Java}
  0x0000744efc3e9b78: e983 5799 

  0x0000744efc3e9b7c: ;   {internal_word}
  0x0000744efc3e9b7c: ff49 badf | 8c3e fc4e | 7400 004d | 8997 6004 

  0x0000744efc3e9b8c: ;   {runtime_call SafepointBlob}
  0x0000744efc3e9b8c: 0000 e96d 

  0x0000744efc3e9b90: ;   {runtime_call StubRoutines (final stubs)}
  0x0000744efc3e9b90: a48c ffe8 | 0899 8aff | e9dd e8ff | fff4 f4f4 
[Stub Code]
  0x0000744efc3e9ba0: ;   {no_reloc}
  0x0000744efc3e9ba0: 48bb 0000 | 0000 0000 

  0x0000744efc3e9ba8: ;   {runtime_call nmethod}
  0x0000744efc3e9ba8: 0000 e9fb 

  0x0000744efc3e9bac: ;   {runtime_call ExceptionBlob}
  0x0000744efc3e9bac: ffff ffe9 | 4cdc 98ff 
[Deopt Handler Code]
  0x0000744efc3e9bb4: e800 0000 | 0048 832c 

  0x0000744efc3e9bbc: ;   {runtime_call DeoptimizationBlob}
  0x0000744efc3e9bbc: 2405 e9dd | 968c fff4 | f4f4 f4f4 
[/MachCode]


Compiled method (c1) 593  720       3       JCudaWrapper.array.DArray::get (26 bytes)
 total in heap  [0x0000744ef4905190,0x0000744ef4906790] = 5632
 relocation     [0x0000744ef49052e8,0x0000744ef4905430] = 328
 main code      [0x0000744ef4905440,0x0000744ef4906230] = 3568
 stub code      [0x0000744ef4906230,0x0000744ef49062c8] = 152
 oops           [0x0000744ef49062c8,0x0000744ef49062e8] = 32
 metadata       [0x0000744ef49062e8,0x0000744ef4906378] = 144
 scopes data    [0x0000744ef4906378,0x0000744ef4906548] = 464
 scopes pcs     [0x0000744ef4906548,0x0000744ef4906758] = 528
 dependencies   [0x0000744ef4906758,0x0000744ef4906768] = 16
 nul chk table  [0x0000744ef4906768,0x0000744ef4906790] = 40

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x0000744e80497910} 'get' '(LJCudaWrapper/resourceManagement/Handle;[DIII)V' in 'JCudaWrapper/array/DArray'
  # this:     rsi:rsi   = 'JCudaWrapper/array/DArray'
  # parm0:    rdx:rdx   = 'JCudaWrapper/resourceManagement/Handle'
  # parm1:    rcx:rcx   = '[D'
  # parm2:    r8        = int
  # parm3:    r9        = int
  # parm4:    rdi       = int
  #           [sp+0x110]  (sp of caller)
  0x0000744ef4905440: 448b 5608 | 49bb 0000 | 008b 4e74 | 0000 4d03 | d34c 3bd0 

  0x0000744ef4905454: ;   {runtime_call ic_miss_stub}
  0x0000744ef4905454: 0f85 267c | 3a07 660f | 1f44 0000 
[Verified Entry Point]
  0x0000744ef4905460: e91b 0b36 | 07fe ff55 | 4881 ec00 | 0100 0090 | 4181 7f20 | 0100 0000 

  0x0000744ef4905478: ;   {runtime_call StubRoutines (final stubs)}
  0x0000744ef4905478: 7405 e821 | e038 0748 | 89b4 24c8 | 0000 0048 | 8994 24d0 | 0000 0048 | 898c 24c0 | 0000 0044 
  0x0000744ef4905498: 8984 24bc | 0000 0044 | 898c 24d8 | 0000 0089 | bc24 b800 

  0x0000744ef49054ac: ;   {metadata(method data for {method} {0x0000744e80497910} 'get' '(LJCudaWrapper/resourceManagement/Handle;[DIII)V' in 'JCudaWrapper/array/DArray')}
  0x0000744ef49054ac: 0000 48bb | c88b 4b80 | 4e74 0000 | 8b83 f400 | 0000 83c0 | 0289 83f4 | 0000 0025 | fe07 0000 
  0x0000744ef49054cc: 85c0 0f84 | 750a 0000 | bb01 0000 

  0x0000744ef49054d8: ;   {metadata('java/lang/Object'[])}
  0x0000744ef49054d8: 0048 ba40 | 1200 8b4e | 7400 004c | 8be9 4863 | db48 8bfb | 4881 fbff | ffff 000f | 8771 0a00 
  0x0000744ef49054f8: 0048 c7c6 | 1700 0000 | 488d 349e | 4883 e6f8 | 498b 87b8 | 0100 0048 | 8d34 3049 | 3bb7 c801 
  0x0000744ef4905518: 0000 0f87 | 4a0a 0000 | 4989 b7b8 | 0100 0048 | 2bf0 48c7 | 0001 0000 | 0048 8bca | 49ba 0000 
  0x0000744ef4905538: 008b 4e74 | 0000 492b | ca89 4808 | 8958 0c48 | 83ee 1048 | 85f6 0f84 | 1100 0000 | 4833 db48 
  0x0000744ef4905558: c1ee 0348 | 895c f008 | 48ff ce75 | f64d 85ed 

  0x0000744ef4905568: ;   {metadata(method data for {method} {0x0000744e80497910} 'get' '(LJCudaWrapper/resourceManagement/Handle;[DIII)V' in 'JCudaWrapper/array/DArray')}
  0x0000744ef4905568: 7516 48ba | c88b 4b80 | 4e74 0000 | 808a 3101 | 0000 01e9 | fa00 0000 

  0x0000744ef4905580: ; implicit exception: dispatches to 0x0000744ef4905f74
  0x0000744ef4905580: 8b70 0849 | ba00 0000 | 8b4e 7400 | 0049 03f2 | 418b 5508 | 49ba 0000 | 008b 4e74 | 0000 4903 
  0x0000744ef49055a0: d248 8bb6 | d000 0000 | 483b d60f | 8427 0000 | 008b 4e14 | 483b 340a | 0f84 1a00 | 0000 83f9 
  0x0000744ef49055c0: 200f 859c | 0000 0052 

  0x0000744ef49055c8: ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x0000744ef49055c8: 56e8 32d1 | 4607 5a5e | 85f6 0f84 | 8b00 0000 

  0x0000744ef49055d8: ;   {metadata(method data for {method} {0x0000744e80497910} 'get' '(LJCudaWrapper/resourceManagement/Handle;[DIII)V' in 'JCudaWrapper/array/DArray')}
  0x0000744ef49055d8: 48ba c88b | 4b80 4e74 | 0000 418b | 7508 49ba | 0000 008b | 4e74 0000 | 4903 f248 | 3bb2 4801 
  0x0000744ef49055f8: 0000 750d | 4883 8250 | 0100 0001 | e971 0000 | 0048 3bb2 | 5801 0000 | 750d 4883 | 8260 0100 
  0x0000744ef4905618: 0001 e95b | 0000 0048 | 83ba 4801 | 0000 0075 | 1748 89b2 | 4801 0000 | 48c7 8250 | 0100 0001 
  0x0000744ef4905638: 0000 00e9 | 3a00 0000 | 4883 ba58 | 0100 0000 | 7517 4889 | b258 0100 | 0048 c782 | 6001 0000 
  0x0000744ef4905658: 0100 0000 | e919 0000 

  0x0000744ef4905660: ;   {metadata(method data for {method} {0x0000744e80497910} 'get' '(LJCudaWrapper/resourceManagement/Handle;[DIII)V' in 'JCudaWrapper/array/DArray')}
  0x0000744ef4905660: 00eb 1748 | bac8 8b4b | 804e 7400 | 0048 83aa | 3801 0000 | 01e9 ff08 | 0000 488d | 7010 410f 
  0x0000744ef4905680: be57 4085 | d20f 85f7 | 0800 004d | 8bd5 49c1 | ea03 4489 | 1648 8bd6 | 4933 d548 | c1ea 1648 
  0x0000744ef49056a0: 83fa 000f | 85f7 0800 

  0x0000744ef49056a8: ;   {metadata(method data for {method} {0x0000744e80497910} 'get' '(LJCudaWrapper/resourceManagement/Handle;[DIII)V' in 'JCudaWrapper/array/DArray')}
  0x0000744ef49056a8: 0048 bec8 | 8b4b 804e | 7400 0048 | 8386 7001 

  0x0000744ef49056b8: ;   {metadata(method data for {method} {0x0000744e80495c20} 'checkNull' '([Ljava/lang/Object;)V' in 'JCudaWrapper/array/Array')}
  0x0000744ef49056b8: 0000 0148 | bec8 dc4a | 804e 7400 | 008b 96f4 | 0000 0083 | c202 8996 | f400 0000 | 81e2 feff 
  0x0000744ef49056d8: 1f00 85d2 | 0f84 d608 

  0x0000744ef49056e0: ;   {metadata(method data for {method} {0x0000744e80495c20} 'checkNull' '([Ljava/lang/Object;)V' in 'JCudaWrapper/array/Array')}
  0x0000744ef49056e0: 0000 48be | c8dc 4a80 | 4e74 0000 | 4883 8638 | 0100 0001 

  0x0000744ef49056f4: ;   {metadata(method data for {method} {0x0000744e8b416340} 'stream' '([Ljava/lang/Object;)Ljava/util/stream/Stream;' in 'java/util/Arrays')}
  0x0000744ef49056f4: 48be 8876 | 3380 4e74 | 0000 8b96 | f400 0000 | 83c2 0289 | 96f4 0000 | 0081 e2fe | ff1f 0085 
  0x0000744ef4905714: d20f 84be 

  0x0000744ef4905718: ;   {metadata(method data for {method} {0x0000744e8b416340} 'stream' '([Ljava/lang/Object;)Ljava/util/stream/Stream;' in 'java/util/Arrays')}
  0x0000744ef4905718: 0800 0048 | be88 7633 | 804e 7400 | 0048 8386 | 3801 0000 

  0x0000744ef490572c: ;   {metadata(method data for {method} {0x0000744e8b4162e8} 'stream' '([Ljava/lang/Object;II)Ljava/util/stream/Stream;' in 'java/util/Arrays')}
  0x0000744ef490572c: 0148 be10 | 7833 804e | 7400 008b | 96f4 0000 | 0083 c202 | 8996 f400 | 0000 81e2 | feff 1f00 
  0x0000744ef490574c: 85d2 0f84 | a608 0000 

  0x0000744ef4905754: ;   {metadata(method data for {method} {0x0000744e8b4162e8} 'stream' '([Ljava/lang/Object;II)Ljava/util/stream/Stream;' in 'java/util/Arrays')}
  0x0000744ef4905754: 48be 1078 | 3380 4e74 | 0000 4883 | 8638 0100 

  0x0000744ef4905764: ;   {metadata(method data for {method} {0x0000744e8b4159f8} 'spliterator' '([Ljava/lang/Object;II)Ljava/util/Spliterator;' in 'java/util/Arrays')}
  0x0000744ef4905764: 0001 48be | b879 3380 | 4e74 0000 | 8b96 f400 | 0000 83c2 | 0289 96f4 | 0000 0081 | e2fe ff1f 
  0x0000744ef4905784: 0085 d20f | 848e 0800 

  0x0000744ef490578c: ;   {metadata(method data for {method} {0x0000744e8b4159f8} 'spliterator' '([Ljava/lang/Object;II)Ljava/util/Spliterator;' in 'java/util/Arrays')}
  0x0000744ef490578c: 0048 beb8 | 7933 804e | 7400 0048 | 8386 3801 | 0000 0148 | 8bf0 ba00 | 0000 00b9 | 0100 0000 
  0x0000744ef49057ac: 41b8 1004 | 0000 0f1f 

  0x0000744ef49057b4: ;   {static_call}
  0x0000744ef49057b4: 4400 00e8 

  0x0000744ef49057b8: ; ImmutableOopMap {[192]=Oop [200]=Oop [208]=Oop }
                      ;*invokestatic spliterator {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Arrays::spliterator@6 (line 5396)
                      ; - java.util.Arrays::stream@3 (line 5547)
                      ; - java.util.Arrays::stream@4 (line 5528)
                      ; - JCudaWrapper.array.Array::checkNull@1 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef49057b8: 64ce ad07 

  0x0000744ef49057bc: ;   {other}
  0x0000744ef49057bc: 0f1f 8400 | 2c06 0000 

  0x0000744ef49057c4: ;   {metadata(method data for {method} {0x0000744e8b4162e8} 'stream' '([Ljava/lang/Object;II)Ljava/util/stream/Stream;' in 'java/util/Arrays')}
  0x0000744ef49057c4: 48be 1078 | 3380 4e74 | 0000 4883 | 8648 0100 | 0001 488b | f0ba 0000 

  0x0000744ef49057dc: ;   {static_call}
  0x0000744ef49057dc: 0000 90e8 

  0x0000744ef49057e0: ; ImmutableOopMap {[192]=Oop [200]=Oop [208]=Oop }
                      ;*invokestatic stream {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.Arrays::stream@7 (line 5547)
                      ; - java.util.Arrays::stream@4 (line 5528)
                      ; - JCudaWrapper.array.Array::checkNull@1 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef49057e0: 3cbe ad07 

  0x0000744ef49057e4: ;   {other}
  0x0000744ef49057e4: 0f1f 8400 | 5406 0001 

  0x0000744ef49057ec: ;   {metadata(method data for {method} {0x0000744e8b0afef8} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000744ef49057ec: 48be 88f1 | 3280 4e74 | 0000 488d | b610 0200 

  0x0000744ef49057fc: ;   {oop(a 'java/lang/invoke/BoundMethodHandle$Species_L'{0x0000000633842378})}
  0x0000744ef49057fc: 0048 ba78 | 2384 3306 | 0000 0048 | 85d2 750a | f606 0175 | 05f0 4883 

  0x0000744ef4905814: ;   {metadata(method data for {method} {0x0000744e80495c20} 'checkNull' '([Ljava/lang/Object;)V' in 'JCudaWrapper/array/Array')}
  0x0000744ef4905814: 0e01 48be | c8dc 4a80 | 4e74 0000 | 4883 8648 | 0100 0001 

  0x0000744ef4905828: ;   {metadata(method data for {method} {0x0000744e8b0afef8} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000744ef4905828: 48be 88f1 | 3280 4e74 | 0000 8bbe | f400 0000 | 83c7 0289 | bef4 0000 | 0081 e7fe | ff1f 0085 
  0x0000744ef4905848: ff0f 84ed 

  0x0000744ef490584c: ;   {metadata(method data for {method} {0x0000744e80400a20} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000744e8c000800')}
  0x0000744ef490584c: 0700 0048 | be48 0c40 | 804e 7400 | 0048 8db6 | c801 0000 | 4885 d275 | 0af6 0601 | 7505 f048 
  0x0000744ef490586c: ;   {metadata(method data for {method} {0x0000744e8b0afef8} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000744ef490586c: 830e 0148 | be88 f132 | 804e 7400 | 0048 8386 | 7001 0000 

  0x0000744ef4905880: ;   {metadata(method data for {method} {0x0000744e80400a20} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000744e8c000800')}
  0x0000744ef4905880: 0148 be48 | 0c40 804e | 7400 008b | 96f4 0000 | 0083 c202 | 8996 f400 | 0000 81e2 | feff 1f00 
  0x0000744ef49058a0: 85d2 0f84 | b507 0000 

  0x0000744ef49058a8: ;   {metadata(method data for {method} {0x0000744e8b0afef8} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000744ef49058a8: 48be 88f1 | 3280 4e74 | 0000 488d | b6a8 0100 

  0x0000744ef49058b8: ;   {oop(a 'JCudaWrapper/array/Array$$Lambda+0x0000744e8c00b4c0'{0x0000000633825d80})}
  0x0000744ef49058b8: 0048 ba80 | 5d82 3306 | 0000 0048 | 85d2 750a | f606 0175 | 05f0 4883 

  0x0000744ef49058d0: ;   {metadata(method data for {method} {0x0000744e80495c20} 'checkNull' '([Ljava/lang/Object;)V' in 'JCudaWrapper/array/Array')}
  0x0000744ef49058d0: 0e01 48be | c8dc 4a80 | 4e74 0000 | 488d b658 | 0100 0048 | 85d2 750a | f606 0175 | 05f0 4883 
  0x0000744ef49058f0: 0e01 4885 | c00f 8429 

  0x0000744ef49058f8: ;   {metadata('java/util/stream/ReferencePipeline')}
  0x0000744ef49058f8: 0000 0048 | b998 250e | 8b4e 7400 | 008b 5808 | 49ba 0000 | 008b 4e74 | 0000 4903 | da48 3b4b 
  0x0000744ef4905918: 480f 855f | 0700 00e9 | 0000 0000 | 488b f048 | 3b00 488b 

  0x0000744ef490592c: ;   {metadata(method data for {method} {0x0000744e80495c20} 'checkNull' '([Ljava/lang/Object;)V' in 'JCudaWrapper/array/Array')}
  0x0000744ef490592c: f048 bfc8 | dc4a 804e | 7400 008b | 7608 49ba | 0000 008b | 4e74 0000 | 4903 f248 | 3bb7 7801 
  0x0000744ef490594c: 0000 750d | 4883 8780 | 0100 0001 | e960 0000 | 0048 3bb7 | 8801 0000 | 750d 4883 | 8790 0100 
  0x0000744ef490596c: 0001 e94a | 0000 0048 | 83bf 7801 | 0000 0075 | 1748 89b7 | 7801 0000 | 48c7 8780 | 0100 0001 
  0x0000744ef490598c: 0000 00e9 | 2900 0000 | 4883 bf88 | 0100 0000 | 7517 4889 | b788 0100 | 0048 c787 | 9001 0000 
  0x0000744ef49059ac: 0100 0000 | e908 0000 | 0048 8387 | 6801 0000 

  0x0000744ef49059bc: ;   {metadata(method data for {method} {0x0000744e8b0e38f0} 'anyMatch' '(Ljava/util/function/Predicate;)Z' in 'java/util/stream/ReferencePipeline')}
  0x0000744ef49059bc: 0148 be48 | 7d33 804e | 7400 008b | bef4 0000 | 0083 c702 | 89be f400 | 0000 81e7 | feff 1f00 
  0x0000744ef49059dc: 85ff 0f84 | a406 0000 

  0x0000744ef49059e4: ;   {metadata(method data for {method} {0x0000744e8b0e38f0} 'anyMatch' '(Ljava/util/function/Predicate;)Z' in 'java/util/stream/ReferencePipeline')}
  0x0000744ef49059e4: 48be 487d | 3380 4e74 | 0000 4883 | 8638 0100 | 0001 488b 

  0x0000744ef49059f8: ;   {oop(a 'java/util/stream/MatchOps$MatchKind'{0x0000000633825d00})}
  0x0000744ef49059f8: f248 ba00 | 5d82 3306 | 0000 0048 | 8984 24e0 | 0000 000f 

  0x0000744ef4905a0c: ;   {static_call}
  0x0000744ef4905a0c: 1f40 00e8 

  0x0000744ef4905a10: ; ImmutableOopMap {[192]=Oop [200]=Oop [208]=Oop [224]=Oop }
                      ;*invokestatic makeRef {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.ReferencePipeline::anyMatch@5 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef4905a10: acd0 ad07 

  0x0000744ef4905a14: ;   {other}
  0x0000744ef4905a14: 0f1f 8400 | 8408 0002 | 488b 9424 | e000 0000 

  0x0000744ef4905a24: ;   {metadata(method data for {method} {0x0000744e8b0e38f0} 'anyMatch' '(Ljava/util/function/Predicate;)Z' in 'java/util/stream/ReferencePipeline')}
  0x0000744ef4905a24: 48be 487d | 3380 4e74 | 0000 4883 | 8648 0100 | 0001 488b | d048 8bb4 | 24e0 0000 | 0066 0f1f 
  0x0000744ef4905a44: ;   {optimized virtual_call}
  0x0000744ef4905a44: 4400 00e8 

  0x0000744ef4905a48: ; ImmutableOopMap {[192]=Oop [200]=Oop [208]=Oop }
                      ;*invokevirtual evaluate {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.ReferencePipeline::anyMatch@8 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef4905a48: b433 ad07 

  0x0000744ef4905a4c: ;   {other}
  0x0000744ef4905a4c: 0f1f 8400 | bc08 0003 | 4885 c075 

  0x0000744ef4905a58: ;   {metadata(method data for {method} {0x0000744e8b0e38f0} 'anyMatch' '(Ljava/util/function/Predicate;)Z' in 'java/util/stream/ReferencePipeline')}
  0x0000744ef4905a58: 1648 bf48 | 7d33 804e | 7400 0080 | 8f79 0100 | 0001 e9cc 

  0x0000744ef4905a6c: ;   {metadata('java/lang/Boolean')}
  0x0000744ef4905a6c: 0000 0048 | ba00 6100 | 8b4e 7400 | 008b 7008 | 49ba 0000 | 008b 4e74 | 0000 4903 | f248 3bd6 
  0x0000744ef4905a8c: 0f85 8d00 

  0x0000744ef4905a90: ;   {metadata(method data for {method} {0x0000744e8b0e38f0} 'anyMatch' '(Ljava/util/function/Predicate;)Z' in 'java/util/stream/ReferencePipeline')}
  0x0000744ef4905a90: 0000 48bf | 487d 3380 | 4e74 0000 | 8b50 0849 | ba00 0000 | 8b4e 7400 | 0049 03d2 | 483b 9790 
  0x0000744ef4905ab0: 0100 0075 | 0d48 8387 | 9801 0000 | 01e9 7900 | 0000 483b | 97a0 0100 | 0075 0d48 | 8387 a801 
  0x0000744ef4905ad0: 0000 01e9 | 6300 0000 | 4883 bf90 | 0100 0000 | 7517 4889 | 9790 0100 | 0048 c787 | 9801 0000 
  0x0000744ef4905af0: 0100 0000 | e942 0000 | 0048 83bf | a001 0000 | 0075 1748 | 8997 a001 | 0000 48c7 | 87a8 0100 
  0x0000744ef4905b10: 0001 0000 | 00e9 2100 | 0000 e91c 

  0x0000744ef4905b1c: ;   {metadata(method data for {method} {0x0000744e8b0e38f0} 'anyMatch' '(Ljava/util/function/Predicate;)Z' in 'java/util/stream/ReferencePipeline')}
  0x0000744ef4905b1c: 0000 0048 | bf48 7d33 | 804e 7400 | 0048 83af | 8001 0000 | 01e9 7305 | 0000 e900 | 0000 0048 
  0x0000744ef4905b3c: 8bd0 483b | 0248 8bf2 

  0x0000744ef4905b44: ;   {metadata(method data for {method} {0x0000744e8b0e38f0} 'anyMatch' '(Ljava/util/function/Predicate;)Z' in 'java/util/stream/ReferencePipeline')}
  0x0000744ef4905b44: 48bf 487d | 3380 4e74 | 0000 4883 | 87b8 0100 | 0001 0fbe | 520c 83e2 | 0183 e201 

  0x0000744ef4905b60: ;   {metadata(method data for {method} {0x0000744e80495c20} 'checkNull' '([Ljava/lang/Object;)V' in 'JCudaWrapper/array/Array')}
  0x0000744ef4905b60: 85d2 48ba | c8dc 4a80 | 4e74 0000 | 48c7 c6b0 | 0100 0075 | 0748 c7c6 | a001 0000 | 488b 3c32 
  0x0000744ef4905b80: 488d 7f01 | 4889 3c32 | 0f85 1c03 | 0000 488b | 8c24 c000 

  0x0000744ef4905b94: ;   {metadata(method data for {method} {0x0000744e80497910} 'get' '(LJCudaWrapper/resourceManagement/Handle;[DIII)V' in 'JCudaWrapper/array/DArray')}
  0x0000744ef4905b94: 0000 48ba | c88b 4b80 | 4e74 0000 | 4883 8280 | 0100 0001 

  0x0000744ef4905ba8: ;   {metadata(method data for {method} {0x0000744e80457670} 'to' '([D)Ljcuda/Pointer;' in 'jcuda/Pointer')}
  0x0000744ef4905ba8: 48ba 0080 | 4b80 4e74 | 0000 8bb2 | f400 0000 | 83c6 0289 | b2f4 0000 | 0081 e6fe | ff1f 0085 
  0x0000744ef4905bc8: f60f 84e8 

  0x0000744ef4905bcc: ;   {metadata('jcuda/Pointer')}
  0x0000744ef4905bcc: 0400 0048 | baf8 3900 | 8c4e 7400 | 0048 8bd9 | 498b 87b8 | 0100 0048 | 8d78 2849 | 3bbf c801 
  0x0000744ef4905bec: 0000 0f87 | e404 0000 | 4989 bfb8 | 0100 0048 | c700 0100 | 0000 488b | ca49 ba00 | 0000 8b4e 
  0x0000744ef4905c0c: 7400 0049 | 2bca 8948 | 0848 33c9 | 8948 0c48 | 33c9 4889 | 4810 4889 | 4818 4889 

  0x0000744ef4905c28: ;   {metadata(method data for {method} {0x0000744e80457670} 'to' '([D)Ljcuda/Pointer;' in 'jcuda/Pointer')}
  0x0000744ef4905c28: 4820 48be | 0080 4b80 | 4e74 0000 | 4883 8638 | 0100 0001 

  0x0000744ef4905c3c: ;   {metadata(method data for {method} {0x0000744e80083ec8} 'wrap' '([D)Ljava/nio/DoubleBuffer;' in 'java/nio/DoubleBuffer')}
  0x0000744ef4905c3c: 48be f882 | 3380 4e74 | 0000 8b96 | f400 0000 | 83c2 0289 | 96f4 0000 | 0081 e2fe | ff1f 0085 
  0x0000744ef4905c5c: d20f 8482 | 0400 008b 

  0x0000744ef4905c64: ;   {metadata(method data for {method} {0x0000744e80083ec8} 'wrap' '([D)Ljava/nio/DoubleBuffer;' in 'java/nio/DoubleBuffer')}
  0x0000744ef4905c64: 4b0c 48be | f882 3380 | 4e74 0000 | 4883 8638 | 0100 0001 | 488b f3ba | 0000 0000 | 4889 8424 
  0x0000744ef4905c84: e800 0000 | 0f1f 8000 

  0x0000744ef4905c8c: ;   {static_call}
  0x0000744ef4905c8c: 0000 00e8 

  0x0000744ef4905c90: ; ImmutableOopMap {[200]=Oop [208]=Oop [232]=Oop }
                      ;*invokestatic wrap {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.nio.DoubleBuffer::wrap@4 (line 465)
                      ; - jcuda.Pointer::to@5 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x0000744ef4905c90: 8cdc ad07 

  0x0000744ef4905c94: ;   {other}
  0x0000744ef4905c94: 0f1f 8400 | 040b 0004 | 488b 9424 | e800 0000 

  0x0000744ef4905ca4: ;   {metadata(method data for {method} {0x0000744e80457670} 'to' '([D)Ljcuda/Pointer;' in 'jcuda/Pointer')}
  0x0000744ef4905ca4: 48b9 0080 | 4b80 4e74 | 0000 4883 | 8148 0100 

  0x0000744ef4905cb4: ;   {metadata(method data for {method} {0x0000744e80455398} '<init>' '(Ljava/nio/Buffer;)V' in 'jcuda/Pointer')}
  0x0000744ef4905cb4: 0001 48ba | 78ce 4a80 | 4e74 0000 | 8b8a f400 | 0000 83c1 | 0289 8af4 | 0000 0081 | e1fe ff1f 
  0x0000744ef4905cd4: 0085 c90f | 842e 0400 | 0048 8b94 | 24e8 0000 

  0x0000744ef4905ce4: ;   {metadata(method data for {method} {0x0000744e80455398} '<init>' '(Ljava/nio/Buffer;)V' in 'jcuda/Pointer')}
  0x0000744ef4905ce4: 0048 b978 | ce4a 804e | 7400 0048 | 8381 3801 

  0x0000744ef4905cf4: ;   {metadata(method data for {method} {0x0000744e8040ada8} '<init>' '()V' in 'jcuda/NativePointerObject')}
  0x0000744ef4905cf4: 0000 0148 | ba00 c84a | 804e 7400 | 008b 8af4 | 0000 0083 | c102 898a | f400 0000 | 81e1 feff 
  0x0000744ef4905d14: 1f00 85c9 | 0f84 0e04 | 0000 488b | 9424 e800 

  0x0000744ef4905d24: ;   {metadata(method data for {method} {0x0000744e8040ada8} '<init>' '()V' in 'jcuda/NativePointerObject')}
  0x0000744ef4905d24: 0000 48b9 | 00c8 4a80 | 4e74 0000 | 4883 8138 | 0100 0001 

  0x0000744ef4905d38: ;   {metadata(method data for {method} {0x0000744e8b4709c0} '<init>' '()V' in 'java/lang/Object')}
  0x0000744ef4905d38: 48ba 6894 | 0080 4e74 | 0000 8b8a | f400 0000 | 83c1 0289 | 8af4 0000 | 0081 e1fe | ff1f 0085 
  0x0000744ef4905d58: c90f 84ee | 0300 0048 | c7c2 0000 | 0000 488b | 8c24 e800 | 0000 49c7 | c200 0000 | 004c 8951 
  0x0000744ef4905d78: 1041 0fbe | 5740 85d2 | 0f85 e803 | 0000 4c8b | d049 c1ea | 0344 8951 | 0c48 8bd1 | 4833 d048 
  0x0000744ef4905d98: c1ea 1648 | 83fa 000f | 85e8 0300 | 0041 0fbe | 5740 85d2 | 0f85 f303 | 0000 c741 | 2000 0000 
  0x0000744ef4905db8: 0049 c7c2 | 0000 0000 | 4c89 5118 | 488b b424 | c800 0000 

  0x0000744ef4905dcc: ;   {metadata(method data for {method} {0x0000744e80497910} 'get' '(LJCudaWrapper/resourceManagement/Handle;[DIII)V' in 'JCudaWrapper/array/DArray')}
  0x0000744ef4905dcc: 48ba c88b | 4b80 4e74 | 0000 8b76 | 0849 ba00 | 0000 8b4e | 7400 0049 | 03f2 483b | b2a0 0100 
  0x0000744ef4905dec: 0075 0d48 | 8382 a801 | 0000 01e9 | 6000 0000 | 483b b2b0 | 0100 0075 | 0d48 8382 | b801 0000 
  0x0000744ef4905e0c: 01e9 4a00 | 0000 4883 | baa0 0100 | 0000 7517 | 4889 b2a0 | 0100 0048 | c782 a801 | 0000 0100 
  0x0000744ef4905e2c: 0000 e929 | 0000 0048 | 83ba b001 | 0000 0075 | 1748 89b2 | b001 0000 | 48c7 82b8 | 0100 0001 
  0x0000744ef4905e4c: 0000 00e9 | 0800 0000 | 4883 8290 | 0100 0001 | 488b 9424 | d000 0000 | 448b 8424 | bc00 0000 
  0x0000744ef4905e6c: 448b 8c24 | d800 0000 | 8bbc 24b8 | 0000 0048 | 8bb4 24c8 | 0000 000f 

  0x0000744ef4905e84: ;   {optimized virtual_call}
  0x0000744ef4905e84: 1f40 00e8 

  0x0000744ef4905e88: ; ImmutableOopMap {}
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.DArray::get@22 (line 134)
  0x0000744ef4905e88: d425 ae07 

  0x0000744ef4905e8c: ;   {other}
  0x0000744ef4905e8c: 0f1f 8400 | fc0c 0005 | 4881 c400 | 0100 005d 

  0x0000744ef4905e9c: ;   {poll_return}
  0x0000744ef4905e9c: 493b a748 | 0400 000f | 871b 0300 | 00c3 660f | 1f44 0000 

  0x0000744ef4905eb0: ;   {no_reloc}
  0x0000744ef4905eb0: e934 0300 | 0000 0000 | 0000 498b | 87b8 0100 | 0048 8d78 | 3049 3bbf | c801 0000 | 0f87 2103 
  0x0000744ef4905ed0: 0000 4989 | bfb8 0100 | 0048 c700 | 0100 0000 | 488b ca49 | ba00 0000 | 8b4e 7400 | 0049 2bca 
  0x0000744ef4905ef0: 8948 0848 | 33c9 8948 | 0c48 33c9 | 4889 4810 | 4889 4818 | 4889 4820 | 4889 4828 

  0x0000744ef4905f0c: ;   {metadata(method data for {method} {0x0000744e80495c20} 'checkNull' '([Ljava/lang/Object;)V' in 'JCudaWrapper/array/Array')}
  0x0000744ef4905f0c: 488b f048 | bfc8 dc4a | 804e 7400 | 0048 8387 | c001 0000 | 0148 8bf0 | 4889 8424 | f000 0000 
  0x0000744ef4905f2c: ;   {optimized virtual_call}
  0x0000744ef4905f2c: 6666 90e8 

  0x0000744ef4905f30: ; ImmutableOopMap {[192]=Oop [200]=Oop [208]=Oop [240]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::checkNull@21 (line 393)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef4905f30: 4c74 3a07 

  0x0000744ef4905f34: ;   {other}
  0x0000744ef4905f34: 0f1f 8400 | a40d 0006 | 488b 8424 | f000 0000 | e9d4 0200 

  0x0000744ef4905f48: ;   {metadata({method} {0x0000744e80497910} 'get' '(LJCudaWrapper/resourceManagement/Handle;[DIII)V' in 'JCudaWrapper/array/DArray')}
  0x0000744ef4905f48: 0049 ba10 | 7949 804e | 7400 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000744ef4905f60: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000744ef4905f60: e89b ec46 

  0x0000744ef4905f64: ; ImmutableOopMap {rsi=Oop rdx=Oop rcx=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*synchronization entry
                      ; - JCudaWrapper.array.DArray::get@-1 (line 133)
  0x0000744ef4905f64: 07e9 6af5 

  0x0000744ef4905f68: ;   {runtime_call new_object_array Runtime1 stub}
  0x0000744ef4905f68: ffff e891 

  0x0000744ef4905f6c: ; ImmutableOopMap {r13=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.DArray::get@1 (line 133)
  0x0000744ef4905f6c: af46 07e9 | f1f5 ffff 

  0x0000744ef4905f74: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000744ef4905f74: e887 9d46 

  0x0000744ef4905f78: ; ImmutableOopMap {r13=Oop rax=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.DArray::get@7 (line 133)
  0x0000744ef4905f78: 074c 892c 

  0x0000744ef4905f7c: ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x0000744ef4905f7c: 24e8 7ebe 

  0x0000744ef4905f80: ; ImmutableOopMap {r13=Oop rax=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.DArray::get@7 (line 133)
  0x0000744ef4905f80: 4607 8b16 | 48c1 e203 | 4883 fa00 | 0f84 f9f6 | ffff 4889 

  0x0000744ef4905f94: ;   {runtime_call g1_pre_barrier_slow}
  0x0000744ef4905f94: 1424 e865 | f246 07e9 | ebf6 ffff | 4983 fd00 | 0f84 fff6 | ffff 4889 

  0x0000744ef4905fac: ;   {runtime_call g1_post_barrier_slow}
  0x0000744ef4905fac: 3424 e8cd | f946 07e9 | f1f6 ffff 

  0x0000744ef4905fb8: ;   {metadata({method} {0x0000744e80495c20} 'checkNull' '([Ljava/lang/Object;)V' in 'JCudaWrapper/array/Array')}
  0x0000744ef4905fb8: 49ba 205c | 4980 4e74 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000744ef4905fcc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000744ef4905fcc: ffff ffe8 

  0x0000744ef4905fd0: ; ImmutableOopMap {r13=Oop rax=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*synchronization entry
                      ; - JCudaWrapper.array.Array::checkNull@-1 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef4905fd0: 2cec 4607 | e909 f7ff 

  0x0000744ef4905fd8: ;   {metadata({method} {0x0000744e8b416340} 'stream' '([Ljava/lang/Object;)Ljava/util/stream/Stream;' in 'java/util/Arrays')}
  0x0000744ef4905fd8: ff49 ba40 | 6341 8b4e | 7400 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000744ef4905ff0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000744ef4905ff0: e80b ec46 

  0x0000744ef4905ff4: ; ImmutableOopMap {r13=Oop rax=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*synchronization entry
                      ; - java.util.Arrays::stream@-1 (line 5528)
                      ; - JCudaWrapper.array.Array::checkNull@1 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef4905ff4: 07e9 21f7 

  0x0000744ef4905ff8: ;   {metadata({method} {0x0000744e8b4162e8} 'stream' '([Ljava/lang/Object;II)Ljava/util/stream/Stream;' in 'java/util/Arrays')}
  0x0000744ef4905ff8: ffff 49ba | e862 418b | 4e74 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000744ef4906010: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000744ef4906010: ffe8 eaeb 

  0x0000744ef4906014: ; ImmutableOopMap {r13=Oop rax=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*synchronization entry
                      ; - java.util.Arrays::stream@-1 (line 5547)
                      ; - java.util.Arrays::stream@4 (line 5528)
                      ; - JCudaWrapper.array.Array::checkNull@1 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef4906014: 4607 e939 

  0x0000744ef4906018: ;   {metadata({method} {0x0000744e8b4159f8} 'spliterator' '([Ljava/lang/Object;II)Ljava/util/Spliterator;' in 'java/util/Arrays')}
  0x0000744ef4906018: f7ff ff49 | baf8 5941 | 8b4e 7400 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000744ef4906030: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000744ef4906030: ffff e8c9 

  0x0000744ef4906034: ; ImmutableOopMap {r13=Oop rax=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*synchronization entry
                      ; - java.util.Arrays::spliterator@-1 (line 5396)
                      ; - java.util.Arrays::stream@3 (line 5547)
                      ; - java.util.Arrays::stream@4 (line 5528)
                      ; - JCudaWrapper.array.Array::checkNull@1 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef4906034: eb46 07e9 | 51f7 ffff 

  0x0000744ef490603c: ;   {metadata({method} {0x0000744e8b0afef8} 'linkToTargetMethod' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/Invokers$Holder')}
  0x0000744ef490603c: 49ba f8fe | 0a8b 4e74 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000744ef4906050: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000744ef4906050: ffff ffe8 

  0x0000744ef4906054: ; ImmutableOopMap {rax=Oop rdx=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                      ; - JCudaWrapper.array.Array::checkNull@4 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef4906054: a8eb 4607 | e9f2 f7ff 

  0x0000744ef490605c: ;   {metadata({method} {0x0000744e80400a20} 'invoke' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/LambdaForm$MH+0x0000744e8c000800')}
  0x0000744ef490605c: ff49 ba20 | 0a40 804e | 7400 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000744ef4906074: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000744ef4906074: e887 eb46 

  0x0000744ef4906078: ; ImmutableOopMap {rax=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*synchronization entry
                      ; - java.lang.invoke.LambdaForm$MH/0x0000744e8c000800::invoke@-1
                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                      ; - JCudaWrapper.array.Array::checkNull@4 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef4906078: 07e9 2af8 

  0x0000744ef490607c: ;   {runtime_call throw_incompatible_class_change_error Runtime1 stub}
  0x0000744ef490607c: ffff e87d 

  0x0000744ef4906080: ; ImmutableOopMap {rax=Oop rdx=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*invokeinterface anyMatch {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000744ef4906080: c346 07e8 

  0x0000744ef4906084: ; ImmutableOopMap {rax=Oop rdx=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*invokeinterface anyMatch {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef4906084: 789c 4607 

  0x0000744ef4906088: ;   {metadata({method} {0x0000744e8b0e38f0} 'anyMatch' '(Ljava/util/function/Predicate;)Z' in 'java/util/stream/ReferencePipeline')}
  0x0000744ef4906088: 49ba f038 | 0e8b 4e74 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000744ef490609c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000744ef490609c: ffff ffe8 

  0x0000744ef49060a0: ; ImmutableOopMap {rax=Oop rdx=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*synchronization entry
                      ; - java.util.stream.ReferencePipeline::anyMatch@-1 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef49060a0: 5ceb 4607 | e93b f9ff | ff48 8904 

  0x0000744ef49060ac: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000744ef49060ac: 24e8 4ec0 

  0x0000744ef49060b0: ; ImmutableOopMap {[192]=Oop [200]=Oop [208]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.ReferencePipeline::anyMatch@11 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000744ef49060b0: 4607 e849 

  0x0000744ef49060b4: ; ImmutableOopMap {rdx=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*invokevirtual booleanValue {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.stream.ReferencePipeline::anyMatch@14 (line 632)
                      ; - JCudaWrapper.array.Array::checkNull@9 (line 392)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
                      ;   {metadata({method} {0x0000744e80457670} 'to' '([D)Ljcuda/Pointer;' in 'jcuda/Pointer')}
  0x0000744ef49060b4: 9c46 0749 | ba70 7645 | 804e 7400 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000744ef49060cc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000744ef49060cc: ffff e82d 

  0x0000744ef49060d0: ; ImmutableOopMap {rcx=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*synchronization entry
                      ; - jcuda.Pointer::to@-1 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x0000744ef49060d0: eb46 07e9 | f7fa ffff 

  0x0000744ef49060d8: ;   {runtime_call fast_new_instance Runtime1 stub}
  0x0000744ef49060d8: 488b d2e8 

  0x0000744ef49060dc: ; ImmutableOopMap {rbx=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - jcuda.Pointer::to@0 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x0000744ef49060dc: 20a5 4607 | e945 fbff 

  0x0000744ef49060e4: ;   {metadata({method} {0x0000744e80083ec8} 'wrap' '([D)Ljava/nio/DoubleBuffer;' in 'java/nio/DoubleBuffer')}
  0x0000744ef49060e4: ff49 bac8 | 3e08 804e | 7400 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000744ef49060fc: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000744ef49060fc: e8ff ea46 

  0x0000744ef4906100: ; ImmutableOopMap {rbx=Oop rax=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*synchronization entry
                      ; - java.nio.DoubleBuffer::wrap@-1 (line 465)
                      ; - jcuda.Pointer::to@5 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x0000744ef4906100: 07e9 5dfb 

  0x0000744ef4906104: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000744ef4906104: ffff e8f5 

  0x0000744ef4906108: ; ImmutableOopMap {rbx=Oop rax=Oop [192]=Oop [200]=Oop [208]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.nio.DoubleBuffer::wrap@3 (line 465)
                      ; - jcuda.Pointer::to@5 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
                      ;   {metadata({method} {0x0000744e80455398} '<init>' '(Ljava/nio/Buffer;)V' in 'jcuda/Pointer')}
  0x0000744ef4906108: 9b46 0749 | ba98 5345 | 804e 7400 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000744ef4906120: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000744ef4906120: ffff e8d9 

  0x0000744ef4906124: ; ImmutableOopMap {rax=Oop [200]=Oop [208]=Oop [232]=Oop }
                      ;*synchronization entry
                      ; - jcuda.Pointer::<init>@-1 (line 463)
                      ; - jcuda.Pointer::to@8 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x0000744ef4906124: ea46 07e9 | b1fb ffff 

  0x0000744ef490612c: ;   {metadata({method} {0x0000744e8040ada8} '<init>' '()V' in 'jcuda/NativePointerObject')}
  0x0000744ef490612c: 49ba a8ad | 4080 4e74 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000744ef4906140: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000744ef4906140: ffff ffe8 

  0x0000744ef4906144: ; ImmutableOopMap {rax=Oop [200]=Oop [208]=Oop [232]=Oop }
                      ;*synchronization entry
                      ; - jcuda.NativePointerObject::<init>@-1 (line 44)
                      ; - jcuda.Pointer::<init>@1 (line 463)
                      ; - jcuda.Pointer::to@8 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x0000744ef4906144: b8ea 4607 | e9d1 fbff 

  0x0000744ef490614c: ;   {metadata({method} {0x0000744e8b4709c0} '<init>' '()V' in 'java/lang/Object')}
  0x0000744ef490614c: ff49 bac0 | 0947 8b4e | 7400 004c | 8954 2408 | 48c7 0424 | ffff ffff 

  0x0000744ef4906164: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000744ef4906164: e897 ea46 

  0x0000744ef4906168: ; ImmutableOopMap {rax=Oop [200]=Oop [208]=Oop [232]=Oop }
                      ;*synchronization entry
                      ; - java.lang.Object::<init>@-1 (line 45)
                      ; - jcuda.NativePointerObject::<init>@1 (line 44)
                      ; - jcuda.Pointer::<init>@1 (line 463)
                      ; - jcuda.Pointer::to@8 (line 134)
                      ; - JCudaWrapper.array.DArray::get@14 (line 134)
  0x0000744ef4906168: 07e9 f1fb | ffff 8b51 | 0c48 c1e2 | 0348 83fa | 000f 8407 | fcff ff48 

  0x0000744ef4906180: ;   {runtime_call g1_pre_barrier_slow}
  0x0000744ef4906180: 8914 24e8 | 78f0 4607 | e9f9 fbff | ff48 83f8 | 000f 840e | fcff ff48 

  0x0000744ef4906198: ;   {runtime_call g1_post_barrier_slow}
  0x0000744ef4906198: 890c 24e8 | e0f7 4607 | e900 fcff | ff8b 5120 | 48c1 e203 | 4883 fa00 | 0f84 fcfb | ffff 4889 
  0x0000744ef49061b8: ;   {runtime_call g1_pre_barrier_slow}
  0x0000744ef49061b8: 1424 e841 | f046 07e9 | eefb ffff 

  0x0000744ef49061c4: ;   {internal_word}
  0x0000744ef49061c4: 49ba 9c5e | 90f4 4e74 | 0000 4d89 | 9760 0400 

  0x0000744ef49061d4: ;   {runtime_call SafepointBlob}
  0x0000744ef49061d4: 00e9 26de 

  0x0000744ef49061d8: ;   {metadata(nullptr)}
  0x0000744ef49061d8: 3a07 48ba | 0000 0000 | 0000 0000 | b800 0f05 

  0x0000744ef49061e8: ;   {runtime_call load_klass_patching Runtime1 stub}
  0x0000744ef49061e8: 0ae8 12db 

  0x0000744ef49061ec: ; ImmutableOopMap {[192]=Oop [200]=Oop [208]=Oop }
                      ;*new {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) JCudaWrapper.array.Array::checkNull@17 (line 393)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef49061ec: 4607 e9bd | fcff ff48 

  0x0000744ef49061f4: ;   {runtime_call fast_new_instance Runtime1 stub}
  0x0000744ef49061f4: 8bd2 e805 

  0x0000744ef49061f8: ; ImmutableOopMap {[192]=Oop [200]=Oop [208]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - JCudaWrapper.array.Array::checkNull@17 (line 393)
                      ; - JCudaWrapper.array.DArray::get@8 (line 133)
  0x0000744ef49061f8: a446 07e9 | 0cfd ffff | 498b 87f8 | 0400 0049 | c787 f804 | 0000 0000 | 0000 49c7 | 8700 0500 
  0x0000744ef4906218: 0000 0000 | 0048 81c4 | 0001 0000 

  0x0000744ef4906224: ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000744ef4906224: 5de9 d68b | 4607 f4f4 | f4f4 f4f4 
[Stub Code]
  0x0000744ef4906230: ;   {no_reloc}
  0x0000744ef4906230: 0f1f 4400 

  0x0000744ef4906234: ;   {static_stub}
  0x0000744ef4906234: 0048 bb48 | 5249 804e 

  0x0000744ef490623c: ;   {runtime_call I2C/C2I adapters}
  0x0000744ef490623c: 7400 00e9 | 32ce 4807 

  0x0000744ef4906244: ;   {static_stub}
  0x0000744ef4906244: 48bb 0000 | 0000 0000 

  0x0000744ef490624c: ;   {runtime_call nmethod}
  0x0000744ef490624c: 0000 e9fb 

  0x0000744ef4906250: ;   {static_stub}
  0x0000744ef4906250: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000744ef490625c: ;   {runtime_call nmethod}
  0x0000744ef490625c: 00e9 fbff 

  0x0000744ef4906260: ;   {static_stub}
  0x0000744ef4906260: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000744ef490626c: ;   {runtime_call nmethod}
  0x0000744ef490626c: e9fb ffff 

  0x0000744ef4906270: ;   {static_stub}
  0x0000744ef4906270: ff48 bb00 | 0000 0000 

  0x0000744ef4906278: ;   {runtime_call nmethod}
  0x0000744ef4906278: 0000 00e9 | fbff ffff 

  0x0000744ef4906280: ;   {static_stub}
  0x0000744ef4906280: 48bb 0000 | 0000 0000 

  0x0000744ef4906288: ;   {runtime_call nmethod}
  0x0000744ef4906288: 0000 e9fb 

  0x0000744ef490628c: ;   {static_stub}
  0x0000744ef490628c: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000744ef4906298: ;   {runtime_call nmethod}
  0x0000744ef4906298: 00e9 fbff 

  0x0000744ef490629c: ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000744ef490629c: ffff e85d 

  0x0000744ef49062a0: ;   {external_word}
  0x0000744ef49062a0: b846 0748 | bf06 a191 | 124f 7400 | 0048 83e4 

  0x0000744ef49062b0: ;   {runtime_call MacroAssembler::debug64(char*, long, long*)}
  0x0000744ef49062b0: f0e8 6aea 

  0x0000744ef49062b4: ;   {section_word}
  0x0000744ef49062b4: ae1d f449 | bab7 6290 | f44e 7400 

  0x0000744ef49062c0: ;   {runtime_call DeoptimizationBlob}
  0x0000744ef49062c0: 0041 52e9 | d8cf 3a07 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x0000744e540ac460, length=17, elements={
0x0000744f0c01a0a0, 0x0000744f0c12cc70, 0x0000744f0c12e1e0, 0x0000744f0c12f980,
0x0000744f0c130fc0, 0x0000744f0c132560, 0x0000744f0c134120, 0x0000744f0c1357e0,
0x0000744f0c1492b0, 0x0000744e50066c50, 0x0000744e50068e40, 0x0000744f0c17f9b0,
0x0000744f0d675af0, 0x0000744f0d690960, 0x0000744e540a8e20, 0x0000744e540a9e70,
0x0000744e540ab020
}

Java Threads: ( => current thread )
=>0x0000744f0c01a0a0 JavaThread "main"                              [_thread_in_native, id=60563, stack(0x0000744f11700000,0x0000744f11800000) (1024K)]
  0x0000744f0c12cc70 JavaThread "Reference Handler"          daemon [_thread_blocked, id=60571, stack(0x0000744ee3bfd000,0x0000744ee3cfd000) (1024K)]
  0x0000744f0c12e1e0 JavaThread "Finalizer"                  daemon [_thread_blocked, id=60572, stack(0x0000744ee2d00000,0x0000744ee2e00000) (1024K)]
  0x0000744f0c12f980 JavaThread "Signal Dispatcher"          daemon [_thread_blocked, id=60573, stack(0x0000744ee2c00000,0x0000744ee2d00000) (1024K)]
  0x0000744f0c130fc0 JavaThread "Service Thread"             daemon [_thread_blocked, id=60574, stack(0x0000744ee2b00000,0x0000744ee2c00000) (1024K)]
  0x0000744f0c132560 JavaThread "Monitor Deflation Thread"   daemon [_thread_blocked, id=60575, stack(0x0000744ee2a00000,0x0000744ee2b00000) (1024K)]
  0x0000744f0c134120 JavaThread "C2 CompilerThread0"         daemon [_thread_blocked, id=60576, stack(0x0000744ee2900000,0x0000744ee2a00000) (1024K)]
  0x0000744f0c1357e0 JavaThread "C1 CompilerThread0"         daemon [_thread_blocked, id=60577, stack(0x0000744ee2800000,0x0000744ee2900000) (1024K)]
  0x0000744f0c1492b0 JavaThread "Common-Cleaner"             daemon [_thread_blocked, id=60578, stack(0x0000744ee2700000,0x0000744ee2800000) (1024K)]
  0x0000744e50066c50 JavaThread "C1 CompilerThread1"         daemon [_thread_blocked, id=60579, stack(0x0000744ee2600000,0x0000744ee2700000) (1024K)]
  0x0000744e50068e40 JavaThread "C1 CompilerThread2"         daemon [_thread_blocked, id=60580, stack(0x0000744ee2500000,0x0000744ee2600000) (1024K)]
  0x0000744f0c17f9b0 JavaThread "Notification Thread"        daemon [_thread_blocked, id=60581, stack(0x0000744ee2400000,0x0000744ee2500000) (1024K)]
  0x0000744f0d675af0 JavaThread "pool-1-thread-1"            daemon [_thread_in_native, id=60590, stack(0x0000744ee2300000,0x0000744ee2400000) (1024K)]
  0x0000744f0d690960 JavaThread "Java2D Disposer"            daemon [_thread_blocked, id=60591, stack(0x0000744ee2200000,0x0000744ee2300000) (1024K)]
  0x0000744e540a8e20 JavaThread "C2 CompilerThread1"         daemon [_thread_blocked, id=60592, stack(0x0000744ed6300000,0x0000744ed6400000) (1024K)]
  0x0000744e540a9e70 JavaThread "C2 CompilerThread2"         daemon [_thread_blocked, id=60593, stack(0x0000744ed5100000,0x0000744ed5200000) (1024K)]
  0x0000744e540ab020 JavaThread "C2 CompilerThread3"         daemon [_thread_blocked, id=60594, stack(0x0000744ed4700000,0x0000744ed4800000) (1024K)]
Total: 17

Other Threads:
  0x0000744f0c123870 VMThread "VM Thread"                           [id=60570, stack(0x0000744ee3cfe000,0x0000744ee3dfe000) (1024K)]
  0x0000744f0c111260 WatcherThread "VM Periodic Task Thread"        [id=60569, stack(0x0000744ee3dff000,0x0000744ee3eff000) (1024K)]
  0x0000744f0c045410 WorkerThread "GC Thread#0"                     [id=60564, stack(0x0000744f10365000,0x0000744f10465000) (1024K)]
  0x0000744e78008fc0 WorkerThread "GC Thread#1"                     [id=60595, stack(0x0000744ed4600000,0x0000744ed4700000) (1024K)]
  0x0000744e78009a00 WorkerThread "GC Thread#2"                     [id=60596, stack(0x0000744ed44ff000,0x0000744ed45ff000) (1024K)]
  0x0000744e7800a440 WorkerThread "GC Thread#3"                     [id=60597, stack(0x0000744ed4100000,0x0000744ed4200000) (1024K)]
  0x0000744e7800aea0 WorkerThread "GC Thread#4"                     [id=60598, stack(0x0000744e8af00000,0x0000744e8b000000) (1024K)]
  0x0000744e7800b900 WorkerThread "GC Thread#5"                     [id=60599, stack(0x0000744e89d00000,0x0000744e89e00000) (1024K)]
  0x0000744e7800c490 WorkerThread "GC Thread#6"                     [id=60600, stack(0x0000744e89bff000,0x0000744e89cff000) (1024K)]
  0x0000744e7800d020 WorkerThread "GC Thread#7"                     [id=60601, stack(0x0000744e89afe000,0x0000744e89bfe000) (1024K)]
  0x0000744e7800dbb0 WorkerThread "GC Thread#8"                     [id=60602, stack(0x0000744e899fd000,0x0000744e89afd000) (1024K)]
  0x0000744e7800e740 WorkerThread "GC Thread#9"                     [id=60603, stack(0x0000744e898fc000,0x0000744e899fc000) (1024K)]
  0x0000744e7800f2d0 WorkerThread "GC Thread#10"                    [id=60604, stack(0x0000744e897fb000,0x0000744e898fb000) (1024K)]
  0x0000744f0c055f10 ConcurrentGCThread "G1 Main Marker"            [id=60565, stack(0x0000744f10264000,0x0000744f10364000) (1024K)]
  0x0000744f0c056ec0 WorkerThread "G1 Conc#0"                       [id=60566, stack(0x0000744f10163000,0x0000744f10263000) (1024K)]
  0x0000744f0c0fead0 ConcurrentGCThread "G1 Refine#0"               [id=60567, stack(0x0000744ee80f6000,0x0000744ee81f6000) (1024K)]
  0x0000744f0c0ffa90 ConcurrentGCThread "G1 Service"                [id=60568, stack(0x0000744ee3f00000,0x0000744ee4000000) (1024K)]
Total: 17

Threads with active compile tasks:
Total: 0

VM state: not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap address: 0x0000000616800000, size: 7832 MB, Compressed Oops mode: Zero based, Oop shift amount: 3

CDS archive(s) mapped at: [0x0000744e8b000000-0x0000744e8bc97000-0x0000744e8bc97000), size 13201408, SharedBaseAddress: 0x0000744e8b000000, ArchiveRelocationMode: 1.
Compressed class space mapped at: 0x0000744e8c000000-0x0000744ecc000000, reserved size: 1073741824
Narrow klass base: 0x0000744e8b000000, Narrow klass shift: 0, Narrow klass range: 0x100000000

GC Precious Log:
 CardTable entry size: 512
 Card Set container configuration: InlinePtr #cards 4 size 8 Array Of Cards #cards 32 size 80 Howl #buckets 8 coarsen threshold 7372 Howl Bitmap #cards 1024 size 144 coarsen threshold 921 Card regions per heap region 1 cards per card region 8192
 CPUs: 16 total, 16 available
 Memory: 31322M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (Zero based)
 Heap Region Size: 4M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 492M
 Heap Max Capacity: 7832M
 Pre-touch: Disabled
 Parallel Workers: 13
 Concurrent Workers: 3
 Concurrent Refinement Workers: 13
 Periodic GC: Disabled

Heap:
 garbage-first heap   total 507904K, used 7286K [0x0000000616800000, 0x0000000800000000)
  region size 4096K, 2 young (8192K), 1 survivors (4096K)
 Metaspace       used 4416K, committed 4608K, reserved 1114112K
  class space    used 376K, committed 448K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, TAMS=top-at-mark-start, PB=parsable bottom
|   0|0x0000000616800000, 0x0000000616c00000, 0x0000000616c00000|100%|HS|  |TAMS 0x0000000616800000| PB 0x0000000616800000| Complete 
|   1|0x0000000616c00000, 0x0000000616c00000, 0x0000000617000000|  0%| F|  |TAMS 0x0000000616c00000| PB 0x0000000616c00000| Untracked 
|   2|0x0000000617000000, 0x0000000617000000, 0x0000000617400000|  0%| F|  |TAMS 0x0000000617000000| PB 0x0000000617000000| Untracked 
|   3|0x0000000617400000, 0x0000000617400000, 0x0000000617800000|  0%| F|  |TAMS 0x0000000617400000| PB 0x0000000617400000| Untracked 
|   4|0x0000000617800000, 0x0000000617800000, 0x0000000617c00000|  0%| F|  |TAMS 0x0000000617800000| PB 0x0000000617800000| Untracked 
|   5|0x0000000617c00000, 0x0000000617c00000, 0x0000000618000000|  0%| F|  |TAMS 0x0000000617c00000| PB 0x0000000617c00000| Untracked 
|   6|0x0000000618000000, 0x0000000618000000, 0x0000000618400000|  0%| F|  |TAMS 0x0000000618000000| PB 0x0000000618000000| Untracked 
|   7|0x0000000618400000, 0x0000000618400000, 0x0000000618800000|  0%| F|  |TAMS 0x0000000618400000| PB 0x0000000618400000| Untracked 
|   8|0x0000000618800000, 0x0000000618800000, 0x0000000618c00000|  0%| F|  |TAMS 0x0000000618800000| PB 0x0000000618800000| Untracked 
|   9|0x0000000618c00000, 0x0000000618c00000, 0x0000000619000000|  0%| F|  |TAMS 0x0000000618c00000| PB 0x0000000618c00000| Untracked 
|  10|0x0000000619000000, 0x0000000619000000, 0x0000000619400000|  0%| F|  |TAMS 0x0000000619000000| PB 0x0000000619000000| Untracked 
|  11|0x0000000619400000, 0x0000000619400000, 0x0000000619800000|  0%| F|  |TAMS 0x0000000619400000| PB 0x0000000619400000| Untracked 
|  12|0x0000000619800000, 0x0000000619800000, 0x0000000619c00000|  0%| F|  |TAMS 0x0000000619800000| PB 0x0000000619800000| Untracked 
|  13|0x0000000619c00000, 0x0000000619c00000, 0x000000061a000000|  0%| F|  |TAMS 0x0000000619c00000| PB 0x0000000619c00000| Untracked 
|  14|0x000000061a000000, 0x000000061a000000, 0x000000061a400000|  0%| F|  |TAMS 0x000000061a000000| PB 0x000000061a000000| Untracked 
|  15|0x000000061a400000, 0x000000061a400000, 0x000000061a800000|  0%| F|  |TAMS 0x000000061a400000| PB 0x000000061a400000| Untracked 
|  16|0x000000061a800000, 0x000000061a800000, 0x000000061ac00000|  0%| F|  |TAMS 0x000000061a800000| PB 0x000000061a800000| Untracked 
|  17|0x000000061ac00000, 0x000000061ac00000, 0x000000061b000000|  0%| F|  |TAMS 0x000000061ac00000| PB 0x000000061ac00000| Untracked 
|  18|0x000000061b000000, 0x000000061b000000, 0x000000061b400000|  0%| F|  |TAMS 0x000000061b000000| PB 0x000000061b000000| Untracked 
|  19|0x000000061b400000, 0x000000061b400000, 0x000000061b800000|  0%| F|  |TAMS 0x000000061b400000| PB 0x000000061b400000| Untracked 
|  20|0x000000061b800000, 0x000000061b800000, 0x000000061bc00000|  0%| F|  |TAMS 0x000000061b800000| PB 0x000000061b800000| Untracked 
|  21|0x000000061bc00000, 0x000000061bc00000, 0x000000061c000000|  0%| F|  |TAMS 0x000000061bc00000| PB 0x000000061bc00000| Untracked 
|  22|0x000000061c000000, 0x000000061c000000, 0x000000061c400000|  0%| F|  |TAMS 0x000000061c000000| PB 0x000000061c000000| Untracked 
|  23|0x000000061c400000, 0x000000061c400000, 0x000000061c800000|  0%| F|  |TAMS 0x000000061c400000| PB 0x000000061c400000| Untracked 
|  24|0x000000061c800000, 0x000000061c800000, 0x000000061cc00000|  0%| F|  |TAMS 0x000000061c800000| PB 0x000000061c800000| Untracked 
|  25|0x000000061cc00000, 0x000000061cc00000, 0x000000061d000000|  0%| F|  |TAMS 0x000000061cc00000| PB 0x000000061cc00000| Untracked 
|  26|0x000000061d000000, 0x000000061d000000, 0x000000061d400000|  0%| F|  |TAMS 0x000000061d000000| PB 0x000000061d000000| Untracked 
|  27|0x000000061d400000, 0x000000061d400000, 0x000000061d800000|  0%| F|  |TAMS 0x000000061d400000| PB 0x000000061d400000| Untracked 
|  28|0x000000061d800000, 0x000000061d800000, 0x000000061dc00000|  0%| F|  |TAMS 0x000000061d800000| PB 0x000000061d800000| Untracked 
|  29|0x000000061dc00000, 0x000000061dc00000, 0x000000061e000000|  0%| F|  |TAMS 0x000000061dc00000| PB 0x000000061dc00000| Untracked 
|  30|0x000000061e000000, 0x000000061e000000, 0x000000061e400000|  0%| F|  |TAMS 0x000000061e000000| PB 0x000000061e000000| Untracked 
|  31|0x000000061e400000, 0x000000061e400000, 0x000000061e800000|  0%| F|  |TAMS 0x000000061e400000| PB 0x000000061e400000| Untracked 
|  32|0x000000061e800000, 0x000000061e800000, 0x000000061ec00000|  0%| F|  |TAMS 0x000000061e800000| PB 0x000000061e800000| Untracked 
|  33|0x000000061ec00000, 0x000000061ec00000, 0x000000061f000000|  0%| F|  |TAMS 0x000000061ec00000| PB 0x000000061ec00000| Untracked 
|  34|0x000000061f000000, 0x000000061f000000, 0x000000061f400000|  0%| F|  |TAMS 0x000000061f000000| PB 0x000000061f000000| Untracked 
|  35|0x000000061f400000, 0x000000061f400000, 0x000000061f800000|  0%| F|  |TAMS 0x000000061f400000| PB 0x000000061f400000| Untracked 
|  36|0x000000061f800000, 0x000000061f800000, 0x000000061fc00000|  0%| F|  |TAMS 0x000000061f800000| PB 0x000000061f800000| Untracked 
|  37|0x000000061fc00000, 0x000000061fc00000, 0x0000000620000000|  0%| F|  |TAMS 0x000000061fc00000| PB 0x000000061fc00000| Untracked 
|  38|0x0000000620000000, 0x0000000620000000, 0x0000000620400000|  0%| F|  |TAMS 0x0000000620000000| PB 0x0000000620000000| Untracked 
|  39|0x0000000620400000, 0x0000000620400000, 0x0000000620800000|  0%| F|  |TAMS 0x0000000620400000| PB 0x0000000620400000| Untracked 
|  40|0x0000000620800000, 0x0000000620800000, 0x0000000620c00000|  0%| F|  |TAMS 0x0000000620800000| PB 0x0000000620800000| Untracked 
|  41|0x0000000620c00000, 0x0000000620c00000, 0x0000000621000000|  0%| F|  |TAMS 0x0000000620c00000| PB 0x0000000620c00000| Untracked 
|  42|0x0000000621000000, 0x0000000621000000, 0x0000000621400000|  0%| F|  |TAMS 0x0000000621000000| PB 0x0000000621000000| Untracked 
|  43|0x0000000621400000, 0x0000000621400000, 0x0000000621800000|  0%| F|  |TAMS 0x0000000621400000| PB 0x0000000621400000| Untracked 
|  44|0x0000000621800000, 0x0000000621800000, 0x0000000621c00000|  0%| F|  |TAMS 0x0000000621800000| PB 0x0000000621800000| Untracked 
|  45|0x0000000621c00000, 0x0000000621c00000, 0x0000000622000000|  0%| F|  |TAMS 0x0000000621c00000| PB 0x0000000621c00000| Untracked 
|  46|0x0000000622000000, 0x0000000622000000, 0x0000000622400000|  0%| F|  |TAMS 0x0000000622000000| PB 0x0000000622000000| Untracked 
|  47|0x0000000622400000, 0x0000000622400000, 0x0000000622800000|  0%| F|  |TAMS 0x0000000622400000| PB 0x0000000622400000| Untracked 
|  48|0x0000000622800000, 0x0000000622800000, 0x0000000622c00000|  0%| F|  |TAMS 0x0000000622800000| PB 0x0000000622800000| Untracked 
|  49|0x0000000622c00000, 0x0000000622c00000, 0x0000000623000000|  0%| F|  |TAMS 0x0000000622c00000| PB 0x0000000622c00000| Untracked 
|  50|0x0000000623000000, 0x0000000623000000, 0x0000000623400000|  0%| F|  |TAMS 0x0000000623000000| PB 0x0000000623000000| Untracked 
|  51|0x0000000623400000, 0x0000000623400000, 0x0000000623800000|  0%| F|  |TAMS 0x0000000623400000| PB 0x0000000623400000| Untracked 
|  52|0x0000000623800000, 0x0000000623800000, 0x0000000623c00000|  0%| F|  |TAMS 0x0000000623800000| PB 0x0000000623800000| Untracked 
|  53|0x0000000623c00000, 0x0000000623c00000, 0x0000000624000000|  0%| F|  |TAMS 0x0000000623c00000| PB 0x0000000623c00000| Untracked 
|  54|0x0000000624000000, 0x0000000624000000, 0x0000000624400000|  0%| F|  |TAMS 0x0000000624000000| PB 0x0000000624000000| Untracked 
|  55|0x0000000624400000, 0x0000000624400000, 0x0000000624800000|  0%| F|  |TAMS 0x0000000624400000| PB 0x0000000624400000| Untracked 
|  56|0x0000000624800000, 0x0000000624800000, 0x0000000624c00000|  0%| F|  |TAMS 0x0000000624800000| PB 0x0000000624800000| Untracked 
|  57|0x0000000624c00000, 0x0000000624c00000, 0x0000000625000000|  0%| F|  |TAMS 0x0000000624c00000| PB 0x0000000624c00000| Untracked 
|  58|0x0000000625000000, 0x0000000625000000, 0x0000000625400000|  0%| F|  |TAMS 0x0000000625000000| PB 0x0000000625000000| Untracked 
|  59|0x0000000625400000, 0x0000000625400000, 0x0000000625800000|  0%| F|  |TAMS 0x0000000625400000| PB 0x0000000625400000| Untracked 
|  60|0x0000000625800000, 0x0000000625800000, 0x0000000625c00000|  0%| F|  |TAMS 0x0000000625800000| PB 0x0000000625800000| Untracked 
|  61|0x0000000625c00000, 0x0000000625c00000, 0x0000000626000000|  0%| F|  |TAMS 0x0000000625c00000| PB 0x0000000625c00000| Untracked 
|  62|0x0000000626000000, 0x0000000626000000, 0x0000000626400000|  0%| F|  |TAMS 0x0000000626000000| PB 0x0000000626000000| Untracked 
|  63|0x0000000626400000, 0x0000000626400000, 0x0000000626800000|  0%| F|  |TAMS 0x0000000626400000| PB 0x0000000626400000| Untracked 
|  64|0x0000000626800000, 0x0000000626800000, 0x0000000626c00000|  0%| F|  |TAMS 0x0000000626800000| PB 0x0000000626800000| Untracked 
|  65|0x0000000626c00000, 0x0000000626c00000, 0x0000000627000000|  0%| F|  |TAMS 0x0000000626c00000| PB 0x0000000626c00000| Untracked 
|  66|0x0000000627000000, 0x0000000627000000, 0x0000000627400000|  0%| F|  |TAMS 0x0000000627000000| PB 0x0000000627000000| Untracked 
|  67|0x0000000627400000, 0x0000000627400000, 0x0000000627800000|  0%| F|  |TAMS 0x0000000627400000| PB 0x0000000627400000| Untracked 
|  68|0x0000000627800000, 0x0000000627800000, 0x0000000627c00000|  0%| F|  |TAMS 0x0000000627800000| PB 0x0000000627800000| Untracked 
|  69|0x0000000627c00000, 0x0000000627c00000, 0x0000000628000000|  0%| F|  |TAMS 0x0000000627c00000| PB 0x0000000627c00000| Untracked 
|  70|0x0000000628000000, 0x0000000628000000, 0x0000000628400000|  0%| F|  |TAMS 0x0000000628000000| PB 0x0000000628000000| Untracked 
|  71|0x0000000628400000, 0x0000000628400000, 0x0000000628800000|  0%| F|  |TAMS 0x0000000628400000| PB 0x0000000628400000| Untracked 
|  72|0x0000000628800000, 0x0000000628800000, 0x0000000628c00000|  0%| F|  |TAMS 0x0000000628800000| PB 0x0000000628800000| Untracked 
|  73|0x0000000628c00000, 0x0000000628c00000, 0x0000000629000000|  0%| F|  |TAMS 0x0000000628c00000| PB 0x0000000628c00000| Untracked 
|  74|0x0000000629000000, 0x0000000629000000, 0x0000000629400000|  0%| F|  |TAMS 0x0000000629000000| PB 0x0000000629000000| Untracked 
|  75|0x0000000629400000, 0x0000000629400000, 0x0000000629800000|  0%| F|  |TAMS 0x0000000629400000| PB 0x0000000629400000| Untracked 
|  76|0x0000000629800000, 0x0000000629800000, 0x0000000629c00000|  0%| F|  |TAMS 0x0000000629800000| PB 0x0000000629800000| Untracked 
|  77|0x0000000629c00000, 0x0000000629c00000, 0x000000062a000000|  0%| F|  |TAMS 0x0000000629c00000| PB 0x0000000629c00000| Untracked 
|  78|0x000000062a000000, 0x000000062a000000, 0x000000062a400000|  0%| F|  |TAMS 0x000000062a000000| PB 0x000000062a000000| Untracked 
|  79|0x000000062a400000, 0x000000062a400000, 0x000000062a800000|  0%| F|  |TAMS 0x000000062a400000| PB 0x000000062a400000| Untracked 
|  80|0x000000062a800000, 0x000000062a800000, 0x000000062ac00000|  0%| F|  |TAMS 0x000000062a800000| PB 0x000000062a800000| Untracked 
|  81|0x000000062ac00000, 0x000000062ac00000, 0x000000062b000000|  0%| F|  |TAMS 0x000000062ac00000| PB 0x000000062ac00000| Untracked 
|  82|0x000000062b000000, 0x000000062b000000, 0x000000062b400000|  0%| F|  |TAMS 0x000000062b000000| PB 0x000000062b000000| Untracked 
|  83|0x000000062b400000, 0x000000062b400000, 0x000000062b800000|  0%| F|  |TAMS 0x000000062b400000| PB 0x000000062b400000| Untracked 
|  84|0x000000062b800000, 0x000000062b800000, 0x000000062bc00000|  0%| F|  |TAMS 0x000000062b800000| PB 0x000000062b800000| Untracked 
|  85|0x000000062bc00000, 0x000000062bc00000, 0x000000062c000000|  0%| F|  |TAMS 0x000000062bc00000| PB 0x000000062bc00000| Untracked 
|  86|0x000000062c000000, 0x000000062c000000, 0x000000062c400000|  0%| F|  |TAMS 0x000000062c000000| PB 0x000000062c000000| Untracked 
|  87|0x000000062c400000, 0x000000062c400000, 0x000000062c800000|  0%| F|  |TAMS 0x000000062c400000| PB 0x000000062c400000| Untracked 
|  88|0x000000062c800000, 0x000000062c800000, 0x000000062cc00000|  0%| F|  |TAMS 0x000000062c800000| PB 0x000000062c800000| Untracked 
|  89|0x000000062cc00000, 0x000000062cc00000, 0x000000062d000000|  0%| F|  |TAMS 0x000000062cc00000| PB 0x000000062cc00000| Untracked 
|  90|0x000000062d000000, 0x000000062d000000, 0x000000062d400000|  0%| F|  |TAMS 0x000000062d000000| PB 0x000000062d000000| Untracked 
|  91|0x000000062d400000, 0x000000062d400000, 0x000000062d800000|  0%| F|  |TAMS 0x000000062d400000| PB 0x000000062d400000| Untracked 
|  92|0x000000062d800000, 0x000000062d800000, 0x000000062dc00000|  0%| F|  |TAMS 0x000000062d800000| PB 0x000000062d800000| Untracked 
|  93|0x000000062dc00000, 0x000000062dc00000, 0x000000062e000000|  0%| F|  |TAMS 0x000000062dc00000| PB 0x000000062dc00000| Untracked 
|  94|0x000000062e000000, 0x000000062e000000, 0x000000062e400000|  0%| F|  |TAMS 0x000000062e000000| PB 0x000000062e000000| Untracked 
|  95|0x000000062e400000, 0x000000062e400000, 0x000000062e800000|  0%| F|  |TAMS 0x000000062e400000| PB 0x000000062e400000| Untracked 
|  96|0x000000062e800000, 0x000000062e800000, 0x000000062ec00000|  0%| F|  |TAMS 0x000000062e800000| PB 0x000000062e800000| Untracked 
|  97|0x000000062ec00000, 0x000000062ec00000, 0x000000062f000000|  0%| F|  |TAMS 0x000000062ec00000| PB 0x000000062ec00000| Untracked 
|  98|0x000000062f000000, 0x000000062f000000, 0x000000062f400000|  0%| F|  |TAMS 0x000000062f000000| PB 0x000000062f000000| Untracked 
|  99|0x000000062f400000, 0x000000062f400000, 0x000000062f800000|  0%| F|  |TAMS 0x000000062f400000| PB 0x000000062f400000| Untracked 
| 100|0x000000062f800000, 0x000000062f800000, 0x000000062fc00000|  0%| F|  |TAMS 0x000000062f800000| PB 0x000000062f800000| Untracked 
| 101|0x000000062fc00000, 0x000000062fc00000, 0x0000000630000000|  0%| F|  |TAMS 0x000000062fc00000| PB 0x000000062fc00000| Untracked 
| 102|0x0000000630000000, 0x0000000630000000, 0x0000000630400000|  0%| F|  |TAMS 0x0000000630000000| PB 0x0000000630000000| Untracked 
| 103|0x0000000630400000, 0x0000000630400000, 0x0000000630800000|  0%| F|  |TAMS 0x0000000630400000| PB 0x0000000630400000| Untracked 
| 104|0x0000000630800000, 0x0000000630800000, 0x0000000630c00000|  0%| F|  |TAMS 0x0000000630800000| PB 0x0000000630800000| Untracked 
| 105|0x0000000630c00000, 0x0000000630c00000, 0x0000000631000000|  0%| F|  |TAMS 0x0000000630c00000| PB 0x0000000630c00000| Untracked 
| 106|0x0000000631000000, 0x0000000631000000, 0x0000000631400000|  0%| F|  |TAMS 0x0000000631000000| PB 0x0000000631000000| Untracked 
| 107|0x0000000631400000, 0x0000000631400000, 0x0000000631800000|  0%| F|  |TAMS 0x0000000631400000| PB 0x0000000631400000| Untracked 
| 108|0x0000000631800000, 0x0000000631800000, 0x0000000631c00000|  0%| F|  |TAMS 0x0000000631800000| PB 0x0000000631800000| Untracked 
| 109|0x0000000631c00000, 0x0000000631c00000, 0x0000000632000000|  0%| F|  |TAMS 0x0000000631c00000| PB 0x0000000631c00000| Untracked 
| 110|0x0000000632000000, 0x0000000632000000, 0x0000000632400000|  0%| F|  |TAMS 0x0000000632000000| PB 0x0000000632000000| Untracked 
| 111|0x0000000632400000, 0x0000000632400000, 0x0000000632800000|  0%| F|  |TAMS 0x0000000632400000| PB 0x0000000632400000| Untracked 
| 112|0x0000000632800000, 0x0000000632800000, 0x0000000632c00000|  0%| F|  |TAMS 0x0000000632800000| PB 0x0000000632800000| Untracked 
| 113|0x0000000632c00000, 0x0000000632c00000, 0x0000000633000000|  0%| F|  |TAMS 0x0000000632c00000| PB 0x0000000632c00000| Untracked 
| 114|0x0000000633000000, 0x0000000633000000, 0x0000000633400000|  0%| F|  |TAMS 0x0000000633000000| PB 0x0000000633000000| Untracked 
| 115|0x0000000633400000, 0x0000000633400000, 0x0000000633800000|  0%| F|  |TAMS 0x0000000633400000| PB 0x0000000633400000| Untracked 
| 116|0x0000000633800000, 0x0000000633a11340, 0x0000000633c00000| 51%| S|CS|TAMS 0x0000000633800000| PB 0x0000000633800000| Complete 
| 117|0x0000000633c00000, 0x0000000633c00000, 0x0000000634000000|  0%| F|  |TAMS 0x0000000633c00000| PB 0x0000000633c00000| Untracked 
| 118|0x0000000634000000, 0x0000000634000000, 0x0000000634400000|  0%| F|  |TAMS 0x0000000634000000| PB 0x0000000634000000| Untracked 
| 119|0x0000000634400000, 0x0000000634400000, 0x0000000634800000|  0%| F|  |TAMS 0x0000000634400000| PB 0x0000000634400000| Untracked 
| 120|0x0000000634800000, 0x0000000634800000, 0x0000000634c00000|  0%| F|  |TAMS 0x0000000634800000| PB 0x0000000634800000| Untracked 
| 121|0x0000000634c00000, 0x0000000634c00000, 0x0000000635000000|  0%| F|  |TAMS 0x0000000634c00000| PB 0x0000000634c00000| Untracked 
| 122|0x0000000635000000, 0x0000000635147b58, 0x0000000635400000| 32%| E|  |TAMS 0x0000000635000000| PB 0x0000000635000000| Complete 
|1957|0x00000007ffc00000, 0x00000007ffd0c710, 0x0000000800000000| 26%| O|  |TAMS 0x00000007ffc00000| PB 0x00000007ffc00000| Untracked 

Card table byte_map: [0x0000744ef2800000,0x0000744ef374c000] _byte_map_base: 0x0000744eef74c000

Marking Bits: (CMBitMap*) 0x0000744f0c045f40
 Bits: [0x0000744eeac00000, 0x0000744ef2660000)

Polling page: 0x0000744f13161000

Metaspace:

Usage:
  Non-class:      3.94 MB used.
      Class:    376.91 KB used.
       Both:      4.31 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,       4.06 MB (  6%) committed,  1 nodes.
      Class space:        1.00 GB reserved,     448.00 KB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,       4.50 MB ( <1%) committed. 

Chunk freelists:
   Non-Class:  11.27 MB
       Class:  15.52 MB
        Both:  26.78 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 21.00 MB
CDS: on
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
 - use_allocation_guard: 0.


Internal statistics:

num_allocs_failed_limit: 0.
num_arena_births: 98.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 72.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 0.
num_chunks_taken_from_freelist: 157.
num_chunk_merges: 0.
num_chunk_splits: 97.
num_chunks_enlarged: 46.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=119168Kb used=324Kb max_used=324Kb free=118843Kb
 bounds [0x0000744efc3a0000, 0x0000744efc610000, 0x0000744f03800000]
CodeHeap 'profiled nmethods': size=119164Kb used=1073Kb max_used=1073Kb free=118090Kb
 bounds [0x0000744ef4800000, 0x0000744ef4a70000, 0x0000744efbc5f000]
CodeHeap 'non-nmethods': size=7428Kb used=2751Kb max_used=2779Kb free=4677Kb
 bounds [0x0000744efbc5f000, 0x0000744efbf1f000, 0x0000744efc3a0000]
 total_blobs=1478 nmethods=782 adapters=600
 compilation: enabled
              stopped_count=0, restarted_count=0
 full_count=0

Compilation events (20 events):
Event: 0.447 Thread 0x0000744e540a9e70 nmethod 767 0x0000744efc3e5e90 code [0x0000744efc3e6020, 0x0000744efc3e6140]
Event: 0.451 Thread 0x0000744e540a8e20  772       4       JCudaWrapper.resourceManagement.Handle::getStream (37 bytes)
Event: 0.452 Thread 0x0000744e540a9e70  773       4       jcuda.runtime.JCuda::cudaMemcpyAsync (14 bytes)
Event: 0.452 Thread 0x0000744e540a8e20 nmethod 772 0x0000744efc3e6290 code [0x0000744efc3e6420, 0x0000744efc3e64f0]
Event: 0.452 Thread 0x0000744e540a8e20  774       4       JCudaWrapper.array.DArray::get (26 bytes)
Event: 0.452 Thread 0x0000744e540a9e70 nmethod 773 0x0000744efc3e6590 code [0x0000744efc3e6720, 0x0000744efc3e67e0]
Event: 0.456 Thread 0x0000744e540ab020 nmethod 762 0x0000744efc3e6890 code [0x0000744efc3e6aa0, 0x0000744efc3e7320]
Event: 0.471 Thread 0x0000744f0c1357e0  775       1       JCudaWrapper.algebra.Vector::inc (5 bytes)
Event: 0.471 Thread 0x0000744f0c1357e0 nmethod 775 0x0000744efc3e7e90 code [0x0000744efc3e8020, 0x0000744efc3e80e0]
Event: 0.481 Thread 0x0000744f0c134120 nmethod 770 0x0000744efc3e8190 code [0x0000744efc3e8440, 0x0000744efc3e9bc8]
Event: 0.500 Thread 0x0000744e50066c50  777       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
Event: 0.500 Thread 0x0000744e50068e40  776       1       java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
Event: 0.500 Thread 0x0000744f0c1357e0  778       1       java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
Event: 0.500 Thread 0x0000744e50066c50 nmethod 777 0x0000744efc3eb310 code [0x0000744efc3eb4a0, 0x0000744efc3eb560]
Event: 0.500 Thread 0x0000744e50068e40 nmethod 776 0x0000744efc3eb610 code [0x0000744efc3eb7a0, 0x0000744efc3eb868]
Event: 0.500 Thread 0x0000744f0c1357e0 nmethod 778 0x0000744efc3eb910 code [0x0000744efc3ebaa0, 0x0000744efc3ebbb0]
Event: 0.500 Thread 0x0000744e50066c50  779       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
Event: 0.500 Thread 0x0000744f0c1357e0  781       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
Event: 0.500 Thread 0x0000744e50066c50 nmethod 779 0x0000744efc3ebf90 code [0x0000744efc3ec120, 0x0000744efc3ec1e8]
Event: 0.500 Thread 0x0000744f0c1357e0 nmethod 781 0x0000744ef490c190 code [0x0000744ef490c320, 0x0000744ef490c440]

GC Heap History (2 events):
Event: 0.497 GC heap before
{Heap before GC invocations=0 (full 0):
 garbage-first heap   total 507904K, used 25649K [0x0000000616800000, 0x0000000800000000)
  region size 4096K, 6 young (24576K), 0 survivors (0K)
 Metaspace       used 4414K, committed 4544K, reserved 1114112K
  class space    used 376K, committed 448K, reserved 1048576K
}
Event: 0.500 GC heap after
{Heap after GC invocations=1 (full 0):
 garbage-first heap   total 507904K, used 7286K [0x0000000616800000, 0x0000000800000000)
  region size 4096K, 1 young (4096K), 1 survivors (4096K)
 Metaspace       used 4414K, committed 4544K, reserved 1114112K
  class space    used 376K, committed 448K, reserved 1048576K
}

Dll operation events (11 events):
Event: 0.001 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
Event: 0.023 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
Event: 0.024 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
Event: 0.058 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
Event: 0.081 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
Event: 0.135 Loaded shared library /tmp/libJCublas2-12.0.0-linux-x86_64.so
Event: 0.242 Loaded shared library /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
Event: 0.257 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libawt.so
Event: 0.260 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libawt_xawt.so
Event: 0.283 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libjavajpeg.so
Event: 0.318 Loaded shared library /usr/lib/jvm/java-21-openjdk-amd64/lib/libfontmanager.so

Deoptimization events (20 events):
Event: 0.062 Thread 0x0000744f0c01a0a0 DEOPT PACKING pc=0x0000744ef48374cd sp=0x0000744f117fcff0
Event: 0.062 Thread 0x0000744f0c01a0a0 DEOPT UNPACKING pc=0x0000744efbcb372f sp=0x0000744f117fc480 mode 0
Event: 0.062 Thread 0x0000744f0c01a0a0 DEOPT PACKING pc=0x0000744ef48374cd sp=0x0000744f117fcff0
Event: 0.062 Thread 0x0000744f0c01a0a0 DEOPT UNPACKING pc=0x0000744efbcb372f sp=0x0000744f117fc480 mode 0
Event: 0.062 Thread 0x0000744f0c01a0a0 DEOPT PACKING pc=0x0000744ef48374cd sp=0x0000744f117fcff0
Event: 0.062 Thread 0x0000744f0c01a0a0 DEOPT UNPACKING pc=0x0000744efbcb372f sp=0x0000744f117fc480 mode 0
Event: 0.062 Thread 0x0000744f0c01a0a0 DEOPT PACKING pc=0x0000744ef48374cd sp=0x0000744f117fcff0
Event: 0.062 Thread 0x0000744f0c01a0a0 DEOPT UNPACKING pc=0x0000744efbcb372f sp=0x0000744f117fc480 mode 0
Event: 0.063 Thread 0x0000744f0c01a0a0 DEOPT PACKING pc=0x0000744ef48374cd sp=0x0000744f117fcff0
Event: 0.063 Thread 0x0000744f0c01a0a0 DEOPT UNPACKING pc=0x0000744efbcb372f sp=0x0000744f117fc480 mode 0
Event: 0.064 Thread 0x0000744f0c01a0a0 DEOPT PACKING pc=0x0000744ef48374cd sp=0x0000744f117fcff0
Event: 0.064 Thread 0x0000744f0c01a0a0 DEOPT UNPACKING pc=0x0000744efbcb372f sp=0x0000744f117fc480 mode 0
Event: 0.253 Thread 0x0000744f0c01a0a0 Uncommon trap: trap_request=0xfffffff4 fr.pc=0x0000744efc3ae054 relative=0x00000000000001b4
Event: 0.253 Thread 0x0000744f0c01a0a0 Uncommon trap: reason=null_check action=make_not_entrant pc=0x0000744efc3ae054 method=java.lang.String.equals(Ljava/lang/Object;)Z @ 8 c2
Event: 0.253 Thread 0x0000744f0c01a0a0 DEOPT PACKING pc=0x0000744efc3ae054 sp=0x0000744f117fcd80
Event: 0.253 Thread 0x0000744f0c01a0a0 DEOPT UNPACKING pc=0x0000744efbcb2f99 sp=0x0000744f117fcd38 mode 2
Event: 0.258 Thread 0x0000744f0c01a0a0 Uncommon trap: trap_request=0xffffff45 fr.pc=0x0000744efc3b55ac relative=0x000000000000018c
Event: 0.258 Thread 0x0000744f0c01a0a0 Uncommon trap: reason=unstable_if action=reinterpret pc=0x0000744efc3b55ac method=jdk.internal.util.ArraysSupport.vectorizedHashCode(Ljava/lang/Object;IIII)I @ 2 c2
Event: 0.258 Thread 0x0000744f0c01a0a0 DEOPT PACKING pc=0x0000744efc3b55ac sp=0x0000744f117fa790
Event: 0.258 Thread 0x0000744f0c01a0a0 DEOPT UNPACKING pc=0x0000744efbcb2f99 sp=0x0000744f117fa760 mode 2

Classes loaded (20 events):
Event: 0.343 Loading class java/util/stream/MatchOps
Event: 0.343 Loading class java/util/stream/MatchOps done
Event: 0.343 Loading class java/util/stream/MatchOps$MatchOp
Event: 0.343 Loading class java/util/stream/MatchOps$MatchOp done
Event: 0.343 Loading class java/util/stream/MatchOps$BooleanTerminalSink
Event: 0.343 Loading class java/util/stream/MatchOps$BooleanTerminalSink done
Event: 0.344 Loading class java/util/stream/MatchOps$2MatchSink
Event: 0.344 Loading class java/util/stream/Sink$OfInt
Event: 0.344 Loading class java/util/stream/Sink$OfInt done
Event: 0.344 Loading class java/util/stream/MatchOps$2MatchSink done
Event: 0.344 Loading class java/util/stream/MatchOps$1MatchSink
Event: 0.344 Loading class java/util/stream/MatchOps$1MatchSink done
Event: 0.345 Loading class java/nio/HeapDoubleBuffer
Event: 0.345 Loading class java/nio/HeapDoubleBuffer done
Event: 0.351 Loading class java/awt/Dimension
Event: 0.351 Loading class java/awt/geom/Dimension2D
Event: 0.351 Loading class java/awt/geom/Dimension2D done
Event: 0.351 Loading class java/awt/Dimension done
Event: 0.443 Loading class java/lang/foreign/MemorySegment
Event: 0.443 Loading class java/lang/foreign/MemorySegment done

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (12 events):
Event: 0.045 Thread 0x0000744f0c01a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635073bb8}> (0x0000000635073bb8) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.045 Thread 0x0000744f0c01a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635074328}> (0x0000000635074328) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.045 Thread 0x0000744f0c01a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635074b58}> (0x0000000635074b58) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.045 Thread 0x0000744f0c01a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635075150}> (0x0000000635075150) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.045 Thread 0x0000744f0c01a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635075720}> (0x0000000635075720) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.045 Thread 0x0000744f0c01a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635075d00}> (0x0000000635075d00) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.045 Thread 0x0000744f0c01a0a0 Exception <a 'sun/nio/fs/UnixException'{0x0000000635076550}> (0x0000000635076550) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.248 Thread 0x0000744f0c01a0a0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000634cd44a8}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object)'> (0x0000000634cd44a8) 
thrown [./src/hotspot/share/interpreter/linkResolver.cpp, line 772]
Event: 0.253 Thread 0x0000744f0c01a0a0 Implicit null exception at 0x0000744efc3adee3 to 0x0000744efc3ae044
Event: 0.255 Thread 0x0000744f0c01a0a0 Exception <a 'java/lang/ClassNotFoundException'{0x0000000634ce8ad0}: sun/awt/resources/spi/awtProvider> (0x0000000634ce8ad0) 
thrown [./src/hotspot/share/classfile/systemDictionary.cpp, line 312]
Event: 0.267 Thread 0x0000744f0c01a0a0 Exception <a 'java/io/FileNotFoundException'{0x0000000634db6dc8}> (0x0000000634db6dc8) 
thrown [./src/hotspot/share/prims/jni.cpp, line 520]
Event: 0.347 Thread 0x0000744f0c01a0a0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000634b1a358}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, int)'> (0x0000000634b1a358) 
thrown [./src/hotspot/share/interpreter/linkResolver.cpp, line 772]

ZGC Phase Switch (0 events):
No events

VM Operations (8 events):
Event: 0.047 Executing VM operation: HandshakeAllThreads (Deoptimize)
Event: 0.047 Executing VM operation: HandshakeAllThreads (Deoptimize) done
Event: 0.251 Executing VM operation: HandshakeAllThreads (Deoptimize)
Event: 0.251 Executing VM operation: HandshakeAllThreads (Deoptimize) done
Event: 0.253 Executing VM operation: HandshakeAllThreads (Deoptimize)
Event: 0.253 Executing VM operation: HandshakeAllThreads (Deoptimize) done
Event: 0.497 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 0.500 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done

Memory protections (19 events):
Event: 0.001 Protecting memory [0x0000744f11700000,0x0000744f11704000] with protection modes 0
Event: 0.021 Protecting memory [0x0000744ee3bfd000,0x0000744ee3c01000] with protection modes 0
Event: 0.021 Protecting memory [0x0000744ee2d00000,0x0000744ee2d04000] with protection modes 0
Event: 0.021 Protecting memory [0x0000744ee2c00000,0x0000744ee2c04000] with protection modes 0
Event: 0.021 Protecting memory [0x0000744ee2b00000,0x0000744ee2b04000] with protection modes 0
Event: 0.022 Protecting memory [0x0000744ee2a00000,0x0000744ee2a04000] with protection modes 0
Event: 0.022 Protecting memory [0x0000744ee2900000,0x0000744ee2904000] with protection modes 0
Event: 0.022 Protecting memory [0x0000744ee2800000,0x0000744ee2804000] with protection modes 0
Event: 0.037 Protecting memory [0x0000744ee2700000,0x0000744ee2704000] with protection modes 0
Event: 0.043 Protecting memory [0x0000744ee2600000,0x0000744ee2604000] with protection modes 0
Event: 0.048 Protecting memory [0x0000744ee2500000,0x0000744ee2504000] with protection modes 0
Event: 0.055 Protecting memory [0x0000744ee2400000,0x0000744ee2404000] with protection modes 0
Event: 0.057 Protecting memory [0x0000744ee2300000,0x0000744ee2304000] with protection modes 0
Event: 0.063 Protecting memory [0x0000744ee2200000,0x0000744ee2204000] with protection modes 0
Event: 0.249 Protecting memory [0x0000744ee2300000,0x0000744ee2304000] with protection modes 0
Event: 0.281 Protecting memory [0x0000744ee2200000,0x0000744ee2204000] with protection modes 0
Event: 0.413 Protecting memory [0x0000744ed6300000,0x0000744ed6304000] with protection modes 0
Event: 0.413 Protecting memory [0x0000744ed5100000,0x0000744ed5104000] with protection modes 0
Event: 0.413 Protecting memory [0x0000744ed4700000,0x0000744ed4704000] with protection modes 0

Nmethod flushes (0 events):
No events

Events (20 events):
Event: 0.021 Thread 0x0000744f0c01a0a0 Thread added: 0x0000744f0c12cc70
Event: 0.021 Thread 0x0000744f0c01a0a0 Thread added: 0x0000744f0c12e1e0
Event: 0.021 Thread 0x0000744f0c01a0a0 Thread added: 0x0000744f0c12f980
Event: 0.021 Thread 0x0000744f0c01a0a0 Thread added: 0x0000744f0c130fc0
Event: 0.022 Thread 0x0000744f0c01a0a0 Thread added: 0x0000744f0c132560
Event: 0.022 Thread 0x0000744f0c01a0a0 Thread added: 0x0000744f0c134120
Event: 0.022 Thread 0x0000744f0c01a0a0 Thread added: 0x0000744f0c1357e0
Event: 0.037 Thread 0x0000744f0c01a0a0 Thread added: 0x0000744f0c1492b0
Event: 0.043 Thread 0x0000744f0c1357e0 Thread added: 0x0000744e50066c50
Event: 0.048 Thread 0x0000744f0c1357e0 Thread added: 0x0000744e50068e40
Event: 0.055 Thread 0x0000744f0c01a0a0 Thread added: 0x0000744f0c17f9b0
Event: 0.057 Thread 0x0000744e50066c50 Thread added: 0x0000744e440521c0
Event: 0.063 Thread 0x0000744e50068e40 Thread added: 0x0000744e3c05a380
Event: 0.240 Thread 0x0000744e3c05a380 Thread exited: 0x0000744e3c05a380
Event: 0.240 Thread 0x0000744e440521c0 Thread exited: 0x0000744e440521c0
Event: 0.249 Thread 0x0000744f0c01a0a0 Thread added: 0x0000744f0d675af0
Event: 0.281 Thread 0x0000744f0c01a0a0 Thread added: 0x0000744f0d690960
Event: 0.412 Thread 0x0000744f0c134120 Thread added: 0x0000744e540a8e20
Event: 0.413 Thread 0x0000744f0c134120 Thread added: 0x0000744e540a9e70
Event: 0.413 Thread 0x0000744f0c134120 Thread added: 0x0000744e540ab020


Dynamic libraries:
200000000-200200000 ---p 00000000 00:00 0 
200200000-200400000 rw-s 00000000 00:05 1114                             /dev/nvidia0
200400000-203400000 rw-s 00000000 00:05 1113                             /dev/nvidiactl
203400000-204400000 ---p 00000000 00:00 0 
204400000-204600000 rw-s 00000000 00:05 1113                             /dev/nvidiactl
204600000-204800000 rw-s 00000000 00:05 1113                             /dev/nvidiactl
204800000-204a00000 rw-s 00000000 00:05 1113                             /dev/nvidiactl
204a00000-204c00000 rw-s 204a00000 00:05 1115                            /dev/nvidia-uvm
204c00000-204e00000 rw-s 00000000 00:05 1113                             /dev/nvidiactl
204e00000-205000000 ---p 00000000 00:00 0 
205000000-205200000 rw-s 00000000 00:05 1113                             /dev/nvidiactl
205200000-300200000 ---p 00000000 00:00 0 
616800000-635400000 rw-p 00000000 00:00 0 
635400000-7ffc00000 ---p 00000000 00:00 0 
7ffc00000-7ffd0d000 rw-p 00cd6000 103:02 17173446                        /usr/lib/jvm/java-21-openjdk-amd64/lib/server/classes.jsa
7ffd0d000-800000000 rw-p 00000000 00:00 0 
10000000000-10004000000 ---p 00000000 00:00 0 
626d1eaa2000-626d1eaa3000 r--p 00000000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
626d1eaa3000-626d1eaa4000 r-xp 00001000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
626d1eaa4000-626d1eaa5000 r--p 00002000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
626d1eaa5000-626d1eaa6000 r--p 00002000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
626d1eaa6000-626d1eaa7000 rw-p 00003000 103:02 17173371                  /usr/lib/jvm/java-21-openjdk-amd64/bin/java
626d1eff7000-626d1f03e000 rw-p 00000000 00:00 0                          [heap]
744d7c000000-744d7c021000 rw-p 00000000 00:00 0 
744d7c021000-744d80000000 ---p 00000000 00:00 0 
744d80000000-744d80021000 rw-p 00000000 00:00 0 
744d80021000-744d84000000 ---p 00000000 00:00 0 
744d88000000-744d88021000 rw-p 00000000 00:00 0 
744d88021000-744d8c000000 ---p 00000000 00:00 0 
744d8c000000-744d8c021000 rw-p 00000000 00:00 0 
744d8c021000-744d90000000 ---p 00000000 00:00 0 
744d94000000-744d94021000 rw-p 00000000 00:00 0 
744d94021000-744d98000000 ---p 00000000 00:00 0 
744d98000000-744d98021000 rw-p 00000000 00:00 0 
744d98021000-744d9c000000 ---p 00000000 00:00 0 
744da0000000-744da0021000 rw-p 00000000 00:00 0 
744da0021000-744da4000000 ---p 00000000 00:00 0 
744da4000000-744da4021000 rw-p 00000000 00:00 0 
744da4021000-744da8000000 ---p 00000000 00:00 0 
744dac000000-744dac021000 rw-p 00000000 00:00 0 
744dac021000-744db0000000 ---p 00000000 00:00 0 
744db0000000-744db0021000 rw-p 00000000 00:00 0 
744db0021000-744db4000000 ---p 00000000 00:00 0 
744db8000000-744db8263000 rw-p 00000000 00:00 0 
744db8263000-744dbc000000 ---p 00000000 00:00 0 
744dbc000000-744dbc0a9000 rw-p 00000000 00:00 0 
744dbc0a9000-744dc0000000 ---p 00000000 00:00 0 
744dc4000000-744dc452e000 rw-p 00000000 00:00 0 
744dc452e000-744dc8000000 ---p 00000000 00:00 0 
744dca000000-744dd2000000 ---p 00000000 00:00 0 
744dd4000000-744dd6000000 ---p 00000000 00:00 0 
744dd8000000-744dd8021000 rw-p 00000000 00:00 0 
744dd8021000-744ddc000000 ---p 00000000 00:00 0 
744de0000000-744df0000000 ---p 00000000 00:00 0 
744df2000000-744df2400000 ---p 00000000 00:00 0 
744df2400000-744df2600000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744df2600000-744df2800000 rw-s 00000000 00:01 3493                       /dev/zero (deleted)
744df2800000-744df2a00000 rw-s 00000000 00:01 3494                       /dev/zero (deleted)
744df2a00000-744df3000000 ---p 00000000 00:00 0 
744df3000000-744df3200000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744df3200000-744df3400000 ---p 00000000 00:00 0 
744df3400000-744df3600000 rw-s 00000000 00:01 3496                       /dev/zero (deleted)
744df3600000-744df3b33000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744df3b33000-744df4000000 ---p 00000000 00:00 0 
744df6000000-744dfc000000 ---p 00000000 00:00 0 
744dfc000000-744dfc021000 rw-p 00000000 00:00 0 
744dfc021000-744e00000000 ---p 00000000 00:00 0 
744e03800000-744e1d068000 r-xp 00000000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
744e1d068000-744e1d268000 ---p 19868000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
744e1d268000-744e1d4a6000 r--p 19868000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
744e1d4a6000-744e20e5a000 rw-p 19aa6000 103:02 17325507                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublasLt.so.12.6.3.3
744e20e5a000-744e2502b000 rw-p 00000000 00:00 0 
744e25400000-744e2bb28000 r-xp 00000000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
744e2bb28000-744e2bd28000 ---p 06728000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
744e2bd28000-744e2bd34000 r--p 06728000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
744e2bd34000-744e2bd3b000 rw-p 06734000 103:02 17325506                  /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcublas.so.12.6.3.3
744e2bd3b000-744e2bd47000 rw-p 00000000 00:00 0 
744e2c000000-744e2c02f000 rw-p 00000000 00:00 0 
744e2c02f000-744e30000000 ---p 00000000 00:00 0 
744e30000000-744e3005d000 rw-p 00000000 00:00 0 
744e3005d000-744e34000000 ---p 00000000 00:00 0 
744e38000000-744e38021000 rw-p 00000000 00:00 0 
744e38021000-744e3c000000 ---p 00000000 00:00 0 
744e3c000000-744e3c074000 rw-p 00000000 00:00 0 
744e3c074000-744e40000000 ---p 00000000 00:00 0 
744e44000000-744e44075000 rw-p 00000000 00:00 0 
744e44075000-744e48000000 ---p 00000000 00:00 0 
744e48000000-744e48021000 rw-p 00000000 00:00 0 
744e48021000-744e4c000000 ---p 00000000 00:00 0 
744e50000000-744e500f5000 rw-p 00000000 00:00 0 
744e500f5000-744e54000000 ---p 00000000 00:00 0 
744e54000000-744e54566000 rw-p 00000000 00:00 0 
744e54566000-744e58000000 ---p 00000000 00:00 0 
744e5c000000-744e5c021000 rw-p 00000000 00:00 0 
744e5c021000-744e60000000 ---p 00000000 00:00 0 
744e60000000-744e60021000 rw-p 00000000 00:00 0 
744e60021000-744e64000000 ---p 00000000 00:00 0 
744e68000000-744e68021000 rw-p 00000000 00:00 0 
744e68021000-744e6c000000 ---p 00000000 00:00 0 
744e6c000000-744e6c021000 rw-p 00000000 00:00 0 
744e6c021000-744e70000000 ---p 00000000 00:00 0 
744e74000000-744e74021000 rw-p 00000000 00:00 0 
744e74021000-744e78000000 ---p 00000000 00:00 0 
744e78000000-744e78021000 rw-p 00000000 00:00 0 
744e78021000-744e7c000000 ---p 00000000 00:00 0 
744e80000000-744e80350000 rw-p 00000000 00:00 0 
744e80350000-744e80400000 ---p 00000000 00:00 0 
744e80400000-744e804c0000 rw-p 00000000 00:00 0 
744e804c0000-744e84000000 ---p 00000000 00:00 0 
744e84000000-744e84021000 rw-p 00000000 00:00 0 
744e84021000-744e88000000 ---p 00000000 00:00 0 
744e89400000-744e896dd000 rw-p 00000000 00:00 0 
744e897fa000-744e897fb000 ---p 00000000 00:00 0 
744e897fb000-744e898fb000 rw-p 00000000 00:00 0 
744e898fb000-744e898fc000 ---p 00000000 00:00 0 
744e898fc000-744e899fc000 rw-p 00000000 00:00 0 
744e899fc000-744e899fd000 ---p 00000000 00:00 0 
744e899fd000-744e89afd000 rw-p 00000000 00:00 0 
744e89afd000-744e89afe000 ---p 00000000 00:00 0 
744e89afe000-744e89bfe000 rw-p 00000000 00:00 0 
744e89bfe000-744e89bff000 ---p 00000000 00:00 0 
744e89bff000-744e89cff000 rw-p 00000000 00:00 0 
744e89cff000-744e89d00000 ---p 00000000 00:00 0 
744e89d00000-744e89e00000 rw-p 00000000 00:00 0 
744e89e00000-744e89e01000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e01000-744e89e02000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e02000-744e89e03000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e03000-744e89e04000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e04000-744e89e05000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e05000-744e89e06000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e06000-744e89e07000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e07000-744e89e08000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e08000-744e89e09000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e09000-744e89e0a000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e0a000-744e89e0b000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e0b000-744e89e0c000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e0c000-744e89e0d000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e0d000-744e89e0e000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e0e000-744e89e0f000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e0f000-744e89e10000 rw-s 00000000 00:05 1113                       /dev/nvidiactl
744e89e10000-744e8ae21000 ---p 00000000 00:00 0 
744e8aeff000-744e8af00000 ---p 00000000 00:00 0 
744e8af00000-744e8b000000 rw-p 00000000 00:00 0 
744e8b000000-744e8bc97000 rw-p 00001000 103:02 17173446                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/classes.jsa
744e8bc97000-744e8c000000 ---p 00000000 00:00 0 
744e8c000000-744e8c030000 rw-p 00000000 00:00 0 
744e8c030000-744e8c040000 ---p 00000000 00:00 0 
744e8c040000-744e8c080000 rw-p 00000000 00:00 0 
744e8c080000-744ecc000000 ---p 00000000 00:00 0 
744ecc000000-744ecc021000 rw-p 00000000 00:00 0 
744ecc021000-744ed0000000 ---p 00000000 00:00 0 
744ed0000000-744ed0021000 rw-p 00000000 00:00 0 
744ed0021000-744ed4000000 ---p 00000000 00:00 0 
744ed40ff000-744ed4100000 ---p 00000000 00:00 0 
744ed4100000-744ed4200000 rw-p 00000000 00:00 0 
744ed4200000-744ed42c7000 r-xp 00000000 103:02 18219024                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
744ed42c7000-744ed44c7000 ---p 000c7000 103:02 18219024                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
744ed44c7000-744ed44cc000 r--p 000c7000 103:02 18219024                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
744ed44cc000-744ed44cd000 rw-p 000cc000 103:02 18219024                  /tmp/libJCudaRuntime-12.0.0-linux-x86_64.so
744ed44cd000-744ed44cf000 rw-p 00000000 00:00 0 
744ed44fe000-744ed44ff000 ---p 00000000 00:00 0 
744ed44ff000-744ed45ff000 rw-p 00000000 00:00 0 
744ed45ff000-744ed4600000 ---p 00000000 00:00 0 
744ed4600000-744ed4700000 rw-p 00000000 00:00 0 
744ed4700000-744ed4704000 ---p 00000000 00:00 0 
744ed4704000-744ed4800000 rw-p 00000000 00:00 0 
744ed4800000-744ed4801000 ---p 00000000 00:00 0 
744ed4801000-744ed5001000 rw-p 00000000 00:00 0 
744ed5100000-744ed5104000 ---p 00000000 00:00 0 
744ed5104000-744ed5200000 rw-p 00000000 00:00 0 
744ed5200000-744ed6221000 ---p 00000000 00:00 0 
744ed6300000-744ed6304000 ---p 00000000 00:00 0 
744ed6304000-744ed6400000 rw-p 00000000 00:00 0 
744ed6400000-744ed64de000 r--p 00000000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
744ed64de000-744ed69b3000 r-xp 000de000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
744ed69b3000-744ed7e4f000 r--p 005b3000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
744ed7e4f000-744ed7e50000 ---p 01a4f000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
744ed7e50000-744ed7e68000 r--p 01a4f000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
744ed7e68000-744ed7f63000 rw-p 01a67000 103:02 16527986                  /usr/lib/x86_64-linux-gnu/libcuda.so.550.120
744ed7f63000-744ed7fcc000 rw-p 00000000 00:00 0 
744ed8000000-744ed8021000 rw-p 00000000 00:00 0 
744ed8021000-744edc000000 ---p 00000000 00:00 0 
744edc000000-744edc021000 rw-p 00000000 00:00 0 
744edc021000-744ee0000000 ---p 00000000 00:00 0 
744ee001d000-744ee001f000 r--p 00000000 103:02 16530942                  /usr/lib/x86_64-linux-gnu/libpcre2-8.so.0.11.2
744ee001f000-744ee008d000 r-xp 00002000 103:02 16530942                  /usr/lib/x86_64-linux-gnu/libpcre2-8.so.0.11.2
744ee008d000-744ee00b5000 r--p 00070000 103:02 16530942                  /usr/lib/x86_64-linux-gnu/libpcre2-8.so.0.11.2
744ee00b5000-744ee00b6000 r--p 00097000 103:02 16530942                  /usr/lib/x86_64-linux-gnu/libpcre2-8.so.0.11.2
744ee00b6000-744ee00b7000 rw-p 00098000 103:02 16530942                  /usr/lib/x86_64-linux-gnu/libpcre2-8.so.0.11.2
744ee00b7000-744ee00d5000 r--p 00000000 103:02 16515889                  /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0.8000.0
744ee00d5000-744ee0175000 r-xp 0001e000 103:02 16515889                  /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0.8000.0
744ee0175000-744ee01fd000 r--p 000be000 103:02 16515889                  /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0.8000.0
744ee01fd000-744ee01fe000 r--p 00146000 103:02 16515889                  /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0.8000.0
744ee01fe000-744ee01ff000 rw-p 00147000 103:02 16515889                  /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0.8000.0
744ee01ff000-744ee0200000 rw-p 00000000 00:00 0 
744ee0200000-744ee0400000 rw-s 00000000 00:01 3495                       /dev/zero (deleted)
744ee0400000-744ee0401000 ---p 00000000 00:00 0 
744ee0401000-744ee0c01000 rw-p 00000000 00:00 0 
744ee0c27000-744ee0c34000 r--p 00000000 103:02 16530615                  /usr/lib/x86_64-linux-gnu/libfreetype.so.6.20.1
744ee0c34000-744ee0cc5000 r-xp 0000d000 103:02 16530615                  /usr/lib/x86_64-linux-gnu/libfreetype.so.6.20.1
744ee0cc5000-744ee0ceb000 r--p 0009e000 103:02 16530615                  /usr/lib/x86_64-linux-gnu/libfreetype.so.6.20.1
744ee0ceb000-744ee0cf2000 r--p 000c4000 103:02 16530615                  /usr/lib/x86_64-linux-gnu/libfreetype.so.6.20.1
744ee0cf2000-744ee0cf3000 rw-p 000cb000 103:02 16530615                  /usr/lib/x86_64-linux-gnu/libfreetype.so.6.20.1
744ee0cf3000-744ee0cfe000 r--p 00000000 103:02 16530725                  /usr/lib/x86_64-linux-gnu/libharfbuzz.so.0.60830.0
744ee0cfe000-744ee0dcc000 r-xp 0000b000 103:02 16530725                  /usr/lib/x86_64-linux-gnu/libharfbuzz.so.0.60830.0
744ee0dcc000-744ee0dfe000 r--p 000d9000 103:02 16530725                  /usr/lib/x86_64-linux-gnu/libharfbuzz.so.0.60830.0
744ee0dfe000-744ee0dff000 r--p 0010b000 103:02 16530725                  /usr/lib/x86_64-linux-gnu/libharfbuzz.so.0.60830.0
744ee0dff000-744ee0e00000 rw-p 0010c000 103:02 16530725                  /usr/lib/x86_64-linux-gnu/libharfbuzz.so.0.60830.0
744ee0e00000-744ee105a000 rw-p 00000000 00:00 0 
744ee1092000-744ee1093000 r--p 00000000 103:02 16530467                  /usr/lib/x86_64-linux-gnu/libbrotlicommon.so.1.1.0
744ee1093000-744ee1094000 r-xp 00001000 103:02 16530467                  /usr/lib/x86_64-linux-gnu/libbrotlicommon.so.1.1.0
744ee1094000-744ee10b3000 r--p 00002000 103:02 16530467                  /usr/lib/x86_64-linux-gnu/libbrotlicommon.so.1.1.0
744ee10b3000-744ee10b4000 r--p 00021000 103:02 16530467                  /usr/lib/x86_64-linux-gnu/libbrotlicommon.so.1.1.0
744ee10b4000-744ee10b5000 rw-p 00022000 103:02 16530467                  /usr/lib/x86_64-linux-gnu/libbrotlicommon.so.1.1.0
744ee10b5000-744ee10b6000 r--p 00000000 103:02 16530468                  /usr/lib/x86_64-linux-gnu/libbrotlidec.so.1.1.0
744ee10b6000-744ee10be000 r-xp 00001000 103:02 16530468                  /usr/lib/x86_64-linux-gnu/libbrotlidec.so.1.1.0
744ee10be000-744ee10c1000 r--p 00009000 103:02 16530468                  /usr/lib/x86_64-linux-gnu/libbrotlidec.so.1.1.0
744ee10c1000-744ee10c2000 r--p 0000b000 103:02 16530468                  /usr/lib/x86_64-linux-gnu/libbrotlidec.so.1.1.0
744ee10c2000-744ee10c3000 rw-p 0000c000 103:02 16530468                  /usr/lib/x86_64-linux-gnu/libbrotlidec.so.1.1.0
744ee10c3000-744ee10dc000 r--p 00000000 103:02 16530316                  /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0
744ee10dc000-744ee116c000 r-xp 00019000 103:02 16530316                  /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0
744ee116c000-744ee11fb000 r--p 000a9000 103:02 16530316                  /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0
744ee11fb000-744ee11fc000 r--p 00138000 103:02 16530316                  /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0
744ee11fc000-744ee1200000 rw-p 00139000 103:02 16530316                  /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0
744ee1200000-744ee1201000 ---p 00000000 00:00 0 
744ee1201000-744ee1a01000 rw-p 00000000 00:00 0 
744ee1a02000-744ee1a07000 r--p 00000000 103:02 16530960                  /usr/lib/x86_64-linux-gnu/libpng16.so.16.43.0
744ee1a07000-744ee1a2f000 r-xp 00005000 103:02 16530960                  /usr/lib/x86_64-linux-gnu/libpng16.so.16.43.0
744ee1a2f000-744ee1a38000 r--p 0002d000 103:02 16530960                  /usr/lib/x86_64-linux-gnu/libpng16.so.16.43.0
744ee1a38000-744ee1a39000 r--p 00035000 103:02 16530960                  /usr/lib/x86_64-linux-gnu/libpng16.so.16.43.0
744ee1a39000-744ee1a3a000 rw-p 00036000 103:02 16530960                  /usr/lib/x86_64-linux-gnu/libpng16.so.16.43.0
744ee1a3a000-744ee1a3c000 r--p 00000000 103:02 16530473                  /usr/lib/x86_64-linux-gnu/libbz2.so.1.0.4
744ee1a3c000-744ee1a4a000 r-xp 00002000 103:02 16530473                  /usr/lib/x86_64-linux-gnu/libbz2.so.1.0.4
744ee1a4a000-744ee1a4c000 r--p 00010000 103:02 16530473                  /usr/lib/x86_64-linux-gnu/libbz2.so.1.0.4
744ee1a4c000-744ee1a4d000 r--p 00011000 103:02 16530473                  /usr/lib/x86_64-linux-gnu/libbz2.so.1.0.4
744ee1a4d000-744ee1a4e000 rw-p 00012000 103:02 16530473                  /usr/lib/x86_64-linux-gnu/libbz2.so.1.0.4
744ee1a4e000-744ee1a51000 r--p 00000000 103:02 16530678                  /usr/lib/x86_64-linux-gnu/libgraphite2.so.3.2.1
744ee1a51000-744ee1a6e000 r-xp 00003000 103:02 16530678                  /usr/lib/x86_64-linux-gnu/libgraphite2.so.3.2.1
744ee1a6e000-744ee1a71000 r--p 00020000 103:02 16530678                  /usr/lib/x86_64-linux-gnu/libgraphite2.so.3.2.1
744ee1a71000-744ee1a73000 r--p 00022000 103:02 16530678                  /usr/lib/x86_64-linux-gnu/libgraphite2.so.3.2.1
744ee1a73000-744ee1a74000 rw-p 00024000 103:02 16530678                  /usr/lib/x86_64-linux-gnu/libgraphite2.so.3.2.1
744ee1a74000-744ee1a78000 r--p 00000000 103:02 16530777                  /usr/lib/x86_64-linux-gnu/libjpeg.so.8.2.2
744ee1a78000-744ee1ac5000 r-xp 00004000 103:02 16530777                  /usr/lib/x86_64-linux-gnu/libjpeg.so.8.2.2
744ee1ac5000-744ee1af5000 r--p 00051000 103:02 16530777                  /usr/lib/x86_64-linux-gnu/libjpeg.so.8.2.2
744ee1af5000-744ee1af6000 r--p 00081000 103:02 16530777                  /usr/lib/x86_64-linux-gnu/libjpeg.so.8.2.2
744ee1af6000-744ee1af7000 rw-p 00082000 103:02 16530777                  /usr/lib/x86_64-linux-gnu/libjpeg.so.8.2.2
744ee1b06000-744ee1b0d000 r--s 00000000 103:02 16532226                  /usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache
744ee1b0d000-744ee1b2b000 r--p 00000000 103:02 17173412                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libawt.so
744ee1b2b000-744ee1bc2000 r-xp 0001e000 103:02 17173412                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libawt.so
744ee1bc2000-744ee1bcf000 r--p 000b5000 103:02 17173412                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libawt.so
744ee1bcf000-744ee1bd0000 r--p 000c1000 103:02 17173412                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libawt.so
744ee1bd0000-744ee1bdb000 rw-p 000c2000 103:02 17173412                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libawt.so
744ee1bdb000-744ee1c00000 rw-p 00000000 00:00 0 
744ee1c00000-744ee1d38000 r-xp 00000000 103:02 18219014                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
744ee1d38000-744ee1f38000 ---p 00138000 103:02 18219014                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
744ee1f38000-744ee1f3d000 r--p 00138000 103:02 18219014                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
744ee1f3d000-744ee1f3f000 rw-p 0013d000 103:02 18219014                  /tmp/libJCublas2-12.0.0-linux-x86_64.so
744ee1f3f000-744ee1f41000 rw-p 00000000 00:00 0 
744ee1f41000-744ee1f45000 r--p 00000000 103:02 16530470                  /usr/lib/x86_64-linux-gnu/libbsd.so.0.12.1
744ee1f45000-744ee1f51000 r-xp 00004000 103:02 16530470                  /usr/lib/x86_64-linux-gnu/libbsd.so.0.12.1
744ee1f51000-744ee1f54000 r--p 00010000 103:02 16530470                  /usr/lib/x86_64-linux-gnu/libbsd.so.0.12.1
744ee1f54000-744ee1f55000 r--p 00012000 103:02 16530470                  /usr/lib/x86_64-linux-gnu/libbsd.so.0.12.1
744ee1f55000-744ee1f56000 rw-p 00013000 103:02 16530470                  /usr/lib/x86_64-linux-gnu/libbsd.so.0.12.1
744ee1f56000-744ee1f57000 rw-p 00000000 00:00 0 
744ee1f57000-744ee1f62000 r--p 00000000 103:02 16531187                  /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0
744ee1f62000-744ee1f75000 r-xp 0000b000 103:02 16531187                  /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0
744ee1f75000-744ee1f7e000 r--p 0001e000 103:02 16531187                  /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0
744ee1f7e000-744ee1f7f000 r--p 00026000 103:02 16531187                  /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0
744ee1f7f000-744ee1f80000 rw-p 00027000 103:02 16531187                  /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0
744ee1f80000-744ee1f92000 r--p 00000000 103:02 17173342                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libawt_xawt.so
744ee1f92000-744ee1fd9000 r-xp 00012000 103:02 17173342                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libawt_xawt.so
744ee1fd9000-744ee1ff1000 r--p 00059000 103:02 17173342                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libawt_xawt.so
744ee1ff1000-744ee1ff6000 r--p 00071000 103:02 17173342                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libawt_xawt.so
744ee1ff6000-744ee1ff8000 rw-p 00076000 103:02 17173342                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libawt_xawt.so
744ee1ff8000-744ee2200000 rw-p 00000000 00:00 0 
744ee2200000-744ee2204000 ---p 00000000 00:00 0 
744ee2204000-744ee2300000 rw-p 00000000 00:00 0 
744ee2300000-744ee2304000 ---p 00000000 00:00 0 
744ee2304000-744ee2400000 rw-p 00000000 00:00 0 
744ee2400000-744ee2404000 ---p 00000000 00:00 0 
744ee2404000-744ee2500000 rw-p 00000000 00:00 0 
744ee2500000-744ee2504000 ---p 00000000 00:00 0 
744ee2504000-744ee2600000 rw-p 00000000 00:00 0 
744ee2600000-744ee2604000 ---p 00000000 00:00 0 
744ee2604000-744ee2700000 rw-p 00000000 00:00 0 
744ee2700000-744ee2704000 ---p 00000000 00:00 0 
744ee2704000-744ee2800000 rw-p 00000000 00:00 0 
744ee2800000-744ee2804000 ---p 00000000 00:00 0 
744ee2804000-744ee2900000 rw-p 00000000 00:00 0 
744ee2900000-744ee2904000 ---p 00000000 00:00 0 
744ee2904000-744ee2a00000 rw-p 00000000 00:00 0 
744ee2a00000-744ee2a04000 ---p 00000000 00:00 0 
744ee2a04000-744ee2b00000 rw-p 00000000 00:00 0 
744ee2b00000-744ee2b04000 ---p 00000000 00:00 0 
744ee2b04000-744ee2c00000 rw-p 00000000 00:00 0 
744ee2c00000-744ee2c04000 ---p 00000000 00:00 0 
744ee2c04000-744ee2d00000 rw-p 00000000 00:00 0 
744ee2d00000-744ee2d04000 ---p 00000000 00:00 0 
744ee2d04000-744ee2e00000 rw-p 00000000 00:00 0 
744ee2e00000-744ee3bec000 r--p 00000000 103:02 16521112                  /usr/lib/locale/locale-archive
744ee3bed000-744ee3bf0000 r--p 00000000 103:02 17173416                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libfontmanager.so
744ee3bf0000-744ee3bf9000 r-xp 00003000 103:02 17173416                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libfontmanager.so
744ee3bf9000-744ee3bfb000 r--p 0000c000 103:02 17173416                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libfontmanager.so
744ee3bfb000-744ee3bfc000 r--p 0000d000 103:02 17173416                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libfontmanager.so
744ee3bfc000-744ee3bfd000 rw-p 0000e000 103:02 17173416                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libfontmanager.so
744ee3bfd000-744ee3c01000 ---p 00000000 00:00 0 
744ee3c01000-744ee3cfd000 rw-p 00000000 00:00 0 
744ee3cfd000-744ee3cfe000 ---p 00000000 00:00 0 
744ee3cfe000-744ee3dfe000 rw-p 00000000 00:00 0 
744ee3dfe000-744ee3dff000 ---p 00000000 00:00 0 
744ee3dff000-744ee3eff000 rw-p 00000000 00:00 0 
744ee3eff000-744ee3f00000 ---p 00000000 00:00 0 
744ee3f00000-744ee4000000 rw-p 00000000 00:00 0 
744ee4000000-744ee4021000 rw-p 00000000 00:00 0 
744ee4021000-744ee8000000 ---p 00000000 00:00 0 
744ee8002000-744ee8004000 r--p 00000000 103:02 16530828                  /usr/lib/x86_64-linux-gnu/libmd.so.0.1.0
744ee8004000-744ee800d000 r-xp 00002000 103:02 16530828                  /usr/lib/x86_64-linux-gnu/libmd.so.0.1.0
744ee800d000-744ee800f000 r--p 0000b000 103:02 16530828                  /usr/lib/x86_64-linux-gnu/libmd.so.0.1.0
744ee800f000-744ee8010000 r--p 0000c000 103:02 16530828                  /usr/lib/x86_64-linux-gnu/libmd.so.0.1.0
744ee8010000-744ee8011000 rw-p 0000d000 103:02 16530828                  /usr/lib/x86_64-linux-gnu/libmd.so.0.1.0
744ee8011000-744ee8014000 r--p 00000000 103:02 16530328                  /usr/lib/x86_64-linux-gnu/libXi.so.6.1.0
744ee8014000-744ee8020000 r-xp 00003000 103:02 16530328                  /usr/lib/x86_64-linux-gnu/libXi.so.6.1.0
744ee8020000-744ee8022000 r--p 0000f000 103:02 16530328                  /usr/lib/x86_64-linux-gnu/libXi.so.6.1.0
744ee8022000-744ee8023000 r--p 00011000 103:02 16530328                  /usr/lib/x86_64-linux-gnu/libXi.so.6.1.0
744ee8023000-744ee8024000 rw-p 00012000 103:02 16530328                  /usr/lib/x86_64-linux-gnu/libXi.so.6.1.0
744ee8024000-744ee8029000 r--p 00000000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
744ee8029000-744ee806a000 r-xp 00005000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
744ee806a000-744ee80f3000 r--p 00046000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
744ee80f3000-744ee80f4000 r--p 000ce000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
744ee80f4000-744ee80f5000 rw-p 000cf000 103:02 17173429                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjsvml.so
744ee80f5000-744ee80f6000 ---p 00000000 00:00 0 
744ee80f6000-744ee81f6000 rw-p 00000000 00:00 0 
744ee81f6000-744eeb3b0000 rw-p 00000000 00:00 0 
744eeb3b0000-744ef2650000 ---p 00000000 00:00 0 
744ef2650000-744ef2660000 rw-p 00000000 00:00 0 
744ef2662000-744ef2664000 r--p 00000000 103:02 16530323                  /usr/lib/x86_64-linux-gnu/libXdmcp.so.6.0.0
744ef2664000-744ef2666000 r-xp 00002000 103:02 16530323                  /usr/lib/x86_64-linux-gnu/libXdmcp.so.6.0.0
744ef2666000-744ef2668000 r--p 00004000 103:02 16530323                  /usr/lib/x86_64-linux-gnu/libXdmcp.so.6.0.0
744ef2668000-744ef2669000 r--p 00005000 103:02 16530323                  /usr/lib/x86_64-linux-gnu/libXdmcp.so.6.0.0
744ef2669000-744ef266a000 rw-p 00006000 103:02 16530323                  /usr/lib/x86_64-linux-gnu/libXdmcp.so.6.0.0
744ef266a000-744ef266e000 r--p 00000000 103:02 16530324                  /usr/lib/x86_64-linux-gnu/libXext.so.6.4.0
744ef266e000-744ef2679000 r-xp 00004000 103:02 16530324                  /usr/lib/x86_64-linux-gnu/libXext.so.6.4.0
744ef2679000-744ef267c000 r--p 0000f000 103:02 16530324                  /usr/lib/x86_64-linux-gnu/libXext.so.6.4.0
744ef267c000-744ef267d000 r--p 00011000 103:02 16530324                  /usr/lib/x86_64-linux-gnu/libXext.so.6.4.0
744ef267d000-744ef267e000 rw-p 00012000 103:02 16530324                  /usr/lib/x86_64-linux-gnu/libXext.so.6.4.0
744ef267e000-744ef28f6000 rw-p 00000000 00:00 0 
744ef28f6000-744ef374a000 ---p 00000000 00:00 0 
744ef374a000-744ef374c000 rw-p 00000000 00:00 0 
744ef374c000-744ef38f6000 rw-p 00000000 00:00 0 
744ef38f6000-744ef474a000 ---p 00000000 00:00 0 
744ef474a000-744ef474c000 rw-p 00000000 00:00 0 
744ef474d000-744ef474e000 r--p 00000000 103:02 16530318                  /usr/lib/x86_64-linux-gnu/libXau.so.6.0.0
744ef474e000-744ef4750000 r-xp 00001000 103:02 16530318                  /usr/lib/x86_64-linux-gnu/libXau.so.6.0.0
744ef4750000-744ef4751000 r--p 00003000 103:02 16530318                  /usr/lib/x86_64-linux-gnu/libXau.so.6.0.0
744ef4751000-744ef4752000 r--p 00003000 103:02 16530318                  /usr/lib/x86_64-linux-gnu/libXau.so.6.0.0
744ef4752000-744ef4753000 rw-p 00004000 103:02 16530318                  /usr/lib/x86_64-linux-gnu/libXau.so.6.0.0
744ef4753000-744ef4755000 r--p 00000000 103:02 16530334                  /usr/lib/x86_64-linux-gnu/libXrender.so.1.3.0
744ef4755000-744ef475c000 r-xp 00002000 103:02 16530334                  /usr/lib/x86_64-linux-gnu/libXrender.so.1.3.0
744ef475c000-744ef475d000 r--p 00009000 103:02 16530334                  /usr/lib/x86_64-linux-gnu/libXrender.so.1.3.0
744ef475d000-744ef475e000 r--p 00009000 103:02 16530334                  /usr/lib/x86_64-linux-gnu/libXrender.so.1.3.0
744ef475e000-744ef475f000 rw-p 0000a000 103:02 16530334                  /usr/lib/x86_64-linux-gnu/libXrender.so.1.3.0
744ef475f000-744ef4800000 rw-p 00000000 00:00 0 
744ef4800000-744ef4a70000 rwxp 00000000 00:00 0 
744ef4a70000-744efbc5f000 ---p 00000000 00:00 0 
744efbc5f000-744efbf1f000 rwxp 00000000 00:00 0 
744efbf1f000-744efc3a0000 ---p 00000000 00:00 0 
744efc3a0000-744efc610000 rwxp 00000000 00:00 0 
744efc610000-744f03800000 ---p 00000000 00:00 0 
744f03800000-744f0be0c000 r--s 00000000 103:02 17173445                  /usr/lib/jvm/java-21-openjdk-amd64/lib/modules
744f0be0f000-744f0be11000 r--p 00000000 103:02 16530337                  /usr/lib/x86_64-linux-gnu/libXtst.so.6.1.0
744f0be11000-744f0be14000 r-xp 00002000 103:02 16530337                  /usr/lib/x86_64-linux-gnu/libXtst.so.6.1.0
744f0be14000-744f0be15000 r--p 00005000 103:02 16530337                  /usr/lib/x86_64-linux-gnu/libXtst.so.6.1.0
744f0be15000-744f0be16000 r--p 00005000 103:02 16530337                  /usr/lib/x86_64-linux-gnu/libXtst.so.6.1.0
744f0be16000-744f0be17000 rw-p 00006000 103:02 16530337                  /usr/lib/x86_64-linux-gnu/libXtst.so.6.1.0
744f0be1c000-744f0be1d000 r--p 00000000 103:02 16530329                  /usr/lib/x86_64-linux-gnu/libXinerama.so.1.0.0
744f0be1d000-744f0be1e000 r-xp 00001000 103:02 16530329                  /usr/lib/x86_64-linux-gnu/libXinerama.so.1.0.0
744f0be1e000-744f0be1f000 r--p 00002000 103:02 16530329                  /usr/lib/x86_64-linux-gnu/libXinerama.so.1.0.0
744f0be1f000-744f0be20000 r--p 00002000 103:02 16530329                  /usr/lib/x86_64-linux-gnu/libXinerama.so.1.0.0
744f0be20000-744f0be21000 rw-p 00003000 103:02 16530329                  /usr/lib/x86_64-linux-gnu/libXinerama.so.1.0.0
744f0be21000-744f0be23000 r--p 00000000 103:02 17173423                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjavajpeg.so
744f0be23000-744f0be2a000 r-xp 00002000 103:02 17173423                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjavajpeg.so
744f0be2a000-744f0be2b000 r--p 00009000 103:02 17173423                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjavajpeg.so
744f0be2b000-744f0be2c000 r--p 0000a000 103:02 17173423                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjavajpeg.so
744f0be2c000-744f0be2d000 rw-p 0000b000 103:02 17173423                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjavajpeg.so
744f0be2d000-744f0be6e000 rw-p 00000000 00:00 0 
744f0be6e000-744f0be7e000 -w-s 00000000 00:05 1114                       /dev/nvidia0
744f0be7e000-744f0fc06000 rw-p 00000000 00:00 0 
744f0fc06000-744f10000000 ---p 00000000 00:00 0 
744f10001000-744f10002000 r--p 00000000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
744f10002000-744f10003000 r-xp 00001000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
744f10003000-744f10004000 r--p 00002000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
744f10004000-744f10005000 r--p 00002000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
744f10005000-744f10006000 rw-p 00003000 103:02 16530540                  /usr/lib/x86_64-linux-gnu/libdl.so.2
744f10006000-744f10162000 rw-p 00000000 00:00 0 
744f10162000-744f10163000 ---p 00000000 00:00 0 
744f10163000-744f10263000 rw-p 00000000 00:00 0 
744f10263000-744f10264000 ---p 00000000 00:00 0 
744f10264000-744f10364000 rw-p 00000000 00:00 0 
744f10364000-744f10365000 ---p 00000000 00:00 0 
744f10365000-744f10465000 rw-p 00000000 00:00 0 
744f10465000-744f11233000 rw-p 00000000 00:00 0 
744f11233000-744f11317000 ---p 00000000 00:00 0 
744f11317000-744f1131c000 rw-p 00000000 00:00 0 
744f1131c000-744f11400000 ---p 00000000 00:00 0 
744f11400000-744f1149d000 r--p 00000000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
744f1149d000-744f115e5000 r-xp 0009d000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
744f115e5000-744f1166c000 r--p 001e5000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
744f1166c000-744f11677000 r--p 0026b000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
744f11677000-744f1167a000 rw-p 00276000 103:02 16543594                  /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33
744f1167a000-744f1167e000 rw-p 00000000 00:00 0 
744f11681000-744f11700000 rw-p 00000000 00:00 0 
744f11700000-744f11704000 ---p 00000000 00:00 0 
744f11704000-744f11800000 rw-p 00000000 00:00 0 
744f11800000-744f11aa1000 r--p 00000000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
744f11aa1000-744f12911000 r-xp 002a1000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
744f12911000-744f12be5000 r--p 01111000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
744f12be5000-744f12cb8000 r--p 013e4000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
744f12cb8000-744f12ce8000 rw-p 014b7000 103:02 17173449                  /usr/lib/jvm/java-21-openjdk-amd64/lib/server/libjvm.so
744f12ce8000-744f12d4e000 rw-p 00000000 00:00 0 
744f12d50000-744f12d51000 r--p 00000000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
744f12d51000-744f12d52000 r-xp 00001000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
744f12d52000-744f12d53000 r--p 00002000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
744f12d53000-744f12d54000 r--p 00002000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
744f12d54000-744f12d55000 rw-p 00003000 103:02 16531006                  /usr/lib/x86_64-linux-gnu/librt.so.1
744f12d55000-744f12d57000 r--p 00000000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
744f12d57000-744f12d5c000 r-xp 00002000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
744f12d5c000-744f12d5e000 r--p 00007000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
744f12d5e000-744f12d5f000 r--p 00008000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
744f12d5f000-744f12d60000 rw-p 00009000 103:02 17173444                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libzip.so
744f12d60000-744f12d63000 r--p 00000000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
744f12d63000-744f12d6b000 r-xp 00003000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
744f12d6b000-744f12d6d000 r--p 0000b000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
744f12d6d000-744f12d6e000 r--p 0000c000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
744f12d6e000-744f12d6f000 rw-p 0000d000 103:02 17173436                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnet.so
744f12d6f000-744f12d76000 r--p 00000000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
744f12d76000-744f12d7f000 r-xp 00007000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
744f12d7f000-744f12d83000 r--p 00010000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
744f12d83000-744f12d84000 r--p 00014000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
744f12d84000-744f12d85000 rw-p 00015000 103:02 17173437                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libnio.so
744f12d85000-744f12dc9000 rw-p 00000000 00:00 0 
744f12dc9000-744f12dd2000 ---p 00000000 00:00 0 
744f12dd2000-744f12dd6000 r--p 00000000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
744f12dd6000-744f12dfa000 r-xp 00004000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
744f12dfa000-744f12dfe000 r--p 00028000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
744f12dfe000-744f12dff000 r--p 0002b000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
744f12dff000-744f12e00000 rw-p 0002c000 103:02 16528598                  /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
744f12e00000-744f12e28000 r--p 00000000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
744f12e28000-744f12fb0000 r-xp 00028000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
744f12fb0000-744f12fff000 r--p 001b0000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
744f12fff000-744f13003000 r--p 001fe000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
744f13003000-744f13005000 rw-p 00202000 103:02 16530474                  /usr/lib/x86_64-linux-gnu/libc.so.6
744f13005000-744f13012000 rw-p 00000000 00:00 0 
744f13015000-744f13016000 r--p 00000000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
744f13016000-744f13017000 r-xp 00001000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
744f13017000-744f13018000 r--p 00002000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
744f13018000-744f13019000 r--p 00002000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
744f13019000-744f1301a000 rw-p 00003000 103:02 16530978                  /usr/lib/x86_64-linux-gnu/libpthread.so.0
744f1301a000-744f13027000 r--p 00000000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
744f13027000-744f13036000 r-xp 0000d000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
744f13036000-744f1303b000 r--p 0001c000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
744f1303b000-744f1303c000 r--p 00021000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
744f1303c000-744f1303d000 rw-p 00022000 103:02 17173422                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjava.so
744f1303d000-744f1303e000 rw-p 00000000 00:00 0 
744f1303e000-744f1304e000 r--p 00000000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
744f1304e000-744f130cd000 r-xp 00010000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
744f130cd000-744f13125000 r--p 0008f000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
744f13125000-744f13126000 r--p 000e7000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
744f13126000-744f13127000 rw-p 000e8000 103:02 16530817                  /usr/lib/x86_64-linux-gnu/libm.so.6
744f13127000-744f13129000 rw-p 00000000 00:00 0 
744f13129000-744f1312b000 r--p 00000000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
744f1312b000-744f13135000 r-xp 00002000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
744f13135000-744f13138000 r--p 0000c000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
744f13138000-744f13139000 r--p 0000f000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
744f13139000-744f1313a000 rw-p 00010000 103:02 17173426                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjli.so
744f1313a000-744f1313c000 r--p 00000000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
744f1313c000-744f1314e000 r-xp 00002000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
744f1314e000-744f13154000 r--p 00014000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
744f13154000-744f13155000 r--p 0001a000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
744f13155000-744f13156000 rw-p 0001b000 103:02 16531205                  /usr/lib/x86_64-linux-gnu/libz.so.1.3
744f13159000-744f13161000 rw-s 00000000 103:02 18350297                  /tmp/hsperfdata_dov/60559
744f13161000-744f13162000 ---p 00000000 00:00 0 
744f13162000-744f13163000 r--p 00000000 00:00 0 
744f13163000-744f13164000 ---p 00000000 00:00 0 
744f13164000-744f13166000 r--p 00000000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
744f13166000-744f13169000 r-xp 00002000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
744f13169000-744f1316a000 r--p 00005000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
744f1316a000-744f1316b000 r--p 00006000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
744f1316b000-744f1316c000 rw-p 00007000 103:02 17173425                  /usr/lib/jvm/java-21-openjdk-amd64/lib/libjimage.so
744f1316c000-744f1316e000 rw-p 00000000 00:00 0 
744f1316e000-744f1316f000 r--p 00000000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
744f1316f000-744f1319a000 r-xp 00001000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
744f1319a000-744f131a4000 r--p 0002c000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
744f131a4000-744f131a6000 r--p 00036000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
744f131a6000-744f131a8000 rw-p 00038000 103:02 16530286                  /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
7fff305b6000-7fff305d7000 rw-p 00000000 00:00 0                          [stack]
7fff305d8000-7fff305dc000 r--p 00000000 00:00 0                          [vvar]
7fff305dc000-7fff305de000 r-xp 00000000 00:00 0                          [vdso]
ffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]
Total number of mappings: 498


VM Arguments:
jvm_args: -Dfile.encoding=UTF-8 --module-path=/home/dov/projects/NeighborhoodPIG/build/classes 
java_command: main.NeighborhoodPIG
java_class_path (initial): /home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-javadoc.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-sources.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-test-sources.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-tests.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1-tools.jar:/home/dov/projects/Libraries/commons-math3/commons-math3-3.6.1.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcublas-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcublas-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcuda-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcuda-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcudnn-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcudnn-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcufft-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcufft-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcurand-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcurand-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusolver-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusolver-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusparse-12.0.0.jar:/home/dov/projects/JCudaWrapper/jcuda12/jcusparse-natives-12.0.0-linux-x86_64.jar:/home/dov/projects/NeighborhoodPIG/build/classes
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 12                                        {product} {ergonomic}
     uint ConcGCThreads                            = 3                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 13                                        {product} {ergonomic}
   size_t G1HeapRegionSize                         = 4194304                                   {product} {ergonomic}
    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}
   size_t InitialHeapSize                          = 515899392                                 {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MaxHeapSize                              = 8212447232                                {product} {ergonomic}
   size_t MaxNewSize                               = 4924112896                                {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 4194304                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 7602480                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122027880                              {pd product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122027880                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
   size_t SoftMaxHeapSize                          = 8212447232                             {manageable} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags foldmultilines=false
 #1: stderr all=off uptime,level,tags foldmultilines=false

Environment Variables:
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin
USERNAME=dov
SHELL=/bin/bash
DISPLAY=:1
LANG=en_US.UTF-8

Active Locale:
LC_ALL=en_US.UTF-8
LC_COLLATE=en_US.UTF-8
LC_CTYPE=en_US.UTF-8
LC_MESSAGES=en_US.UTF-8
LC_MONETARY=en_US.UTF-8
LC_NUMERIC=en_US.UTF-8
LC_TIME=en_US.UTF-8

Signal Handlers:
   SIGSEGV: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
    SIGBUS: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
    SIGFPE: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
   SIGPIPE: javaSignalHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGXFSZ: javaSignalHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGILL: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked
   SIGUSR2: SR_handler in libjvm.so, mask=00000000000000000000000000000000, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGHUP: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
    SIGINT: SIG_IGN, mask=00000000000000000000000000000000, flags=none, blocked
   SIGTERM: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGQUIT: UserHandler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, blocked
   SIGTRAP: crash_handler in libjvm.so, mask=11100100010111111101111111111110, flags=SA_RESTART|SA_SIGINFO, unblocked


Periodic native trim disabled

---------------  S Y S T E M  ---------------

OS:
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=24.04
DISTRIB_CODENAME=noble
DISTRIB_DESCRIPTION="Ubuntu 24.04.1 LTS"
uname: Linux 6.8.0-49-generic #49-Ubuntu SMP PREEMPT_DYNAMIC Mon Nov  4 02:06:24 UTC 2024 x86_64
OS uptime: 1 days 4:20 hours
libc: glibc 2.39 NPTL 2.39 
rlimit (soft/hard): STACK 8192k/infinity , CORE 0k/infinity , NPROC 125013/125013 , NOFILE 1048576/1048576 , AS infinity/infinity , CPU infinity/infinity , DATA infinity/infinity , FSIZE infinity/infinity , MEMLOCK 4009332k/4009332k
load average: 0.60 0.69 0.37

/proc/meminfo:
MemTotal:       32074664 kB
MemFree:        18454388 kB
MemAvailable:   24052288 kB
Buffers:          811152 kB
Cached:          5161060 kB
SwapCached:            0 kB
Active:          7169752 kB
Inactive:        3827444 kB
Active(anon):    5184532 kB
Inactive(anon):        0 kB
Active(file):    1985220 kB
Inactive(file):  3827444 kB
Unevictable:          32 kB
Mlocked:              32 kB
SwapTotal:       8388604 kB
SwapFree:        8388604 kB
Zswap:                 0 kB
Zswapped:              0 kB
Dirty:               668 kB
Writeback:             0 kB
AnonPages:       5025252 kB
Mapped:           963532 kB
Shmem:            159184 kB
KReclaimable:     249716 kB
Slab:             573492 kB
SReclaimable:     249716 kB
SUnreclaim:       323776 kB
KernelStack:       25612 kB
PageTables:        67976 kB
SecPageTables:         0 kB
NFS_Unstable:          0 kB
Bounce:                0 kB
WritebackTmp:          0 kB
CommitLimit:    24425936 kB
Committed_AS:   31635900 kB
VmallocTotal:   34359738367 kB
VmallocUsed:      168536 kB
VmallocChunk:          0 kB
Percpu:            24448 kB
HardwareCorrupted:     0 kB
AnonHugePages:         0 kB
ShmemHugePages:        0 kB
ShmemPmdMapped:        0 kB
FileHugePages:         0 kB
FilePmdMapped:         0 kB
Unaccepted:            0 kB
HugePages_Total:       0
HugePages_Free:        0
HugePages_Rsvd:        0
HugePages_Surp:        0
Hugepagesize:       2048 kB
Hugetlb:               0 kB
DirectMap4k:     2349544 kB
DirectMap2M:    18874368 kB
DirectMap1G:    12582912 kB

/sys/kernel/mm/transparent_hugepage/enabled: always [madvise] never
/sys/kernel/mm/transparent_hugepage/hpage_pmd_size: 2097152
/sys/kernel/mm/transparent_hugepage/defrag (defrag/compaction efforts parameter): always defer defer+madvise [madvise] never

Process Memory:
Virtual Size: 17780404K (peak: 17780404K)
Resident Set Size: 370796K (peak: 370796K) (anon: 193148K, file: 169456K, shmem: 8192K)
Swapped out: 0K
C-Heap outstanding allocations: 110581K, retained: 8958K
glibc malloc tunables: (default)

/proc/sys/kernel/threads-max (system-wide limit on the number of threads): 250026
/proc/sys/vm/max_map_count (maximum number of memory map areas a process may have): 1048576
/proc/sys/vm/swappiness (control to define how aggressively the kernel swaps out anonymous memory): 60
/proc/sys/kernel/pid_max (system-wide limit on number of process identifiers): 4194304

container (cgroup) information:
container_type: cgroupv2
cpu_cpuset_cpus: not supported
cpu_memory_nodes: not supported
active_processor_count: 16
cpu_quota: not supported
cpu_period: not supported
cpu_shares: not supported
memory_limit_in_bytes: unlimited
memory_and_swap_limit_in_bytes: unlimited
memory_soft_limit_in_bytes: unlimited
memory_usage_in_bytes: 1440076 k
memory_max_usage_in_bytes: not supported
memory_swap_current_in_bytes: unlimited
memory_swap_max_limit_in_bytes: unlimited
maximum number of tasks: 37503
current number of tasks: 111

Steal ticks since vm start: 0
Steal ticks percentage since vm start:  0.000

CPU: total 16 (initial active 16) (16 cores per cpu, 2 threads per core) family 25 model 68 stepping 1 microcode 0xa404101, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4a, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, clmul, bmi1, bmi2, adx, sha, fma, vzeroupper, clflush, clflushopt, rdtscp, rdpid, f16c, pku, ospke, cet_ss
CPU Model and flags from /proc/cpuinfo:
model name	: AMD Ryzen 9 6900HS with Radeon Graphics
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf rapl pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 invpcid cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local user_shstk clzero irperf xsaveerptr rdpru wbnoinvd cppc arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip pku ospke vaes vpclmulqdq rdpid overflow_recov succor smca debug_swap

Online cpus: 0-15
Offline cpus: 
BIOS frequency limitation: <Not Available>
Frequency switch latency (ns): 0
Available cpu frequencies: <Not Available>
Current governor: powersave
Core performance/turbo boost: <Not Available>

Memory: 4k page, physical 32074664k(24052288k free), swap 8388604k(8388604k free)
Page Sizes: 4k

vm_info: OpenJDK 64-Bit Server VM (21.0.5+11-Ubuntu-1ubuntu124.04) for linux-amd64 JRE (21.0.5+11-Ubuntu-1ubuntu124.04), built on 2024-10-22T07:47:02Z by "buildd" with gcc 13.2.0

END.
